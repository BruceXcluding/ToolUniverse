# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Shanghua Gao
# This file is distributed under the same license as the ToolUniverse
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  ToolUniverse\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-19 01:44-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../api/tooluniverse.rst:2 033c613667674c849ba04bda9510d5ba
msgid "tooluniverse package"
msgstr "tooluniverse 软件包"

#: 0241092873ee4014867cb210d8fd9523 437a22f438844010b209200966002919
#: 49662727d10941ac921a402edfb91dd3 605e4241e172408183e09f78b91da4fe
#: 6c9a1ef3c1074e3485934a40ef46776b 780e3067d6aa4b6fbdede3f99924ca5e
#: 8a293407df9e4b9e8aa2f9f8ab7f5201 8cd59cd9368b491c9ab6f22e033888a7
#: 9b2c9f6e7d2740f9b0f5c0e36ea175f8 a22d3ff7eabf489ba2bbb8e9d99fa672
#: aa46e40641954e229092df4633f1f749 cd07f215666147baa4fcf6c5a79fc7c5
#: d3d4915c39694553989129b1c15d1e47 d8a068cb33c54b788e1b8019c456fa14
#: ed39de12a16b4c2a948ba455527342db f86ff989bb5b415d8e96ff84521168a2
#: fb24ae51d9bb4b318ddf464b2ec37a8c of tooluniverse.base_tool.BaseTool:1
#: tooluniverse.execute_function.ToolCallable:1
#: tooluniverse.execute_function.ToolNamespace:1
#: tooluniverse.execute_function.ToolUniverse:1
#: tooluniverse.llm_clients.BaseLLMClient:1
#: tooluniverse.logging_config.ToolUniverseLogger:1
#: tooluniverse.mcp_client_tool.BaseMCPClient:1
#: tooluniverse.mcp_client_tool.MCPServerDiscovery:1
#: tooluniverse.memory_manager.MemoryManager:1
#: tooluniverse.output_hook.HookManager:1 tooluniverse.output_hook.HookRule:1
#: tooluniverse.output_hook.OutputHook:1
#: tooluniverse.output_hook.SummarizationHookConfig:1
#: tooluniverse.tool_graph_web_ui.ToolGraphWebUI:1
#: tooluniverse.toolspace_loader.ToolSpaceLoader:1
msgid "Bases: :py:class:`object`"
msgstr "基类：:py:class:`object`"

#: d5ca4a0f11be4b4a91b79ff8fed28cd2 e14a6959c11043388746ddce7f390360 of
#: tooluniverse.execute_function.ToolUniverse:1
msgid ""
"A comprehensive tool management system for loading, organizing, and "
"executing various scientific and data tools."
msgstr "一个用于加载、组织和执行各种科学及数据工具的综合工具管理系统。"

#: 331aee0177334b57b0fc9ee038ae608d 441e534df241481e9462d68f0610986d of
#: tooluniverse.execute_function.ToolUniverse:3
msgid ""
"The ToolUniverse class provides a centralized interface for managing "
"different types of tools including GraphQL tools, RESTful APIs, MCP "
"clients, and specialized scientific tools. It handles tool loading, "
"filtering, caching, and execution."
msgstr ""
"ToolUniverse 类提供了一个集中式接口，用于管理包括 GraphQL 工具、RESTful API、MCP "
"客户端及专业科学工具在内的多种工具类型。它负责工具的加载、筛选、缓存及执行。"

#: d80489c9a3c2434d9d79c45a7e8a920a dc3a050f0be84075a310850e5e2bacf2 of
#: tooluniverse.execute_function.ToolUniverse:9
msgid "List of all loaded tool configurations"
msgstr "所有已加载工具配置列表"

#: 0178314415fd40bcaf14bc2938e2e724 0392550b7dd64bd4baf875428d50579c
#: 03b1fcde7dc346f8bacb89f7a1575611 0559daae202c46b48201a72b7ddba8d1
#: 08b246284bed4a7f80616c181c2fdef4 090bf25d6c484e41aed51ab8dfb70495
#: 0a4576d30c2b46abad3a453034452353 0c4a3a3a514a43dfa9d2b4154d0508a9
#: 0edac09bb6544f2e959e04bb366ebde8 1c5ef2b01cef449a8921d995ff34c988
#: 228f3ae2fae542aa9a542e0802840e25 2a20897c67784cc885fc7a3b8006d47d
#: 3ea1f654652540ecb93dcbf278eb0cf1 40917e07d68e4a6593776aeb80535145
#: 44404d020988409ebc743eba85711d39 46424c25a3b4427498f7041947c866ac
#: 4e8115c3110a4e9a8b5ae9436c4b7c99 5082976ef1014c3fa430d45e94ad5af0
#: 5ba464cdcca84431b64297f0a8d6f394 5e8365ff5c724d439299b7608ed9a314
#: 66e1c04847ac42c7b878565ca7d0941d 6bc721ffbd0445208a25dece725e40b1
#: 6be869c6adde46f4812a1b954d989a4a 6e06106b1b1b4f3492f99813b784b019
#: 77c318dca58f4f8e87de1b2ef3dba719 7ccd64b09e174f6693e5a7eef7156a26
#: 86e160a5ecdc4e6b881e5ed1f6107e32 8bca1b04ff0d4aae9793245004793cab
#: 925b3ed76adc426195d96e528a6f5184 928d8e1da0e04bc3af3faa9c095c1334
#: 96aa956d0fff4bb489c54a5b4fc1bb8e 970d1e4270e74516b7803eae2222e956
#: 972c8a96acb547e298fc7abada65d7a4 9d0072258b6f4c958472c01879c52447
#: a67d443494a740cd83a14f4aadef5bc4 bae70e8761e14647b8c7413bb1951e4f
#: c9972287545d42d5b69899e6042d44b1 caf7257521884e96a8e95dc21d7dbe8a
#: ce329586a3aa434fa71dc3679cb059b9 d562c2ad82404e4c983e006cc82acde7
#: d5b60218c4b24672b88788ce562e083a ef640bc50eda4914b2200ea9cdd74b9a of
#: tooluniverse.exceptions.ToolError tooluniverse.execute_function.ToolUniverse
#: tooluniverse.output_hook.HookManager tooluniverse.output_hook.HookRule
#: tooluniverse.output_hook.OutputHook
#: tooluniverse.output_hook.SummarizationHook
#: tooluniverse.remote_tool.RemoteTool
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding
msgid "type"
msgstr "类型"

#: 2a956572b0664c7d949ed061e0eeb651 4f75b45f132a4c2fb68dd8bbaf1b311c
#: 62cc19580d664220ae0be2401f4994b2 76aa47889bf24806aa5ddd7b4e65a150
#: 960a62e3510d4313bd44ca86445d7f52 9905fb4763c94ec7a46b5b1ebea45c5d
#: b729a1164483454e86f231cc5bb8bebb of tooluniverse.exceptions.ToolError:19
#: tooluniverse.execute_function.ToolUniverse:11
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:29
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:41
msgid ":py:class:`list`"
msgstr ":py:class:`列表`"

#: 556ff1aebe764cf2b7b15ae111090824 57c1970e47e44f5aaa40e83c85712cfb of
#: tooluniverse.execute_function.ToolUniverse:15
msgid "Dictionary mapping tool names to their configurations"
msgstr "将工具名称映射到其配置的字典"

#: 0fbb47292a884f00b7a9cd38d6baa313 147d2b664a7f4f41bdb4f35284847668
#: 2056a72b228346f88de3687b1913f1f8 4337f256c5674ecea081120bf68665cd
#: 543c543e3aeb48ae9c607566e746d02b 558bd3b7c50d49faaed7ce8389d1be74
#: 6c1c5015d01e4ad4b2aafd473ec1e3f9 7679d8d9ff3741768ae66200c0d629cf
#: 86a9a75329184fd3b062341bd21f4f71 87ca41acc4fc43d18b016f02e873bd16
#: 8de233a9ed3d48fb971c4b24349bea04 9ca18bd59b204fa1892da5ea31488070
#: af1a0ee1fa62435ea05caf407bd93b67 b88aa374da5c41f095db8b3b8c9798cf
#: be4c6dbbf6fd4d7ca85c32f92bab108e bfcca09643f2496c8ac43e4ddb374132
#: d4fb19cb713b446caab6ded32ceadab5 e787d3bacf424d91a27dab4e4b517d2b
#: ef29b83cc0c043a1a3bbfec5a7225c9d fae61af59b354b4c8b53634d0ded2778 of
#: tooluniverse.exceptions.ToolError:25
#: tooluniverse.execute_function.ToolUniverse:17
#: tooluniverse.execute_function.ToolUniverse:23
#: tooluniverse.execute_function.ToolUniverse:29
#: tooluniverse.execute_function.ToolUniverse:35
#: tooluniverse.mcp_integration.discover_mcp_tools:14
#: tooluniverse.mcp_integration.list_mcp_connections:4
#: tooluniverse.mcp_integration.load_mcp_tools:22
#: tooluniverse.remote_tool.RemoteTool:12
#: tooluniverse.remote_tool.RemoteTool:18
msgid ":py:class:`dict`"
msgstr ""

#: 11c5c7811b054ef48bc133721b278751 ef793112922e4d3785c0f019781dee93 of
#: tooluniverse.execute_function.ToolUniverse:21
msgid "Dictionary organizing tools by category"
msgstr "按类别组织的工具字典"

#: 91a61c3881754f918b24dae7cee67fb0 d6a13c346d1148b2b3616e76aabd2677 of
#: tooluniverse.execute_function.ToolUniverse:27
msgid "Dictionary mapping category names to their JSON file paths"
msgstr "将类别名称映射到其对应的 JSON 文件路径的字典"

#: 09e3f3d2c26542b6bd338a921390ad19 6c0ee55f7b224a1e9f83f803ac83bde6 of
#: tooluniverse.execute_function.ToolUniverse:33
msgid "Cache of instantiated tool objects"
msgstr "已实例化工具对象的缓存"

#: 7820ef0994fd42f5be2d7942f7524bae 7fb192f4bcde472b8a1b42dc39a5eb69 of
#: tooluniverse.execute_function.ToolUniverse.__init__:1
msgid "Initialize the ToolUniverse with tool file configurations."
msgstr "初始化 ToolUniverse 并加载工具文件配置。"

#: ../../api/tooluniverse.rst 003a706e11b648fdb49c2ac80204a5fe
#: 005a7fc98f4f4f02b37f9bb5569c8d83 01f397ee8b474254a74144809a542144
#: 02d0438c48234846a6a33c9766b7330d 0321934f95f5442d8064f5464cf88940
#: 06003f2f6e174ef8837652150f5a5a1b 0715071595a543d79d0a633c9b9bdbd5
#: 07642917929849fe903738c7588f249f 07866d403ebe4a128d715b344066c0df
#: 07b41f51a4984a68af9b06ee2c5feb7c 07bd7d29da704b749bf11d5f6c792961
#: 080c72b1068e4aa2a0d259df119f9577 0afbcaf08288440ea7a83582d37ab617
#: 0ba2956922594935b2ebc55cd52c5b26 0e3e5f36631a411e8bf775eb045cc6a0
#: 0fbb75e3fa244f0fa6adc7bd7c646deb 0fcfaf563675471f87ba7f118b2a7076
#: 103fb02e69db4aef8dbf7d82d62160fa 10bc9a7d554048348f17fd36647baf4a
#: 13f2926f5e744bbab17d19c0fc3b679c 14ed9198fb374d8685fc67eab0611f18
#: 17e1e1adec48408ab17e0ded0e8b36d6 180399ad31074b54bb58f734a7e162d9
#: 18b6e0048e7244dda745a0854f2b1691 1965df8014c849e5aae4284cdca93a0b
#: 1a00e6411f834016ba3035fc9a0269a6 1b583246df5243ed81ce5df87ce508c7
#: 1d3500b94b5941748b5df94fcaaf254c 1e61aa6a19f84a3b90ed74adad1e9109
#: 1fc9f5cc33eb49be8f091339094ef5bc 20cfb4a890d1406cab266af6b6eb4db6
#: 2219a491e3a447a8948191ef6205844a 224da3c98869487abbc775071334fb40
#: 2426b6a5e537433ab9e1f7ed6fb2bfc4 24318303a78c469caef3165724f64dc3
#: 2431cd7b65ea4a33878b4a2003dde512 2438d7b1ee0e437e8e8681c56fcef4fc
#: 246804d4640740a29e2defe342b70581 26196d95b8fb439ebe4f56d9ea8930a5
#: 271efd6d518e479fbe2543ee362ff0f8 27adda9c88dc43daa267e35c0b40a6d6
#: 28a0c59f61d34117892b209fe153792b 28e3cc9b408e45acab90e0529f4f062a
#: 2a8da58e31154b1688accda500fcfdac 2aa12f379c2b4444b9ca80f61e7c5189
#: 2b707e6065d9472193fe32d41507859e 2e68920f6dec424283027aaf88a946de
#: 2ee3b9dd16624c4db9dae73316ceb1b5 30195bf8f18e48df9057bcb9b813d340
#: 30baef298eeb43a083af8c379acf30ea 30fe37e1ed8f453bb9ed9769c9d05f28
#: 32c6e0f648f44a618e51f051de64ea92 331360585ca042cda2e2b308e6492a3f
#: 334d3c71242c414792ba9d34488329be 340564a729ca497c989506a10ab1b523
#: 34aeff9a9a0b4edba8941a394b3267d5 34b37e39584d48fcbb4415f04aad1966
#: 3525c179a8d74a6283e7951fdff97105 35e76a0b5de14519bce88f12f40acea8
#: 364ca3988067491db1c1c969aa4b8e11 3785459a6e7f4a039de83e776c7ecabf
#: 37dcc39b98ab49cd9cd6423d10bab75f 384f548cb4454a2ba1c9e88e916b4b63
#: 3c38f19912a24a5fb3ebfde68cc9297b 3d71b1c405ca4a8eaf36722b76301f99
#: 3da3ff82dfae479d8f249064de040d2f 3e04d361860c4590aaed8f729a1f802c
#: 3f624a9575074b4ca9668d3b0cd0e487 40e4dd779bc74eb5934bdf7c2bb09ed1
#: 4266b63919c648e3bd729c1a4d46b889 434705693b11424abbf701e5137279b7
#: 434813647a5d4db5a4022bb09b74cf4d 443d8d74045041398068ff2cc8721dbc
#: 44f1c859a6964edd8a8a6258230655c0 4604a73de043437d89265250d06ed6d2
#: 46308dd9bb774242ad9d5ae920045486 466f22c0c089484c84bec16270b5e349
#: 46a1d8ad8fb946baadd3aa1513e86a92 476d1256fbbf4c2b8a36fd9489b07ec0
#: 47b0a643dd804ac7a8dce4a5764a9cb4 47ba8a3e5bc34b64bd1cee5d931999ed
#: 487713cf17414435adcad03a3ccc8de2 48e443d8d2734405875935130408ff44
#: 49094429513d4b80b381378c837f872c 49e17890c454437caa27a60b566ef897
#: 4bbcd7155351414dbaeed8d4e6bb8828 4c78b6ff4ca942fa930e3ffe145d8503
#: 4cf6011efe634f89b105718f018200c8 4d3c5771c84f4ca0bb9ea85890a36bdd
#: 4ec6b66aba7145e29c460a378d48b983 4f29e17ca32a4f9da962c11a99f2478e
#: 4ff8a59370f147d1966e8649c8cb8aad 50a820aedcd44b0f94fba4afd3be2241
#: 50c200e987804a6cafff9183b60a5f61 51130f2eec6b41eba6c3f3c98a9a286d
#: 519aa133ec5541f29bcc87ca6b07d319 5323f5be8dd24a79842ec29fc548fef6
#: 54754af2cf534374859f46f097e26813 54a306ca57ab498183cbbde5aed6b1ab
#: 55dc1fc4633f4bca9fd49f53fdb3495b 570a7517be6f4532acaefa2aeefabdf3
#: 573ca13e8c2649ecbb2f06e8f2331818 57a63e070cab42f38d201d0f194023a2
#: 5810c4e03c444840a4edeb21c0bb2dfa 5884f5bf4bd74aae873be5bdcb22f382
#: 5a562134f43d42068955884182d6dcd2 5b6884a760304e2ba328e63db7234dfb
#: 5c1a09d09d5949d392f35e578a1be209 5cf7db8709e448c8b0eefde0beba888f
#: 5d67bf0388044b0c881b516ae65fc6a7 5da9a1793e7f44568a4a5bbaa052a89f
#: 5db73fd113b14affa87c6a32bd0a88cd 5dd7eddc99d04054b13c33372c4af573
#: 5ff13d8893504b66ae34572d965cae1c 6135e2b0874d47f9b7d001c43cc128c6
#: 617888a72b994269a8b9d6f7b4ce900f 618866b9e10143bd8dd054b32d389e0f
#: 61edd577d283402a9e1b596b9fc21850 62a657f92292429a8aace7a62b7b66db
#: 63fda7ac64f54ff380c717b326a7cef6 6433218a769c4ebcb17b4920c0bfe61f
#: 64f4dd4cbed24472ba53b52da6acd6a1 6556ba4c0f854c14aa192c5c952ccfe9
#: 68282c2118d1478882ca0e7d0870cbb3 68912d01cf5e481e8acd6ce6b2a50e1c
#: 68bbd310d96543c6acd3ec4650943401 6a1c5db379704abb9a421b5a6d88e231
#: 6a20f3f5a0aa4a00a131e067d0b44c2d 6a36f65857294871a16b766de85c489b
#: 6a6950fcff144ec8bc120b29df1a2439 6b8529cd93ee40aebe9c01e5aec25330
#: 6c4695d956034383825fed73d65c897b 6cf5c893c11a4f55a453b6ad5acf0b37
#: 6d9f78896a264d7ba79933237c00ed10 6dbc907809b849ea95a36a286c6775d6
#: 6eb2554c9f4143af9edc4f4e1eae8c50 6edd61bf86634b01af370fe77ea24987
#: 701f09fa383e41739cff4d57433b7737 709d4b6165b94fe4ad4cbfd3ae07493d
#: 70a99218431e4f91bbf60c683a73b8ce 727b86e9e7554c289ff5232536718d3c
#: 72bf102b48c74bc7b4a23d67aab0a142 73dc4049d97f44dcb81d4f357caa0967
#: 741fe62f32594b8e838ab927f6d97012 753b88ebc6334c9d946e5a07387cf124
#: 75dfb3256b684da59ee2a77a34560c6d 7644bec08ded44b7b19f2bc6b23c672d
#: 775824b17cfb421f90e0e758dc26e381 7837024b33674ca49c8b533f8f298a5c
#: 78f648378da34d21ad14cd8cfb632e3f 792a2785525c4e46a6cdad842cda25f5
#: 79cfe04d6bb34a73af8d92f6f41e8363 7adb2c37fd504ea5856ed878f46f037a
#: 7c650111c1fe469298d1179ba056daf5 7d403d62887041eabf564bb8a40be68c
#: 7dc0ca97f2a64ba48e6ce3f98d557774 7dd6c8787218403995785ba06f606e70
#: 7debba849ac740f0918e0a38edcf612e 7e514990508b4380952568a64e169c09
#: 7f7b442816c34554afcd08e917d323da 7fc74c277c09443aa31a8681b8ebea68
#: 809a1cb78ad342a98dd1a0446110b868 816eda2b800a4b7aaac4a0ba39c090d0
#: 824a20ff065346cc98eb4819af897ca3 82e6ecaff28a43e3bb80fbae0d948bae
#: 8388ba07ef594db6a3186a6a6e26406e 8587ce66a5364dfd8e6d836badd60341
#: 85cde4d82c634aafb09e5a967d0b1299 8654b7f8c0ac4f978aa76e751b325485
#: 865ed33dccac4f84937c054eeb26b639 868de0ef65e541cf91ca8402b27a62cf
#: 87692278a5194cd1bfaaea809e138c33 87b0b542f7ff40b786ce579f1ff7316a
#: 88b3a49ede634255894154ba4c027c44 88da772e92f14c4898edfd33de8c3fc2
#: 8a424421899642c1ad26c4cfffa6aa82 8a68ddc5b1f44f36b82749b56ab0716f
#: 8adaad1811b746b5876496ee3b18ca62 8b43becccf604c6f9b2ea3ff75539b15
#: 8bfe3c9938244f679002df72d60dd698 8cc68b6e3a6d479781183f5cfdc28336
#: 8d064da6839d4d20b99eca17b1c9a45b 8d246ab9f142402d99f85ac4dc3f4f60
#: 8da2a6cb101640a2a617aabbb4227ca2 8e17669667ad4ae78fa8dd708735e4e0
#: 8e186d6669d54dc09e03783a178096f3 904be8c3bbf447dc990592fa5ecf0373
#: 9272a706f3e5450e85c6a9960b6a9262 9346365777f342168591b64b96b5aaa7
#: 93d3af9e98174c1799679309e8f00c09 94f32bef597e427b9e5c409bcdcc45c1
#: 9554e0d43e00459ba588b50b7fa7351e 96141116f6284bf380db8ce7638c3e8f
#: 972d86cd355f4898ab618fe21d852d42 976f66c2c44d46c08a7654080d05d125
#: 982fafb87b55439a98da665cdabfa064 9adc58ccc48a4b41b785a77fb3546269
#: 9c3a22583cb641cc9af2bcf8dd007737 9c4c9669233c4d5c83d3c73207fced5e
#: 9e7e8862990046a7b35f77b8325ae6cc a0ce3bfd91dd455f8bd2402b8fa671d3
#: a14dd40f6a764522b191c49b3b15e50c a2078115406c480f82f8e9f13c0f2b66
#: a21aadb173a7488087df44c64787e6fb a2cf6b44e9e748be848e4aac0be7e9d0
#: a383f8341912429fa3dbf728776e4b9b a3e1cfd6f476451c9760132b8a9cff95
#: a63854360f6248b6b908222b8aa7e648 a7776e8e9b2b4f01a6d29f303d6eb49d
#: a87842d9c0fe4bccb17270c5c20a5d36 a87bc0cc8e0f47b78eb38ef9cc35f787
#: a93283663efc4b4fa72f8a6d04205b2b a9749a86177b4cbaaf561007730aaaa0
#: aa38430207cd4170b19e221e029536ec aadf217bb360438ba82cdd442069935f
#: aae8089b27c44e049bf64b5d90345bbd aaf7ba8fdfff4654a7aa14c9554db14b
#: ab7ad0a7214b4978bb311cb067b4d21d ab85c3ca0bde47fab82fc7b390836b8f
#: ad0cf167b75348e5b0976fb873897ae8 b059234f7bc3403795a85988899c8d80
#: b12a52a0137c49358557509e2c3dd09b b323f231c3644a1cafc3b9397c240070
#: b347c1281ace4a9c88f9a33e419df8eb b4cd0178b52046fc877913f1ff775fa0
#: b4da3fccbef640d89c1614a00a47ae2e b5a67f203fc84f559f54c04276c65a39
#: b6a2c8f983f14f7fb8d07688df32d16c b6b658ea7f594aff90de02a3df3b3301
#: b701f963a4c6473b97ea9f4d856899c2 b76a89b22955444fb447ffcf6b670732
#: b7949baf8f55433d8fa49397b9053eec b7c246d210b54b4fba39765f260cb160
#: b7fe116e341641b2b05df0c41121552b b888671d1b7e4847a5f0415d2a867bc5
#: b8f9908e59dd4cb3b248bf6fe1f3c614 b941829726a943e48076a1bcb16a184c
#: b952bddf4a3640b4882ce8c2b224fb49 b9e2d107a33042aaa027bfff436516c8
#: bad3357511894f758f30b08996c564c4 bb655b9d59354602b57d385a7419e1ab
#: bbe2f674921641f7befa624ea27cbd24 bc6645c68a654828bd14c02cf70fec65
#: bc969451889b49f0a3bedeb65d00e4c6 bcdb33e8805f49bd806dfb89d886688c
#: bebd9d07c9d7496eac83200f1726b635 c05bd6dce2a44fa5ac24be5b1f93a70e
#: c10743991a07455b9586ecc2a8ab047b c186dcd0aeaf43bdb2cd108e66c69a6c
#: c1ff99a335a240658c09f67f03be0839 c315a80196674587a9064cdcb851d7c2
#: c3459990035949beafb6d582645f2c9a c46bce01453240da9139e1821aaa01f6
#: c4816a8e9b8844c5bc8d848f3b0a24c6 c5f8afb60af048e599dd5c4a4f6e4d70
#: c79034fffd494c5f90218bdd422b7da1 c7d7bffd51444e83a0bf7d80f18d2a66
#: ca2683e1c00742acbf5861f0149ac9e4 ca4aca5e803a4fcbb2cad1d10cdbe08e
#: cb33ab214420426a934eaa3fc044e2de cb4592a27874473d9935e57db215b213
#: cbb4e8721c2f49fc8d359fd88350153f cc38779db10140988910be806200fd1f
#: cc3ea89d7ba049d7a190ef808d5f0f7d cea437fa04bd47088739dc0b890a1ffc
#: cf4b3e198bec4be0a9e350028dd5c403 d0174c1ed3994840b6c3c3352263ceb2
#: d03d0734f39f4756af325dcdb0e6a31b d0f89bb6d12d4fa3a0e7ba5baa614051
#: d177ddb5238a45e1b58a93613c8687f5 d1e537f1364648e6b0954b1f302f2f25
#: d2eed52139724471b6b48e8026dcec03 d2fdb2289cde46d0bf3255eb4b7bf302
#: d41c20408ba8429f88a1aa03b7f23dee d434a180d8c740439fd0f40506309ac5
#: d546afb1963845e992c18d3cad21112b d7000e88cb984f5cad741c6a05969390
#: d7151290a3884605a56f187e37447b37 d7fd0694d429460a9a1b9ccbc10c8245
#: d8f31042b2744f75b2ed7c9f15780d39 da0b5071225244dabbd133f18fea01ab
#: da2216a1d505468db69ca0315891fb65 daa93ec4af28406b8f653c56b45657ab
#: de5eb9918cac49298f01a73936819383 defae6860f7f46178894a7a3238fdad2
#: df62fb8b40f546d7a55104996bee0a27 df635c66360c4a25a36f8151d6b9a73f
#: e02dfaa0eb0742e2ba60ebcc63c23c2a e07853a54bbc47cd86ca47f794f5f959
#: e12924b3e2df4b40acc7351976e6fd19 e2bdfd0257854daa963a547a5d42e045
#: e447c425c24f4a86b70fc7a7e51eec43 e4549d60c8d540e38069d56789775900
#: e651e2d53ef345edb33068391710db17 e6a13e530e5e476a80e3cc92297538bc
#: e7ceebea5d1340de937fab1db12ec1a2 ea2436c116504d988d106b1f833a6508
#: ea3d328a89b54f47bea0b30f5368d740 ea7aa196cc9f48a9b7f698236fc13011
#: ea9275ef4cae49b893653d3b9f0615d3 eabce26f70b94d60bc204ad973c59778
#: eaec6e4757dc443298e5881a19cdfb2c ec6053be20c6413a9e2f3a9fe7786c26
#: ed0976e96acf458cb6312e2c93b60890 ee402cf1f38e44d6892926a38d554efa
#: eedfc0a96a0c46918362c354546a61d6 eee0c00322834c7581d62c8c4241578b
#: ef75f41b31e1435c91f3c83ed4046b93 f107011e685b4a41a2c068c2a95e3a3b
#: f1117a34d4e24464a09f0390c9e2b12d f14a08d0751543658004876411b28376
#: f1bba9ec90764a46b586bef9414f2c80 f37e88b45f6a4c138c3375fe0de04047
#: f3cd37d0ed2c4fc4a948b0e54af3e1e8 f7ada116c86e49f7b152c5ece5163836
#: f8a5817de68f4b94acb1d22eaf9c4be0 f8fec67c84d7433a98f38a83f0568586
#: fb668efb4582406d8099d1896e90165a fc7b7a26114e4cf993315d2834335f46
#: fcd8c33335e9410fbea21ddbcfb6baf8 fd5529d0323c4a208d7f92fc0e4cc828
#: fed79d3576c74d63973943c762abd92f ff166bbfdcc2449dad398e231f42feb9 of
#: tooluniverse.enrichr_tool.EnrichrTool.build_graph:3
#: tooluniverse.enrichr_tool.EnrichrTool.enrichr_api:3
#: tooluniverse.enrichr_tool.EnrichrTool.get_enrichment_results:3
#: tooluniverse.enrichr_tool.EnrichrTool.get_official_gene_name:3
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_by_weight:3
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_to_term:3
#: tooluniverse.enrichr_tool.EnrichrTool.submit_gene_list:3
#: tooluniverse.humanbase_tool.HumanBaseTool.get_entrez_ids:3
#: tooluniverse.humanbase_tool.HumanBaseTool.get_official_gene_name:3
#: tooluniverse.humanbase_tool.HumanBaseTool.humanbase_ppi_retrieve:3
#: tooluniverse.openalex_tool.OpenAlexTool.get_paper_by_doi:3
#: tooluniverse.openalex_tool.OpenAlexTool.get_papers_by_author:3
#: tooluniverse.openalex_tool.OpenAlexTool.search_literature:3
msgid "Parameters"
msgstr "参数"

#: 087e501426a244659dad9dbca8d2b7dc d015de25616f48b19952ea0d5ca91849 of
#: tooluniverse.execute_function.ToolUniverse.__init__:3
msgid ""
"Dictionary mapping category names to JSON file paths. Defaults to "
"default_tool_files."
msgstr "将类别名称映射到 JSON 文件路径的字典。默认为 default_tool_files。"

#: 51e5e30eae1042349871746a943b9daf 8735bf0a25b44bc0a485bd60dfc2e091 of
#: tooluniverse.execute_function.ToolUniverse.__init__:6
msgid ""
"Whether to keep default tools when custom tool_files are provided. "
"Defaults to True."
msgstr "当提供自定义 tool_files 时，是否保留默认工具。默认值为 True。"

#: 36e9b9b8a35d4deb970921ad998c9cfa 480708cc6dbf454f9b3d8cbd3e718813 of
#: tooluniverse.execute_function.ToolUniverse.__init__:9
msgid ""
"Log level for this instance. Can be 'DEBUG', 'INFO', 'WARNING', 'ERROR', "
"'CRITICAL'. If None, uses global setting."
msgstr ""
"此实例的日志级别。可设置为 'DEBUG'、'INFO'、'WARNING'、'ERROR'、'CRITICAL'。如果为 "
"None，则使用全局设置。"

#: c48f2fded1d94a16ab823e5e32cc984f eb77ae90190d4d4d818ad2159f2f96dc of
#: tooluniverse.execute_function.ToolUniverse.__init__:12
msgid "Whether to enable output hooks. Defaults to False."
msgstr "是否启用输出钩子。默认为 False。"

#: cb54d2f95ae64e8c996a036f2fbe7fbd d4cec0d57d634ac094e94f7bbee489fe of
#: tooluniverse.execute_function.ToolUniverse.__init__:14
msgid "Configuration for hooks. If None, uses default config."
msgstr "钩子的配置。如果为 None，则使用默认配置。"

#: 1117ae5331b842f5bde611febf9c84d9 e44827906718478d8fcee88d9acd120f of
#: tooluniverse.execute_function.ToolUniverse.__init__:16
msgid ""
"Simple hook type selection. Can be 'SummarizationHook', 'FileSaveHook', "
"or a list of both. Defaults to 'SummarizationHook'. If both hook_config "
"and hook_type are provided, hook_config takes precedence."
msgstr ""
"简单的钩子类型选择。可以是 'SummarizationHook'、'FileSaveHook'，或两者的列表。默认为 "
"'SummarizationHook'。如果同时提供了 hook_config 和 hook_type，则以 hook_config 为优先。"

#: 7e616141c1244eee96a5cb0e18cf1d81 a56bb9130b324f59ab7833e8b9b7907e of
#: tooluniverse.execute_function.ToolUniverse.call_id_gen:1
msgid "Generate a random call ID for function calls."
msgstr "为函数调用生成随机呼叫ID。"

#: ../../api/tooluniverse.rst 02142b779dc94652a96ca216ab510f07
#: 0354aeb6c69b46bc87f355950a4f3d78 036c596fcbb047fd8eab0876e3a5004b
#: 04637153a4614876bb6a758d770d6ffc 048ba8ab93484526b207e7ba1243c363
#: 055c383f916f4b838dc25d5eba9efb95 094ca22f44d64f15894bb444f3e3ff7b
#: 0a2ab313f8b44565af71cc045770f465 0ba9b888b4464998a94ca65d7a2ca460
#: 0c98210797d541e7921de495a3940c45 0e1fe77b18a84bf2bd94d7b1c399059e
#: 0e437449672b4532968cfb1ac84d5ae6 0ee40f08ffe642cb8f330ca7ba75fbc7
#: 11c32570c0a74eebbe20ca7c3b80bf6c 15be340e5b1c404496eb5755600cc68a
#: 17abcdeeb42d4842a3182b9770226865 1d79483a02844bc585ff66ae23af7c20
#: 1e370d58692943b4a56ce5e6189fdd79 1fa3c0edc87e49c9b85110c82cb33440
#: 203decaf19cb46f3bc5da7284cf4b421 21985200346541c6a2942a894671c199
#: 221eb4d73ce14ea1acaaadee8025bb97 22990bbd4f6540779d3d6f74baec7b6f
#: 238de20b241c4021bbff3455cde0ebf7 23b2c0c0be284eea9c4762c84b664283
#: 24784fc0dbd94405bd28ebb245a6abd3 2517378729444bbabf3a699c7e326c0a
#: 26156ee90b0144708cd653c2c8819cc3 2784429875fb4d14932e5653f6a95b0c
#: 280202a0c86240b49f6a2ea90eaaf94e 28b0b31738d54b75a70cd3c523e13a9a
#: 2ad27017a95c4b8580d4e98f90cfdb4f 2b0b3e51171c4e279c0d34281eabbff8
#: 2c9e198b6d3d4e0e9fb38f13f4287c56 2d1dc54dc706439aa2ae40d019b0b2d5
#: 2d94e9eca410492f9285fd8b235a46b4 3047c290b26345c4a44349f781a44425
#: 31abded80ecd40e69a468a1412d4fe6e 3386804d399649ab8a8018e7930c3d7c
#: 347019669f4b44068f8d8da7fc1295e5 35892b055c4f4929a045227997351f71
#: 38cc6a3f912c4bc398eb5dc32b57add1 39aadc39e01d468d82b13ad0d5a17256
#: 39ee1caef77f4df38ec8b0d73f45a7aa 3b0eb46448fb4c2393256098666fba8b
#: 3cabef2254b24841a26ae5a23a06f0aa 3eb780d28216405c8a5c2c333db90ba4
#: 3fb7cb960c014332a3337b275571421b 40057a842009469495fe1a4e067e0d5a
#: 41d072ca624b41b5a5414dae1abaf097 444a6b5e5339454c9cdac32482f50a60
#: 47ecefc829674b08bc7ff4ac27f773fe 4ae3642197d8442e92eb0ddc9efd9a0e
#: 4e8705f7fe35411bb8a93d755f201426 4ea75d5c2f1f4007b7723629377f406c
#: 4ef3ff3688fa445f867b1fb2857a8592 534516299a604bf38ee86a1b8eafad6b
#: 57b1650e16724f53bc6d048ce453f504 59213b2f98214470a52a14a335554de6
#: 5b6c2cac56ca49dfbd69344e769fdf89 5f27db96f86e48dd840fabbc8c018750
#: 614a717153294cdd91dd4958714eb951 667d9940ff0f40d38fcf27d982d0b726
#: 6799e34a28304ffeb6500772030ec366 69b63b95dc1d4d5b8765dd8ca8fc8171
#: 69df36867f7b454c929de4565628efa0 6a68ffbf90c04a149ce040a56b860a8f
#: 6ac6ce620e434ae8b3af2edf2db668d7 6aec05cef6e5484e8c3f62d1156158e2
#: 6afb3e8e05aa4d0f9918670c6982317d 6b04685c3c6441af952c8dbd8d04869a
#: 6b473884c21642b3a6ddbd02718a1ebd 6bcd4d1bc68a4f84abb5119a0eacd6a5
#: 6de8ba84de9d44bfbbae993a52cda18a 6ecf1f3fa07848f1b8c63b6e82c6c7a9
#: 709a3059f4de4589b569c41ae7d19360 72ac516cea22402a9dd4f10e6278979f
#: 76451f5e2840478bb688885e507fe61f 773f3e0c22c94539b0ce886de5fa5624
#: 77dcfdd5234e44909dafa00ac3729f3f 79cb3738f5594a2ca39a4d5fea66d9b0
#: 7a0d303490f74176903d1168c980eaa8 7a746f7c61f646f2a026383ddb3ac5a0
#: 7e79bb5d9fb0468686763c45f5b965b8 8146046b21b544bfb4f36302cd72c540
#: 825248f0dbc041d390989057ad00cbda 8310da261c654b9f8eb8495b33ce4762
#: 835343957b1740eba01511aeab060df6 838b9b71332a4974957649fc47a59e28
#: 840467562087463895124d779bfc22dc 84d605e39b1148128eda9e888cf9109b
#: 84ee88fef5754fad89ab3260834fbcf1 8737bffbb0494f7180b95bdc862e0c54
#: 87f51ab99c544a58a0ea27a354683259 88cf23b534e646d2a6f2512e3469f9ff
#: 8ab28b8f7e414b3991e23e784e42696a 8b92f0124b3445a08680e6b1c3b80ad2
#: 9023260ad95d4d55a0a4e8c6589bda27 906aa09051d54e1ebe2e0b3f3bc3940d
#: 90c24f0e56b14059a5389bb9af3082b2 91fcdfb510924babbdfdb08b0744c98e
#: 93d1ede8fa024dc9843a15965d29b1af 96bc9774c1b14d809c3ebfe603e2fef3
#: 96f7301423f5496688e8b88d3b231fe4 9a1230bbf00e40d3a6f9880662fe4124
#: 9a5eb58a2edf48cf9cb305409a78705d 9d4f3cfe66e7488b8418f1c6152d478d
#: 9d742a9ab9d6477baac1b795fd65b6ba 9e8a1fb56fb348148f77c350b9e83efc
#: a0071f18f443466390b9b8f2001ec97a a120bea6b59145cb828e7c1049bac68c
#: a18b75dde5524bd7852ab4592f838aa9 a28a062ed0694045b84c92edb0b06efe
#: a53c67908fda4e54b1b1bfe01642b340 a54e3bb1a62a42cabfa82b0b05afb4de
#: a75b25b90c1743a4a4fc8c2bd014eda1 aaee98f0f52543719c23fbb007565fa5
#: adf59ca294744d1b8d9e8d8b99a23443 afe735bbe50341df9da39d19ad9ceb0a
#: b04e9aaef33a441e8783a3671b9840b8 b108feea720a432db9247bc2974a99d9
#: b10a52e7eccf466a989d81a6ad8986d8 b3c77427d23b4a91a782e3a2b5fc41d1
#: b7e17003ae634b8b833cc758d36c5a08 b910b1db90964b21a5305914f99d75da
#: bb0c5552ac6747f39c215fca3aace3b6 bd860759c5e143578561b17fe41d7dfb
#: be9af0a5547c469bbc23297e66cda403 c17e829633a94c6e98c195c77f98e5bb
#: c1a7ed249ec648d0bdf6e320582f647a c32da427ba494e20af42bef68348a9b9
#: c366ee8241484dc1812d586d1ce618a9 c36d46cff4f1497a9fdb28746c7f4c80
#: c468749a11d6401397138192203c7c03 c4e77581d0a54c13a50cd6fb988b4f97
#: c87902d5622a445780de122261795071 c920b62d3b7c440a8ddc30eb53fd7a8f
#: c998818cb9234ebfb277b1720d64e060 c99d533bb5ef4b01b10df0b5616445b2
#: cc2cbc6b36a048db868f57556eb1f009 ccfe0a3b867f4beea9b2838635e05cd2
#: ce708092cc244cef807bcd36db01195b cea02508c1044d5ba53ffa71a7fc6566
#: d0631e32ef2c468daa334d7e9fc1a70d d10b3bb4f9ea41f5a14d5b11a0f6789b
#: d119fbbc56d14aacb234720d7556f549 d139de0825374fb7ad05ad472ad2c293
#: d1c8c937a7d048e997985edc874ce4c9 d24fc3ac81a54e3686af4bf2ce1e828c
#: d47c632e17dc4a6dac2612b4dc11cce9 d49ed4eba0394858a0a8ae89b376c990
#: d4ceca1907924317a2c6599ab708726b de300ccd44a54e09904abfad05ea32ef
#: dfa6625728ce4e14a283210e56eb333b e07f521bef7c4ae7b8ac71492608636d
#: e15b5305addb4e3d924270e479e96d22 e22139153c7b4df4981747a0a25ad01e
#: e5c3903be5804a88b82ab1360677f7c5 e6ed65c9b7fc482eae94b406780fceb6
#: e72b81f478794f29a878f0be4ce74234 e855acd240e84fad950a29c2113ceb19
#: e9c76bdb1c36492eab2e95257f376326 eafe80ad0a5c40788f952b1a5b162c96
#: eb6289534bd5452d92b6a306c6c3ecfa ec7c50421ca24dc2bc2ce72a59ba6ffe
#: ee097a8665e545e2942a4bea8309d863 ef22b21f7cde4c47a096ed7bd3a3b98a
#: efa4d374ce6b42438598156631696f63 f027f6ec1ef24b10b9d668fdc9f4da87
#: f1b87011c4484d3b8bc6d22546e9c82f f344a613750f46569436453774b12fb7
#: f6e406106134417fb8c3ea28e68b7160 f8fe26250b184b6ea57c64ae21a1d1d4
#: fb8b1c9abc804bcd9868ff63d895d139 fbb8f102822e4599b9850f23215abcc8
#: fe0c10d02bc0433f8093c6a52331248a of
#: tooluniverse.admetai_tool.ADMETAITool.run:5
#: tooluniverse.agentic_tool.AgenticTool.has_any_api_keys:3
#: tooluniverse.base_tool.BaseTool.get_cache_key:8
#: tooluniverse.base_tool.BaseTool.get_default_config_file:13
#: tooluniverse.base_tool.BaseTool.get_tool_info:3
#: tooluniverse.base_tool.BaseTool.handle_error:8
#: tooluniverse.base_tool.BaseTool.supports_caching:3
#: tooluniverse.base_tool.BaseTool.supports_streaming:3
#: tooluniverse.base_tool.BaseTool.validate_parameters:9
#: tooluniverse.boltz_tool.Boltz2DockingTool.run:13
#: tooluniverse.compose_tool.ComposeTool.run:8
#: tooluniverse.core_tool.CoreTool.run:5
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool.run:6
#: tooluniverse.custom_tool.CustomTool.run:5
#: tooluniverse.default_config.get_default_hook_config:3
#: tooluniverse.enrichr_tool.EnrichrTool.build_graph:7
#: tooluniverse.enrichr_tool.EnrichrTool.enrichr_api:7
#: tooluniverse.enrichr_tool.EnrichrTool.get_enrichment_results:7
#: tooluniverse.enrichr_tool.EnrichrTool.get_official_gene_name:6
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_by_weight:8
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_to_term:8
#: tooluniverse.enrichr_tool.EnrichrTool.submit_gene_list:6
#: tooluniverse.extended_hooks.FilteringHook.process:12
#: tooluniverse.extended_hooks.FormattingHook.process:12
#: tooluniverse.extended_hooks.LoggingHook.process:12
#: tooluniverse.extended_hooks.ValidationHook.process:12
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.run:6
#: tooluniverse.humanbase_tool.HumanBaseTool.get_entrez_ids:6
#: tooluniverse.humanbase_tool.HumanBaseTool.get_official_gene_name:6
#: tooluniverse.humanbase_tool.HumanBaseTool.humanbase_ppi_retrieve:9
#: tooluniverse.logging_config.get_hook_logger:6
#: tooluniverse.logging_config.get_logger:6
#: tooluniverse.mcp_client_tool.MCPServerDiscovery.create_mcp_tools_config:8
#: tooluniverse.mcp_tool_registry.get_registered_tools:3
#: tooluniverse.openalex_tool.OpenAlexTool.get_paper_by_doi:6
#: tooluniverse.openalex_tool.OpenAlexTool.get_papers_by_author:7
#: tooluniverse.openalex_tool.OpenAlexTool.search_literature:10
#: tooluniverse.output_hook.FileSaveHook.process:12
#: tooluniverse.output_hook.HookManager.apply_hooks:16
#: tooluniverse.output_hook.HookManager.get_hook:6
#: tooluniverse.output_hook.HookRule.evaluate:12
#: tooluniverse.output_hook.OutputHook.process:15
#: tooluniverse.output_hook.OutputHook.should_trigger:12
#: tooluniverse.output_hook.SummarizationHook.process:17
#: tooluniverse.package_tool.PackageTool.run:6
#: tooluniverse.pmc_tool.PMCTool.run:5
#: tooluniverse.remote_tool.RemoteTool.get_remote_info:3
#: tooluniverse.remote_tool.RemoteTool.get_server_info:3
#: tooluniverse.remote_tool.RemoteTool.is_available_locally:3
#: tooluniverse.remote_tool.RemoteTool.run:9 tooluniverse.smcp.SMCP
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:18
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:11
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:17
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:13
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:19
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:12
#: tooluniverse.toolspace_loader.ToolSpaceLoader.load:5
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.run:5
#: tooluniverse.utils.format_api_response:8
#: tooluniverse.utils.format_error_response:13
#: tooluniverse.utils.get_parameter_schema:6
#: tooluniverse.utils.normalize_gene_symbol:6
#: tooluniverse.utils.validate_hook_conditions:9
#: tooluniverse.utils.validate_hook_config:9
#: tooluniverse.utils.validate_query:6 tooluniverse.utils.yaml_to_dict:6
msgid "Returns"
msgstr "退货"

#: 290947aac6e8478095b79d43b87ae4b3 ae51a45743ef43c18768a18834cb0b44 of
#: tooluniverse.execute_function.ToolUniverse.call_id_gen:3
msgid "A random 9-character string composed of letters and digits."
msgstr "由字母和数字组成的随机9字符字符串。"

#: ../../api/tooluniverse.rst 018c5281edcc424b82737687d7559ebe
#: 02c7d88c68fa4f119270e73ea77c2c22 0929381a9f2a45cf959891e9570c2811
#: 09dd751e455048b5975a29e5fe3d6145 0d02f5e5fa954e358158ecb1eacc7e13
#: 0d531d17b4a54cf08c68d7f66b6c052a 0f67de98aa49463fbea1e53f17d91ccb
#: 11e1b1a62d7a4ab3ab18db269cfd4234 15f3b064922f4b67b03e66f2a15bd5d2
#: 19ec2b00125441ba90fa6fc41e13cfe4 1b0c9d06c0ac455391cf6b938636decc
#: 1e1b2485262a4692a29bacb09b380761 1ee1b40c10b849ee9d14e1115ea0eb6f
#: 1f500c509aaf46509487e5a85edea902 20dec2fae32e4f4abba8b15b1706180e
#: 22cfc2be8d7142408d115d3db2d64d0e 236ad50704014230bb47b6079b64fc03
#: 245317528c4d461285b021535b6aa186 281adc5f929f4c05acdef83a02f59637
#: 283ec7c472d048bcbc427c916edfa327 2c21518b320e47a090d87ef5dd4d3597
#: 31662e3f30c84d32b44fe1d8c414f2f7 340853f603c742a895a7eff5a1b1d4b9
#: 39e9dd61a68b4db5ba4424229a43c33e 3ad9ffbe4d444af596ee5227f1b00158
#: 3c5c097021b443619e07baf2e92a2bb1 3d2be5cf858149ad960491f64e7c198e
#: 3dc1707c6ce9435c83d57eae0a98043b 40057b290e2341ce80d7a0f0a37a6a88
#: 407010ce1bc9458e9e8f84282ae25918 40f523f4575649afab2dbf00f1c288f4
#: 4291e532867246d8a105db43e9d674d8 4370d3bb7efc49a1990cfa5064c69da9
#: 4798d0faa6fe4882ad406805ff8e81a8 481ccce70ed448f89d564259c15d632a
#: 551830d2e0894893944b3257e3c9c19c 5abf20f6c3d349c5b323d6b2cc41af78
#: 5db252279b0b4175814289dd69eb2f71 620d7658ef584aaca801d47263307d89
#: 62977c69292a40369cb7de3aa6854742 654cd54ee64740e3a2dc079302c04cde
#: 6562f6aa66cb44438118998f97c1dd82 6cf0346ba7054a15a70f4c7ff7a388fb
#: 6ea4363dae56452384eec12eb7ff41b0 70e78641322a44d28628e991782700ae
#: 74af848a21ce42bc8b7042364d20d69d 7995682ff09a4cf3a325b92c6072703e
#: 7b2f4fbc12964600a6c75dacd7af0922 7b463b5209fa4d3599d4b5a751bb66e8
#: 7b926db5630248aaad669d3bbf8012a5 7cfb57e6c69f468cb16caa9bd978daa9
#: 8a32ec9ae15441cbafa33b70fe2527c3 8f25b14ca4b8430ba52261af78d9e148
#: 8fe40447e8ee41858862844b599e0501 90485048ce0e4365a006b9734fe7a889
#: 933093439bfe433681e337f26445d34f 93ac8f8076e443f5a8bb71db024ff79a
#: 94aa5ccc4e2e49d8b5faf86ec1fd660b 958bb949f0c5486a95277a261ec59b4a
#: 96229b87b07045118bb07bb567c314d5 9aa1e9a9d00b4a399f5d129e1d08c881
#: 9baa00a8bd4e4705a72047e666d91ddf 9d81fa12ef4a432289f9731ad6579b4d
#: a4a7c4011db14110aea363fb91917ce8 a4afcb6207f040969172ea57ccdc148b
#: a52181c54b4144899df51c014b1e8361 ab84567cc53f4d7ba115594d0e8d7221
#: abc41e269a2d41fba24e6fe243ea569b b1ede4ecef5949fd9bc19638f5003cd6
#: bbea6ba0abc84a91bea3ed279c62ba14 c454751e03f042139fa731be0bb041ee
#: c95282b984da40ed931645f5312b0aa6 cc3b5d7d10704364a3e502631a1971cb
#: cdf6cee4e6de4887b03d4da9c3d279cc d01524236a7c4d5db24690c405667b51
#: d355a27fac974a0686c3af78b2a6194a d823cf03a40241d1b1299164d1ab5337
#: d8414891d6d34f909e3a0a177382aaec dcf7b8cdecdd4dbb9a0de52a750513d4
#: e81e09cd6a39491face19c33c5b43f81 e9995f21e3aa4e8d9e1a1e91df2169f3
#: eded0175b4f64280b692a1526f91a792 f32fd6ef7b744a23ae65d955fa49cb27
#: f7727ba4c1874ca58e8aade683f2487d f8c1e18d8bbd4ecabbc2b715688b9473
#: fb08c2050ae94b29bb91a23cd522d076 of tooluniverse.smcp.SMCP
msgid "Return type"
msgstr "返回类型"

#: 77d89a3188004d29b9f552b8359b4a0e fc6bf20123f74d87adc292524d36c70c of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:1
msgid "Validate a function call against tool configuration."
msgstr "验证函数调用是否符合工具配置。"

#: 2a3ffd90a37b4db2b3d3c66cbda0ffdf 4d829f57df514d84a3ba03805345a317 of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:3
msgid ""
"This method checks if a function call is valid by verifying the function "
"name exists and the arguments match the expected parameters."
msgstr "此方法通过验证函数名称是否存在以及参数是否与预期参数匹配来检查函数调用的有效性。"

#: 0a2ed94baf7044d5ac0e0b02b8b271e1 479e6d80c4fe44d7acf54e783a3cac2a of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:6
msgid "Function call string or data to validate."
msgstr "函数调用字符串或需验证的数据。"

#: 08eb6d643e2145a69ff146d8e00dce8b 18422ce0d8b9482595ec3f835ddb01e8 of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:7
msgid ""
"Specific function configuration to validate against. If None, uses the "
"loaded tool configuration."
msgstr "特定功能配置以进行验证。如为 None，则使用已加载的工具配置。"

#: 05eb24394577430f83e39b3945ae4b26 2187a1b2ad794e0ea07a6d123db8eeff
#: a33642d9c01b45398da28cf3d668251a b168db11a0784ef28d96b3210d49b85a of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:10
#: tooluniverse.execute_function.ToolUniverse.run:11
msgid "Format type for parsing. Defaults to 'llama'."
msgstr "解析的格式类型。默认值为“llama”。"

#: 690d6a5e086b4dee9d18a5bad22f6c20 8b1b2a28005946e39c7ce1ee0f0dc244 of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:13
msgid ""
"A tuple of (is_valid, message) where:     - is_valid (bool): True if the "
"function call is valid, False otherwise     - message (str): Error "
"message if invalid, empty if valid"
msgstr ""
"一个包含 (is_valid, message) 的元组，其中：  \n"
"- is_valid (bool)：如果函数调用有效，则为 True；否则为 False  \n"
"- message (str)：无效时的错误信息，有效时为空字符串"

#: 7bc162faeda24a35ba0d1aa757e77b46 fcae84a8b00648cd820a5922c2850cdd of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:15
msgid "A tuple of (is_valid, message) where:"
msgstr "一个由 (is_valid, message) 组成的元组，其中："

#: 7af6654b1c514fdda6daa5bae035f901 eb3922abde2f432d99882f9bc4ba6bd3 of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:16
msgid "is_valid (bool): True if the function call is valid, False otherwise"
msgstr "is_valid（bool）：如果函数调用有效，则为 True；否则为 False。"

#: 252ce6216b7b4c3dbcf837addc97e9f9 29586dad0a114ec18c61066736fecb38 of
#: tooluniverse.execute_function.ToolUniverse.check_function_call:17
msgid "message (str): Error message if invalid, empty if valid"
msgstr "message (str)：错误信息（如果无效），有效时为空"

#: 7f2f09e46e504f32990e6fd46bdb3284 ec9b65661fc9403eb50b56bda9a840ea of
#: tooluniverse.execute_function.ToolUniverse.clear_cache:1
msgid "Clear the result cache."
msgstr "清除结果缓存。"

#: 3d86af917f08424ab2aedf766741bf24 6b02d739448d41418174de3b9a495cf2 of
#: tooluniverse.execute_function.ToolUniverse.close:1
msgid "Release resources."
msgstr "释放资源。"

#: 2fe46caecdf44a2c9ef84056b98bb339 b12c5d06cead402aa5089d533272c201
#: e4e9740adc0044ce9484f1005049541c of
#: tooluniverse.mcp_integration.discover_mcp_tools:1
msgid "Discover available tools from MCP servers without loading them."
msgstr "无需加载即可发现 MCP 服务器上的可用工具。"

#: 66772d05e4a64cd8b4cd6e147491a642 e1a8fb9b37e545e8bb4dd61a539e612f
#: f1f4996f2f3f4e1ca441c95ed81220ef of
#: tooluniverse.mcp_integration.discover_mcp_tools:3
msgid ""
"This method connects to MCP servers to discover what tools are available "
"without actually registering them in ToolUniverse. Useful for exploration"
" and selective tool loading."
msgstr "此方法连接到 MCP 服务器，以发现可用的工具，而无需实际将其注册到 ToolUniverse 中。适用于工具的探索和选择性加载。"

#: 0691dd576ab2494d8b2f408a1a9957aa 42dff23666674b0994d4f9157b413054
#: 942f865a672548aeb3095033edc95f20 of
#: tooluniverse.mcp_integration.discover_mcp_tools:7
msgid "List of MCP server URLs to discover from"
msgstr "用于发现的 MCP 服务器 URL 列表"

#: 2256b31e180645e9b71e075294c8ef6b 2f68638fa24548f99ec0e6cd66408eb1
#: 42b5164166b54145bd940997b5fc5488 of
#: tooluniverse.mcp_integration.discover_mcp_tools:9
msgid ""
"Additional options: - timeout (int): Connection timeout (default: 30) - "
"include_schemas (bool): Include tool parameter schemas (default: True)"
msgstr ""
"附加选项：  \n"
"- timeout (int)：连接超时时间（默认值：30）  \n"
"- include_schemas (bool)：是否包含工具参数模式（默认值：True）"

#: 737f8ab183534774a4ccd7ff8fe25edf b9932ea407d14bec8be2bad399aaf367
#: da03e1ceaf1c47508ac295b126884f3a of
#: tooluniverse.mcp_integration.discover_mcp_tools:13
msgid "Discovery results with tools organized by server"
msgstr "按服务器组织的工具发现结果"

#: 439e02fef8a141099481f5e890ba92dd 472f4f3e731d4df1a09b0a66613ba0a7
#: 513a62bc06034b6bad2f0b0a5180d140 53caeff933b9429ead703bb9f35546f5
#: 5ceb7a0d88d147d18c9c8ab239467ed8 5eeab8f8f9ea4da0bb32827f1fd24acd
#: 6253e23265f14c6383094f291f5a54de 754a0dee95e94f08b366bb23cf2e2da2
#: 960dc647c8de496e9bd7d83363dd2449 a5300a36f1ec45cd92826ad029ceec71
#: a7f27183ff7f41e8a4ac98b16e04347c aef2c037c7bd40f096322929c38e1d4c
#: c4230790a98a4c86abab185d069df819 cadcf28b32d64d788cfbe4780b9f1223
#: d0da40dbe1af4e6483e9a8dcf5e41583 e6229c4ffa5c4cd5a3bc8182b2d8fc1a
#: fc0ff94ccabd44db990279b552bbb897 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:38
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:14
#: tooluniverse.mcp_integration.discover_mcp_tools:16
#: tooluniverse.mcp_integration.list_mcp_connections:6
#: tooluniverse.mcp_integration.load_mcp_tools:24
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:8
#: tooluniverse.mcp_tool_registry.register_mcp_tool:22
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:17
#: tooluniverse.mcp_tool_registry.start_mcp_server:7
msgid "Examples"
msgstr "示例"

#: 19dfbab43fc9479fb4bd9b30ed81cc69 ad9af90b503e4ea591e5d322f068355f of
#: tooluniverse.execute_function.ToolUniverse.dump_cache:1
msgid "Iterate over cached entries (persistent layer only)."
msgstr "遍历缓存条目（仅限持久层）。"

#: 3b27cc42b6174c14bf83b56a8caed856 64263820c9444dbdb645145a07f3caf4
#: 80f55a759a2e48a3b50f76f52fa370ca of
#: tooluniverse.execute_function.ToolNamespace.eager_load:1
#: tooluniverse.execute_function.ToolUniverse.eager_load_tools:1
msgid "Pre-instantiate tools to reduce first-call latency."
msgstr "预先实例化工具以减少首次调用的延迟。"

#: 8de4a8d3121144c39ba940c5def50777 ca5b4872df20405395784eaa60eefec0 of
#: tooluniverse.execute_function.ToolUniverse.export_tool_names:1
msgid "Export tool names to a text file (one per line)."
msgstr "将工具名称导出到文本文件（每行一个）。"

#: 24f9807f29f841c1a3fb25fdc9fde7f1 53dc76584f9a4598a3a99931fa74bf3a of
#: tooluniverse.execute_function.ToolUniverse.export_tool_names:3
msgid "Path to the output file"
msgstr "输出文件路径"

#: 05f206642fe44eeb8caee29ac2430265 74ab947687b14d5e9be6117bde5f6076
#: a3e61ddedfca4b59b553d1e0815d5c45 abdd5f1f6dfb45988f9c82fe8eed93b2 of
#: tooluniverse.execute_function.ToolUniverse.export_tool_names:5
#: tooluniverse.execute_function.ToolUniverse.get_available_tools:3
msgid "List of categories to filter by"
msgstr "可筛选的类别列表"

#: 4898361d1a2e4e4f852eed6ee7e91161 4f80fb9439c74a198306c8457a9b740f of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:1
msgid "Extract function call JSON from input data."
msgstr "从输入数据中提取函数调用的 JSON。"

#: 77f48be7e54f4661802a1197fb6477d9 bb70118d3a084115a6f7df62a19b2ad4 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:3
msgid "This method delegates to the utility function extract_function_call_json."
msgstr "该方法委托给工具函数 extract_function_call_json。"

#: 172b5edd8c5b4e069c5fa8217d339db0 f1d6d3dfb1e84f08a8dbae93facc4600 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:5
msgid "Input data containing function call information."
msgstr "包含函数调用信息的输入数据。"

#: 684b31c1ce6748e18c9c8aff645e566a a99d93bbff194eadb89916b3cdacee54 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:6
msgid "Whether to return message along with JSON. Defaults to False."
msgstr "是否随 JSON 一并返回消息。默认值为 False。"

#: 1489025b0c2a4b3a869ffc6ebca1a722 160233b8a4bc47ae9537c1f588161faf
#: 32af119e8d24489bbc0a2b1ece068b3b b841790f0fc7459aa00e9a1c38cb7039 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:8
#: tooluniverse.execute_function.ToolUniverse.run:9
msgid "Whether to enable verbose output. Defaults to True."
msgstr "是否启用详细输出。默认值为 True。"

#: 593068b0a83843eabfd5ec660cf1aa80 f10067785f3e4224a7cbd69d50e48cb3 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:10
msgid "Format type for extraction. Defaults to 'llama'."
msgstr "提取的格式类型。默认值为“llama”。"

#: 2abaceb604f04d62955baa37fe883efe 889069174a0e4a11b6e9feeee55ee696 of
#: tooluniverse.execute_function.ToolUniverse.extract_function_call_json:13
msgid "Function call JSON, optionally with message if return_message is True."
msgstr "函数调用 JSON，可选包含消息内容（当 return_message 为 True 时）。"

#: 44941588db814581b3797e75a4e33c39 c1d50aa837cc461795878176de20e2d8 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:1
msgid ""
"Directly filter tool name and description lists based on names and/or "
"categories."
msgstr "根据名称和/或类别直接筛选工具名称和描述列表。"

#: 06eff63096b9410faa418a23fb20fc1a 19e7638bc20b431bbb0f40b714925f65 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:3
msgid "DEPRECATED: Use filter_tools() and manual list filtering instead."
msgstr "已弃用：请使用 filter_tools() 并手动进行列表过滤。"

#: 1c2d4881da2e4ce8b47e3194b6b56dac addebc073f9a45e5a80fbb811e8f4e20 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:5
msgid "List of tool names to filter."
msgstr "工具名称筛选列表。"

#: 60e613182fa5451b8ae97beb2c979619 94656cab8921484fa03d098a104c5d56 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:7
msgid "List of tool descriptions to filter (must correspond to tool_name_list)."
msgstr "用于筛选的工具描述列表（必须与 tool_name_list 相对应）。"

#: 2764cd5586974db0a79e9efd76ea5073 33acac35fd774fcdaf730dde0ec31f81
#: 6c0bd046dd7a4e81bf953474f0a44f4b 93d3ac5966dd456b9ce80917168505ff of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:9
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:9
msgid "List of tool names to include."
msgstr "包含的工具名称列表。"

#: 0e0959a7c16c44ecb1706c215e322c23 2fa53ace997746b7844651561ac1378e
#: 73ade62abe354c86b2b8c23483b534f1 a7e2ae2190154a2ea715db8ebabfc440
#: acc534d45c5840b1a6f053ca37d4ef05 eeae0a3d772d4cb8861c189bc9620bc5 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:11
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:11
#: tooluniverse.execute_function.ToolUniverse.select_tools:7
msgid "List of tool names to exclude."
msgstr "要排除的工具名称列表。"

#: 2a5b7648aacb4dd8a9a0b0707e0d2782 6b1c31ff745147e896692caacdbddd63
#: 79650f1adc7e4134b8bf31c47c53d1c3 b8004c5233fc4ea0baeb14ef33b9c162 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:13
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:13
msgid "List of categories to include."
msgstr "包含的类别列表。"

#: 6b1ba33285d5438fbcf738d1c1963880 78c3efa26eba46dd976ebcebfb6bdc5d
#: d6af979878a2405889c174824d5a852b f4bd2bba3f8d4793af4770c434be9591 of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:15
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:15
msgid "List of categories to exclude."
msgstr "要排除的类别列表。"

#: 60ae19e74a844c88803b0c7ba8c5c2e5 636dc5e6536147a9be86faa82f13273f of
#: tooluniverse.execute_function.ToolUniverse.filter_tool_lists:18
msgid "A tuple containing (filtered_tool_name_list, filtered_tool_desc_list)."
msgstr "包含 (filtered_tool_name_list, filtered_tool_desc_list) 的元组。"

#: bd8311aa98e843afa4390a210906bdf2 bea2c8e2d3c74fe88fecf323144ca68e of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:1
#, fuzzy
msgid "Filter tools based on inclusion/exclusion criteria."
msgstr "根据包含/排除标准筛选工具并去除重复项。"

#: 49e55a83980b4ca1a50e27118938c634 ec1a654ac3014751aab32a92bcdd48dc of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:3
#, fuzzy
msgid "Set of tool names to include"
msgstr "包含的工具名称列表。"

#: 7078ca70d01a4d9d97c6f6babd7456e8 e79f806548484442a6178348887a4f1e of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:5
msgid "Set of tool names to exclude"
msgstr "要排除的工具名称集合"

#: 414b2310075c47278f58e212c61226ff d6053729332f4e1ca493620a7606cb6c of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:7
#, fuzzy
msgid "Set of tool types to include"
msgstr "包含的工具名称列表。"

#: 6d81e7c75705423186303827fc8fcf30 a51e07ce177e451888750784f791a9ce of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:9
#, fuzzy
msgid "Set of tool types to exclude"
msgstr "要排除的工具名称集合"

#: 012eb0be64e54f5e87a2ec4b04917ca4 7e53819fd1e54cc8ac8ebcf11a164ad2 of
#: tooluniverse.execute_function.ToolUniverse.filter_tools:12
#, fuzzy
msgid "Filtered list of tool configurations"
msgstr "工具配置列表"

#: 3693734aa0b54185a28f87fa455edfc3 a433505e247746e29286d4e403b32c65 of
#: tooluniverse.execute_function.ToolUniverse.find_tools_by_pattern:1
msgid "Find tools matching a pattern in their name or description."
msgstr "查找名称或描述中与模式匹配的工具。"

#: 84a6425725d64442bfd7012a1899f89f fd1cf4d306af448a8e0762edc0b36768 of
#: tooluniverse.execute_function.ToolUniverse.find_tools_by_pattern:3
msgid "Pattern to search for"
msgstr "搜索模式"

#: c594e51fabf04b7693e5216fa16edee2 c7cdfebc1cd64f3198c762e21f3236cc of
#: tooluniverse.execute_function.ToolUniverse.find_tools_by_pattern:5
msgid "Where to search - 'name', 'description', or 'both'"
msgstr "搜索范围 - “名称”、“描述”或“两者”"

#: 8612ad9e2ba74b2db4ec4aca113f15cd 86f18e83ec4e40f8824686e3f47973e1 of
#: tooluniverse.execute_function.ToolUniverse.find_tools_by_pattern:7
msgid "Whether search should be case sensitive"
msgstr "是否应区分搜索的大小写"

#: 8883886c73454437b6435c1c2381a1a0 e15ba3daa12d454ab019b2de44362529 of
#: tooluniverse.execute_function.ToolUniverse.find_tools_by_pattern:10
msgid "List of matching tool configurations"
msgstr "匹配工具配置列表"

#: 731b61b0ac0343b8b9f3f46972034c08 7df837c01a964958828247855544c9fd of
#: tooluniverse.execute_function.ToolUniverse.force_full_discovery:1
msgid "Force full tool discovery, importing all tool modules immediately."
msgstr "强制进行完整的工具发现，立即导入所有工具模块。"

#: 6e7c950286a24dac8c5c47b902c966b9 8d33057dc2da47158142872784b480a0 of
#: tooluniverse.execute_function.ToolUniverse.force_full_discovery:3
msgid ""
"This can be useful when you need to ensure all tools are available "
"immediately, bypassing lazy loading."
msgstr "这在您需要确保所有工具立即可用、绕过延迟加载时非常有用。"

#: 23650d88d3b24e75bb468fbe74fc7e5d b9b9fcaa46cd465ebcdc49d530699b75 of
#: tooluniverse.execute_function.ToolUniverse.force_full_discovery:6
msgid "Updated tool registry with all discovered tools"
msgstr "更新的工具注册表包含所有已发现的工具"

#: 3e82472cd92a472ea5cb853a37e1a418 ee763f5f488147a18fd34668b7080f75 of
#: tooluniverse.execute_function.ToolUniverse.generate_env_template:1
msgid "Generate a template .env file with all required API keys"
msgstr "生成包含所有必需 API 密钥的模板 .env 文件"

#: a8cd77213c5944a4b0478d2b0b35e853 ac4cc43da131456b993c0abe35fa56e0 of
#: tooluniverse.execute_function.ToolUniverse.get_available_tools:1
msgid "Get available tools, optionally filtered by category."
msgstr "获取可用工具，并可选择按类别筛选。"

#: 5807557bca9a42ebba86bb47fed9c5c5 e200e654ee1b4791809d7f7feac02f5b of
#: tooluniverse.execute_function.ToolUniverse.get_available_tools:5
msgid "If True, return only tool names; if False, return full configs"
msgstr "如果为 True，则仅返回工具名称；如果为 False，则返回完整配置"

#: b1a2dbde91484956b1ee8395b9b41b82 b5a1302fe3df4f50a1374dcad8e6ac28 of
#: tooluniverse.execute_function.ToolUniverse.get_available_tools:8
msgid "List of tool names or tool configurations"
msgstr "工具名称或工具配置列表"

#: 0c800a0d3b06439b8643c24286ba042d ddbac0556f5647df9ea391824195a25e of
#: tooluniverse.execute_function.ToolUniverse.get_cache_stats:1
msgid "Return cache statistics."
msgstr "返回缓存统计数据。"

#: 4c11c38a365f4b198bf01adf49c28061 ccd294639a13445f83b0e340f9b15b16 of
#: tooluniverse.execute_function.ToolUniverse.get_lazy_loading_status:1
msgid "Get information about lazy loading status and available tools."
msgstr "获取有关延迟加载状态和可用工具的信息。"

#: 6b9e8e69e7d544f7904422f2393862fa e62c85893eac443e982096bbcb144e8f of
#: tooluniverse.execute_function.ToolUniverse.get_lazy_loading_status:3
msgid "Dictionary with lazy loading status and tool counts"
msgstr "具有惰性加载状态和工具计数的字典"

#: 303bca357a3a4dc190dd1107f5d6fe12 ff6f0a8681264b419f8a55351e91b666 of
#: tooluniverse.execute_function.ToolUniverse.get_one_tool_by_one_name:1
msgid ""
"Retrieve a single tool specification by name, optionally prepared for "
"prompting."
msgstr "根据名称检索单个工具规格，可选择准备用于提示。"

#: 0e2285a81f3049bea08c4f43aecd99f7 1e8ad5c0f1f1494e9b5bef61a07ee207 of
#: tooluniverse.execute_function.ToolUniverse.get_one_tool_by_one_name:3
msgid "This is a convenience method that calls get_one_tool_by_one_name."
msgstr "这是一个便捷方法，用于调用 get_one_tool_by_one_name。"

#: 0c09458208e647c89eba6644cebc918d 58466eb3e7fc4a13be204aa02233d914
#: 63e0dbe1e08f4c1998610e4682e575b6 81a6b900fb6a47d49cabc821c49cc7a8 of
#: tooluniverse.execute_function.ToolUniverse.get_one_tool_by_one_name:5
#: tooluniverse.execute_function.ToolUniverse.tool_specification:3
msgid "Name of the tool to retrieve."
msgstr "要检索的工具名称。"

#: 3916da65edd64476b32634721c03b0bf bed74db0fb9a4f6d8c92924cde1a481f of
#: tooluniverse.execute_function.ToolUniverse.get_one_tool_by_one_name:7
msgid ""
"If True, returns tool prepared for prompting. If False, returns full tool"
" configuration. Defaults to True."
msgstr "如果为 True，则返回用于提示的工具；如果为 False，则返回完整的工具配置。默认为 True。"

#: 190b2fa89334459aa3315e6b8fc9d704 50d218c9287a421d9183eb67556602af
#: 57bfcc548d66467398f5a31534b66744 762ac52b95254405ba58d9b674bc451e
#: 98c48391ea3842f5a8d0cee4c31d3056 dfdcd646349a480f842547c855272972 of
#: tooluniverse.execute_function.ToolUniverse.get_one_tool_by_one_name:11
#: tooluniverse.execute_function.ToolUniverse.get_tool_description:8
#: tooluniverse.execute_function.ToolUniverse.tool_specification:12
msgid "Tool configuration if found, None otherwise."
msgstr "如果找到工具配置，则返回；否则返回None。"

#: 4226ddfdf1df41d0a2dee887212b35e4 d0202c2387bd432ba717116d4dff536d of
#: tooluniverse.execute_function.ToolUniverse.get_required_parameters:1
#, fuzzy
msgid "Get required parameters for a specific tool."
msgstr "获取特定研究的所有关联。"

#: 3c3d9a3618af4e9db4452f4387a98467 add45611ac404857bcd0bdbdaabc5b1d of
#: tooluniverse.execute_function.ToolUniverse.get_required_parameters:3
#, fuzzy
msgid "Name of the tool"
msgstr "工具名称。"

#: 0797644e1d414ea0ae4b3175ba1507a5 8535ef044626443882d61463a5181d13 of
#: tooluniverse.execute_function.ToolUniverse.get_required_parameters:6
#, fuzzy
msgid "List of required parameter names"
msgstr "参数中的文本元素列表"

#: 9dda55f20d0e4f0a9772836bb53bdd1c fb80dc16d9574302a6aabb20bcbe0434 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:1
msgid "Retrieve tool configurations by their names."
msgstr "根据工具名称检索配置。"

#: 0d2fee6bb63b41589ddb963493e8cb28 30b8bd8cff624473b753928b41c97b35
#: 51b85bb97c3a4543b02e991c499ca892 8a6fcdba91234159994966ab78f12eb5 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:3
#: tooluniverse.execute_function.ToolUniverse.get_tool_description:3
msgid "DEPRECATED: Use tool_specification() instead."
msgstr "已弃用：请改用 tool_specification()。"

#: 42d249f0c3794e1fbb0ddeeaad0025f1 6bd67d9d372647f2bb644206136dec93
#: b6c486bf5d5c4cf78b78480bad66480d e88b097c0098472e962c20cedf708e4e of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:5
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:3
msgid "List of tool names to retrieve."
msgstr "工具名称检索列表"

#: 06c9de3e71f540be84f8c66d88f46fde 88db63b8d07c424c9fa69f9efe099b9b
#: 93ab5e5c697c4798a68f1e0f08841be9 cdbad77628c94f31ba1866f78019f28c
#: d146d3bcbd154b2c9f21a981dffdaa9f f055f6f6f296491b948b94efa0812083 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:7
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:5
#: tooluniverse.execute_function.ToolUniverse.tool_specification:8
msgid ""
"Output format. Options: 'default', 'openai'. If 'openai', returns OpenAI "
"function calling format. Defaults to 'default'."
msgstr "输出格式。选项：'default'，'openai'。如果选择 'openai'，将返回 OpenAI 函数调用格式。默认值为 'default'。"

#: 3d0aea5552464cb4b2c0f034b7a59b61 41d8afda3ae24718a4a61b5a6ec6eb7a of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:11
msgid ""
"List of tool configurations for the specified names.      Tools not found"
" will be reported but not included in the result."
msgstr "指定名称的工具配置列表。未找到的工具将被报告，但不会包含在结果中。"

#: 7a1d1125eb3f4ef59e241e45ef8eb011 fbe89b8735cb4f009553da7c3a908b12 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:13
msgid "List of tool configurations for the specified names."
msgstr "指定名称的工具配置列表。"

#: 08d51324243f45bba02de76c01bed690 4dbe49ddc7ab41a1a4b84d532fde67f4
#: 71144f7b3e1644ecba5ee124a2b21cec fa3a92a5170e4374b3265fb0a917f07d of
#: tooluniverse.execute_function.ToolUniverse.get_tool_by_name:14
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:12
msgid "Tools not found will be reported but not included in the result."
msgstr "未找到的工具将被报告，但不会包含在结果中。"

#: 5952169dcc1642088692ab99c20a3114 fa009e43836f47679417f63038db0689 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_description:1
msgid "Get the description of a tool by its name."
msgstr "根据工具名称获取其描述。"

#: 01440f82a93b4e4fb84ad685636fddc8 0ef876860d1b41fd9a4f02f67095d932
#: 1f626e92a8c840288c1a1088fdef5207 23f029c7012046009e2a7a50482d46db of
#: tooluniverse.execute_function.ToolUniverse.get_tool_description:5
#: tooluniverse.execute_function.ToolUniverse.get_tool_type_by_name:3
msgid "Name of the tool."
msgstr "工具名称。"

#: 3c2bcb6a9ec244fb85ed615993303aad 5bbe73e96a53404ea379d424d3eeeafc of
#: tooluniverse.execute_function.ToolUniverse.get_tool_health:1
msgid "Get health status for tool(s)."
msgstr "获取工具的健康状态。"

#: 2d514add3f90466b9e1da96d2d9b6ef0 360010f3c75c4e7cb74b5b16014e282f of
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:1
msgid ""
"Retrieve tool specifications by their names using tool_specification "
"method."
msgstr "使用 tool_specification 方法通过工具名称检索工具规格。"

#: 5a1f19baca5b47b3b28f655a1c6b0b78 79323b307c4d4d7d9fcaad60ad9187f8 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:9
msgid ""
"List of tool specifications for the specified names.      Tools not found"
" will be reported but not included in the result."
msgstr "指定名称的工具规格列表。未找到的工具将被报告，但不会包含在结果中。"

#: 88e6d67de5f44ca291b98e88ce8ddeeb d3882ba8185a4e71a71a4091444cb45a of
#: tooluniverse.execute_function.ToolUniverse.get_tool_specification_by_names:11
msgid "List of tool specifications for the specified names."
msgstr "指定名称的工具规格列表。"

#: 4616f26202d841e2be6577092f3a4a80 9329b236cea54333bd73549251b2b7cd of
#: tooluniverse.execute_function.ToolUniverse.get_tool_type_by_name:1
msgid "Get the type of a tool by its name."
msgstr "通过工具的名称获取其类型。"

#: 865a89e933214749b086bb0814558246 ccd75ffc78e54715a4b8bac2a7e7cb9e of
#: tooluniverse.execute_function.ToolUniverse.get_tool_type_by_name:6
msgid "The type of the tool."
msgstr "工具的类型。"

#: ../../api/tooluniverse.rst 09646016969440b0bb8dcd1fffd65560
#: 228355fea02747218040f9f0d9fea79f 24e7bb45cb78446f850bf5820e88ba4b
#: 270d71ccbd6d40c1a5c698814f2f4be9 2f9de869db67436ca102f9c513ba8825
#: 3dcbf3222fb349298fd294389df72357 82602a2b24ae4dac8ade3d15658428b2
#: 92330071fcd2480b80e0fecf9df41702 96e1d68d9dd04057bd5a8c37458da54a
#: 9ac8dd340d654e8bb32326358836078c a7798132e66b4c06aaf54d0f8aebb9ac
#: b2f117cf0ccf45b3960520516873c55f d2ecfaa7bf434a63bf1ea3097f4a0f1b
#: dcee99510d8e428fa948d52d6c83ce45
msgid "Raises"
msgstr "提升"

#: 3966a71015ac4e088af4e43d40221464 589d95aec90349eab06a81d5efcc6ce5 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_type_by_name:9
msgid "If the tool name is not found in loaded tools."
msgstr "如果在已加载的工具中未找到工具名称。"

#: 08ed57f01cfb4fae8cee6c2cfc3f452e 20dce9f5ac394c839b767547529cbba0 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_types:1
msgid "Get the types of tools available in the tool files."
msgstr "获取工具文件中可用的工具类型。"

#: 9e7ca253e6cf409580e999fc7e89123d d57ee6b2c1f745058bc38250be2ae128 of
#: tooluniverse.execute_function.ToolUniverse.get_tool_types:3
msgid "A list of tool type names (category keys)."
msgstr "工具类型名称列表（类别键）。"

#: 01f490a1abf8447fb6a0b08146053e5c 888db2968f8c4c40a734791de830847a
#: 9fe385dee4b14c7d8fd97557b4d286b2 ffe5f96cfc724172a0f5c73cd22c9ee1 of
#: tooluniverse.execute_function.ToolUniverse.get_toolspace_llm_config:1
#: tooluniverse.smcp.SMCP.get_llm_config:1
#, fuzzy
msgid "Get the current ToolSpace LLM configuration."
msgstr "所有已加载工具配置列表"

#: 533b47928c004a10badbf9c135aa06cf 64ef520adbe24d34a509bc382288c927
#: e452fd5c17344c8cb426da8c174904f0 e609ad541f8c4897a23ede7b188a943e of
#: tooluniverse.execute_function.ToolUniverse.get_toolspace_llm_config:3
#: tooluniverse.smcp.SMCP.get_llm_config:3
#, fuzzy
msgid "LLM configuration dictionary or None if not set"
msgstr "工具的配置字典"

#: 00ffbd6d4e7f46949494cc0982ff88d8 0bb534aa6dbc42ac92805687602b667d of
#: tooluniverse.execute_function.ToolUniverse.get_toolspace_metadata:1
#, fuzzy
msgid "Get the current ToolSpace metadata."
msgstr "获取当前工具注册表的副本。"

#: 7bafb4e6bf654dba9a5ee9c707f17a44 bb432db8fa94459d8d9790b173dbf9b5 of
#: tooluniverse.execute_function.ToolUniverse.get_toolspace_metadata:3
#, fuzzy
msgid "ToolSpace metadata dictionary or None if not set"
msgstr "工具的配置字典"

#: 9ae5a55692164747b9c8bac8d127b730 d8ce4c74a75a4b52a0b629302a1626c3 of
#: tooluniverse.execute_function.ToolUniverse.init_tool:1
msgid "Initialize a tool instance from configuration or name."
msgstr "从配置或名称初始化工具实例。"

#: 6575a6402354489e86e72ec0e50862b4 fde33af9d4744540b627dfddf30f9a91 of
#: tooluniverse.execute_function.ToolUniverse.init_tool:3
msgid ""
"This method creates a new tool instance using the tool type mappings and "
"optionally caches it for future use. It handles special cases like the "
"OpentargetToolDrugNameMatch which requires additional dependencies."
msgstr ""
"此方法使用工具类型映射创建一个新的工具实例，并可选择将其缓存以供将来使用。它还处理一些特殊情况，例如 "
"OpentargetToolDrugNameMatch，这种情况需要额外的依赖项。"

#: 01cc5544930e4ec0b259ba72ff9df2cf cb7ce3770f304e9f8405a1290a0a25a9 of
#: tooluniverse.execute_function.ToolUniverse.init_tool:7
msgid "Tool configuration dictionary. Either this or tool_name must be provided."
msgstr "工具配置字典。必须提供此项或 tool_name。"

#: 10fc4a38f04b43d398a2043d1c38f7a4 e3f312f8f45644409e913a6498bdb762 of
#: tooluniverse.execute_function.ToolUniverse.init_tool:9
msgid "Name of the tool type to initialize. Either this or tool must be provided."
msgstr "用于初始化的工具类型名称。必须提供此项或工具。"

#: 4f91461d2a2147a5815c33c4a0ac2ae5 c78fd4bcdf6549d4aa0813da16be1898 of
#: tooluniverse.execute_function.ToolUniverse.init_tool:11
msgid "Whether to cache the initialized tool. Defaults to True."
msgstr "是否缓存已初始化的工具。默认为 True。"

#: d383f528a77944f4989f60dae73fbc9f e3a3147af5174aa682c11d9a361ca88e of
#: tooluniverse.execute_function.ToolUniverse.init_tool:14
#, fuzzy
msgid "Initialized tool instance or None if initialization fails."
msgstr "从配置或名称初始化工具实例。"

#: 1185b04ccf79451fa5bfc6d8291075e3 62258bd01e1a45ac9b405630e20432ec of
#: tooluniverse.execute_function.ToolUniverse.init_tool:17
msgid "If the tool type is not found in tool_type_mappings."
msgstr "如果在 tool_type_mappings 中未找到工具类型。"

#: 3b9d51e968464c5490ce4a43d0396712 ba0ad2d932634f88a296f2f1c73152e7 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:1
msgid ""
"List all built-in tool categories and their statistics with different "
"modes."
msgstr "列出所有内置工具类别及其统计数据，并区分不同模式。"

#: 1317fa17b0624172839935e3c8fce1dc 59a43bcbba454c5a995255563078147c of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:3
msgid ""
"This method provides a comprehensive overview of all available tools in "
"the ToolUniverse, organized by categories. It reads directly from the "
"default tool files to gather statistics, so it works even before calling "
"load_tools()."
msgstr ""
"此方法提供了对 ToolUniverse 中所有可用工具的全面概览，并按类别进行组织。它直接从默认工具文件中读取数据以收集统计信息，因此即使在调用"
" load_tools() 之前也能正常工作。"

#: 1729468f4c714629816b9934cb8b5dc6 3b23f1ba1bcf46df84328e7a1b4e8e17 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:7
msgid ""
"Organization mode for tools. Defaults to 'config'. - 'config': Organize "
"by config file categories (original behavior) - 'type': Organize by tool "
"types (implementation classes) - 'list_name': Return a list of all tool "
"names - 'list_spec': Return a list of all tool specifications"
msgstr ""
"工具的组织模式。默认值为 'config'。  \n"
"- 'config'：按照配置文件类别组织（原始行为）  \n"
"- 'type'：按照工具类型（实现类）组织  \n"
"- 'list_name'：返回所有工具名称的列表  \n"
"- 'list_spec'：返回所有工具规格的列表"

#: 08d1c5d1b40145f2a1f4a70e96f501ae 86263f18d8b84bae91c18f1b7683b5b5 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:13
msgid ""
"Whether to scan all JSON files in data directory recursively. If True, "
"scans all JSON files in data/ and its subdirectories. If False (default),"
" uses predefined tool file mappings."
msgstr ""
"是否递归扫描数据目录中的所有 JSON 文件。如果为 True，则扫描 data/ 及其子目录中的所有 JSON 文件。如果为 "
"False（默认值），则使用预定义的工具文件映射。"

#: 8c3ab2cb31fd4f94a7ee120404db4136 c34e7137b2664952b2cd3b2e1c083bcd of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:18
msgid ""
"- For 'config' and 'type' modes: A dictionary containing tool statistics "
"- For 'list_name' mode: A list of all tool names - For 'list_spec' mode: "
"A list of all tool specifications"
msgstr ""
"- 对于“config”和“type”模式：包含工具统计信息的字典  \n"
"- 对于“list_name”模式：包含所有工具名称的列表  \n"
"- 对于“list_spec”模式：包含所有工具规格的列表"

#: ac7a8f57450c46bba2d2dfe51e088ee6 c612faa10ecd4901a6c22c9de0158180 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:18
msgid "For 'config' and 'type' modes: A dictionary containing tool statistics"
msgstr "对于“config”和“type”模式：包含工具统计信息的字典"

#: 5cb7b68b576b4e359c0cb0252022e362 690775fdb809481385989db5ea976087 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:19
msgid "For 'list_name' mode: A list of all tool names"
msgstr "对于“list_name”模式：所有工具名称的列表"

#: 45a8dfd21a4e40e79616c077560534f3 ddb425a03e5842b5b3ccc5c6d3b70cef of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:20
msgid "For 'list_spec' mode: A list of all tool specifications"
msgstr "对于“list_spec”模式：所有工具规格的列表"

#: cef66dafdf124a2d8e66cd0e2956f9ea deefe70e54f04fb3b698b94870fe717f of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:23
msgid "Example"
msgstr "示例"

#: 98fa7c9a52a845bbb7f67fb75822ea3a f7b07e3b55534028b387408ee972ce45 of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:35
msgid ""
"This method reads directly from tool files and works without calling "
"load_tools()"
msgstr "此方法直接从工具文件中读取，无需调用 load_tools()。"

#: 541ab7e69cde4feeba2675a1608301eb 8c333f7ebcef4fd6bf9ac3016de6388c of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:36
msgid ""
"Tools are deduplicated across categories, so the same tool won't be "
"counted multiple times"
msgstr "工具已在各类别中去重，因此同一工具不会被多次计数。"

#: 460e7d8ae6c64a2d83421dcc0656470b ef9de9af190a48e9819aa5f3b87af2ab of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:37
msgid ""
"The summary is automatically printed to console when this method is "
"called (except for list_name and list_spec modes)"
msgstr "当调用此方法时，摘要会自动打印到控制台（list_name 和 list_spec 模式除外）。"

#: 038154d1678b425bbf16fc5d6509519e 0ec513605cb04f5b9d4ee20e8387cedb of
#: tooluniverse.execute_function.ToolUniverse.list_built_in_tools:38
msgid "When scan_all=True, all JSON files in data/ and subdirectories are scanned"
msgstr "当 scan_all=True 时，系统会扫描 data/ 目录及其子目录中的所有 JSON 文件"

#: 0cdcc6de87984712ad1657478eb54582 9a9630d622f04241ab91d98cb08c0f81
#: af0d4c364c0e4ae89b7d8ea5ed2604b0 of
#: tooluniverse.mcp_integration.list_mcp_connections:1
msgid "List all active MCP connections and loaded tools."
msgstr "列出所有活动的MCP连接和已加载的工具。"

#: 2f9436a6ffbf4825beb265ce0be345b5 91586c4a2f344f229e5305db3e38c9ee
#: 951c74d55ebb4e08ad581b83ea8615c2 of
#: tooluniverse.mcp_integration.list_mcp_connections:3
msgid "Information about MCP connections, auto-loaders, and loaded tools"
msgstr "关于MCP连接、自动加载器和已加载工具的信息"

#: 2d5105d81ca84fb1925f17f5caa743ab cfbd38e8f3164717bfc849d96627f01c
#: df7db3d0740d495f9d41be01f71d2592 of
#: tooluniverse.mcp_integration.load_mcp_tools:1
msgid "Load MCP tools from remote servers into this ToolUniverse instance."
msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#: 6e6cb9af64be41048841a99af029265f 710ab72007514b0fb5af4e8d0632bb0b
#: d5ea5a5388364a28bb3ae4093e828915 of
#: tooluniverse.mcp_integration.load_mcp_tools:3
msgid ""
"This method automatically discovers tools from MCP servers and registers "
"them as ToolUniverse tools, enabling seamless usage of remote "
"capabilities."
msgstr "此方法会自动从MCP服务器中发现工具，并将其注册为ToolUniverse工具，从而实现远程功能的无缝使用。"

#: 6fc6ac1521164850b6bdd2fd50e6d2a0 8d61b92c536d4319bf5da7db50f39347
#: 96d94037078c406fb16dc89147b30355 of
#: tooluniverse.mcp_integration.load_mcp_tools:6
msgid ""
"List of MCP server URLs to load tools from. Examples:  - "
"[\"http://localhost:8001\", \"http://analysis-server:8002\"] - "
"[\"ws://localhost:9000\"]  # WebSocket MCP servers  If None, attempts to "
"discover from local MCP tool registry."
msgstr ""

#: 6152f3ad1846463fb6a017cc1292f498 ecd3c77764cd451db59cea6ea3832f27
#: f56fcf3dc31444d3b54863928e6da631 of
#: tooluniverse.mcp_integration.load_mcp_tools:6
msgid "List of MCP server URLs to load tools from. Examples:"
msgstr "MCP 服务器 URL 列表，用于加载工具。示例："

#: 17643e7279144da982790a7b93228ded 6fbce6fffbb54295ab09bab2a8b72c5a
#: 94e92736c84647bc9fd7e5f4a32379d8 of
#: tooluniverse.mcp_integration.load_mcp_tools:8
msgid "[\"http://localhost:8001\", \"http://analysis-server:8002\"]"
msgstr ""

#: 02c0affe01b94db7b31b653ea3ef687e 954161cf91a547e38668994999cfef28
#: c886ff3e9f9d405d83213d19bf145999 of
#: tooluniverse.mcp_integration.load_mcp_tools:9
msgid "[\"ws://localhost:9000\"]  # WebSocket MCP servers"
msgstr "[\"ws://localhost:9000\"]  # WebSocket MCP 服务器"

#: 694c02f7d2344674a8b47f58a08c007b cf1d1d34c6ee4fc1b3f288af81c62628
#: e32119b14ee646bb8efbb389f369f187 of
#: tooluniverse.mcp_integration.load_mcp_tools:11
msgid "If None, attempts to discover from local MCP tool registry."
msgstr "如果为 None，则尝试从本地 MCP 工具注册表中发现。"

#: 8448d62f62dd433d88575c90e57a5c8d c5988f23e0094dd1a59879d8aa48f69c
#: d2078e507e9a47eb875320384d20b75e of
#: tooluniverse.mcp_integration.load_mcp_tools:13
msgid ""
"Additional configuration options:  - tool_prefix (str): Prefix for loaded"
" tool names (default: \"mcp_\") - timeout (int): Connection timeout in "
"seconds (default: 30) - auto_register (bool): Whether to auto-register "
"discovered tools (default: True) - selected_tools (list): Specific tools "
"to load from each server - categories (list): Tool categories to filter "
"by"
msgstr ""

#: 968fde99ce554ea3bbe3f23882546ee5 dce2c173ec0f498d81bd46c6c76a1bdb
#: f4343f3181f64892b00fee38e48fe18e of
#: tooluniverse.mcp_integration.load_mcp_tools:13
msgid "Additional configuration options:"
msgstr "附加配置选项："

#: 5b9c50c1258b438ab9aa960f8d48f3ff b3b654183ba7475bbb192509e3a0308a
#: d666a8fc9eaf485ab90f558c4ce1172b of
#: tooluniverse.mcp_integration.load_mcp_tools:15
msgid "tool_prefix (str): Prefix for loaded tool names (default: \"mcp_\")"
msgstr "tool_prefix (str)：加载工具名称的前缀（默认值：\"mcp_\"）"

#: 3ced2823ff394fc897f8968673593cff d6d986c5c55d44ae9fcd390c2254fb89
#: ecbad1fe3fe34870adbfa2fcd05f6de9 of
#: tooluniverse.mcp_integration.load_mcp_tools:16
msgid "timeout (int): Connection timeout in seconds (default: 30)"
msgstr "timeout（int）：连接超时时间（单位：秒，默认值：30）"

#: 2534d6ad5669439592cac6b8f47639c8 af74d5d5ba1b4b36b46bbf302013de0d
#: c1ae34c86058498295e36a528c4dd8d8 of
#: tooluniverse.mcp_integration.load_mcp_tools:17
msgid ""
"auto_register (bool): Whether to auto-register discovered tools (default:"
" True)"
msgstr "auto_register（布尔值）：是否自动注册发现的工具（默认值：True）"

#: b70fcd33fe884cdcbb14bc93f3d7c1a9 d433d2da50674bd9baeaba8fb8849f57
#: e9cbc0bc9a9e453398aa98ab0c637f7d of
#: tooluniverse.mcp_integration.load_mcp_tools:18
msgid "selected_tools (list): Specific tools to load from each server"
msgstr "selected_tools（列表）：从每个服务器加载的特定工具"

#: 47693f8abe104bc28dac41425433c56d ab58aa5819554bfb8751cf6f006931c8
#: d71e6ca00f2f44f0bf44fa54363e751b of
#: tooluniverse.mcp_integration.load_mcp_tools:19
msgid "categories (list): Tool categories to filter by"
msgstr "类别（列表）：用于筛选的工具类别"

#: 608b3746e5e74809973221f0a6ddb355 90f0055a560544f892a4d4970aea9266
#: e181df63c64344689306dcf9752fd9dd of
#: tooluniverse.mcp_integration.load_mcp_tools:21
msgid "Summary of loaded tools with counts and any errors encountered."
msgstr "加载工具的摘要，包括数量统计及遇到的任何错误。"

#: 1b512a520bc04db2b824b8533a680f69 64952adb51e44300bc41b2eaf95abcff
#: 9aed3b4c7ce54247b684d665e49a4972 of
#: tooluniverse.mcp_integration.load_mcp_tools:26
#, fuzzy
msgid "Load from specific servers:"
msgstr "从MCP服务器列出可用工具"

#: 221450983c30499d9aacd4549b507006 ebdd217f809f48588dc085114632050f
#: f1e9354bed5b47e79e31a3e39dcb7834 of
#: tooluniverse.mcp_integration.load_mcp_tools:41
#, fuzzy
msgid "Load with custom configuration:"
msgstr "使用自定义配置加载：```python tu.load_mcp_tools("

#: 457c6c6e4f804e359aa4bcc889f00cd6 73e9af0c1f4f441d868cbc3d2e719f49
#: f9dcc25f3bbb414e8a05c3511ef37548 of
#: tooluniverse.mcp_integration.load_mcp_tools:53
msgid ""
"Auto-discovery from local registry: ```python # If you have registered "
"MCP tools locally, auto-discover their servers tu.load_mcp_tools()  # "
"Uses servers from mcp_tool_registry ```"
msgstr ""
"从本地注册表自动发现：  \n"
"```python  \n"
"# 如果您已在本地注册了 MCP 工具，自动发现其服务器  \n"
"tu.load_mcp_tools()  # 使用来自 mcp_tool_registry 的服务器  \n"
"```"

#: 21dbf3d351ae4afc9af9dbf2e02221ac 9a8c4c063fb342ed9b1b8e8c33bff946 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:1
msgid "Loads tool definitions from JSON files into the instance's tool registry."
msgstr "将工具定义从 JSON 文件加载到实例的工具注册表中。"

#: b2c18cda135a47f592f8254cd7fcf00c fd7207efa95a46e1af0591f7ebee3442 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:3
msgid ""
"If `tool_type` is None, loads all available tool categories from "
"`self.tool_files`. Otherwise, loads only the specified tool categories."
msgstr "如果 `tool_type` 为 None，则从 `self.tool_files` 加载所有可用的工具类别。否则，仅加载指定的工具类别。"

#: 2d9f52116f534efa8e5b5912c3fa18ff 6bd34eed253745518a0722ed569a5279 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:6
msgid ""
"After loading, deduplicates tools by their 'name' field and updates the "
"internal tool list. Also refreshes the tool name and description mapping."
msgstr "加载后，根据工具的“name”字段去重并更新内部工具列表。同时刷新工具名称和描述的映射关系。"

#: 0ffe22a7f35149149bcbf4522fcd8db1 b19d3ed7f3544829bb2fcb0dbcb5e73f of
#: tooluniverse.execute_function.ToolUniverse.load_tools:9
msgid "List of tool category names to load. If None, loads all categories."
msgstr "要加载的工具类别名称列表。如果为 None，则加载所有类别。"

#: 6356a7da8ff949a4aa79c79c201182c4 844905a793a54c52a6be151a60a102e7 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:11
msgid "List of specific tool names to exclude from loading."
msgstr "要排除加载的特定工具名称列表。"

#: 15cb835db5514b9c95a45d9a87002928 bccaa1a8b8c14741b2505a424b22caee of
#: tooluniverse.execute_function.ToolUniverse.load_tools:13
msgid "List of tool categories to exclude from loading."
msgstr "要排除加载的工具类别列表。"

#: 39de5610b1da4a11a1864d64378bb2fd 48f9013ce31848f2983797a33fa2ab43 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:15
msgid ""
"List of specific tool names to include, or path to a text file containing"
" tool names (one per line). If provided, only these tools will be loaded "
"regardless of categories."
msgstr "工具名称列表，或包含工具名称的文本文件路径（每行一个名称）。如果提供了此列表，则无论类别如何，仅加载这些工具。"

#: 6b8f3404bca4496b8afa74bf98c7d784 b0b251629094433b80d19262190d8883 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:19
#, python-brace-format
msgid ""
"Additional tool configuration files to load. Format: {\"category_name\": "
"\"/path/to/config.json\"}"
msgstr "需加载的额外工具配置文件。格式：{\"category_name\": \"/path/to/config.json\"}"

#: 5deab3081a5e4ea7a8ad23ba583ad1ee 9b6f40b8206c4bfb81750d167e42600a of
#: tooluniverse.execute_function.ToolUniverse.load_tools:22
msgid ""
"Path to a text file containing tool names to include (one per line). "
"Alternative to include_tools when providing a file path."
msgstr "包含工具名称的文本文件路径（每行一个）。在提供文件路径时，可作为 include_tools 的替代选项。"

#: a83d685e2bf24048887fe984452c4652 c48614aab65a4fe6a6019345d6e2135c of
#: tooluniverse.execute_function.ToolUniverse.load_tools:25
msgid ""
"List of tool types to include (e.g., [\"OpenTarget\", \"ChEMBLTool\"]). "
"If provided, only tools with these types will be loaded."
msgstr "工具类型列表（例如：[\"OpenTarget\", \"ChEMBLTool\"]）。如果提供了此列表，则仅加载具有这些类型的工具。"

#: 2ab4eaaf820f41239ef47cbdba8152f2 cf21c00897a44faf995f6712962fbd2c of
#: tooluniverse.execute_function.ToolUniverse.load_tools:28
msgid ""
"List of tool types to exclude (e.g., [\"ToolFinderEmbedding\"]). Tools "
"with these types will be excluded."
msgstr "要排除的工具类型列表（例如：[\"ToolFinderEmbedding\"]）。具有这些类型的工具将被排除。"

#: bc1de44b33074dca955331143b76a3e4 e15cb5bfca614458bee9abd105cd53c8 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:32
msgid "Side Effects:"
msgstr "副作用："

#: 4033b71bc6524f4aa911f29532455477 80fff80583ba4490ab2ba62762a5e987 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:33
msgid "Updates `self.all_tools` with loaded and deduplicated tools."
msgstr "将加载并去重的工具更新到 `self.all_tools` 中。"

#: 5daaa21354d84e969236177f272e6813 eea2308fe1c5429bbac2fc184792840a of
#: tooluniverse.execute_function.ToolUniverse.load_tools:34
msgid "Updates `self.tool_category_dicts` with loaded tools per category."
msgstr "将 `self.tool_category_dicts` 更新为按类别加载的工具。"

#: 6e7c3db8105448c6874333155cd5c703 ce4f240c6b36499694879492dd088878 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:35
msgid ""
"Calls `self.refresh_tool_name_desc()` to update tool name/description "
"mapping."
msgstr "调用 `self.refresh_tool_name_desc()` 更新工具名称/描述的映射。"

#: 5b9d8555d1334917a3c8b96f59bc6902 a0dd77ea8da34e209105619a608112f5 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:36
msgid "Prints the number of tools before and after loading."
msgstr "打印加载前后的工具数量。"

#: 298d7a7091a5460f8811e69ca41415ef 54d1302c8e2c4324b634fd7878f07c29 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:40
msgid ""
"# Load specific tools by name "
"tu.load_tools(include_tools=[\"UniProt_get_entry_by_accession\", "
"\"ChEMBL_get_molecule_by_chembl_id\"])"
msgstr ""
"# 按名称加载特定工具  \n"
"tu.load_tools(include_tools=[\"UniProt_get_entry_by_accession\", "
"\"ChEMBL_get_molecule_by_chembl_id\"])"

#: 233fc0bf30fd4abb9796f3d717d7e7b3 af2763a1d7244286984a9041ae5b5146 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:43
msgid ""
"# Load tools from a file "
"tu.load_tools(tools_file=\"/path/to/tool_names.txt\")"
msgstr ""
"# 从文件中加载工具  \n"
"tu.load_tools(tools_file=\"/path/to/tool_names.txt\")"

#: bd3ce517e6eb4dd58f0a9ab2d0529e82 dadc7a6e0e5c49ff8a49f5af8b8bafe4 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:46
msgid ""
"# Include only specific tool types "
"tu.load_tools(include_tool_types=[\"OpenTarget\", \"ChEMBLTool\"])"
msgstr ""
"# 仅包含特定工具类型 tu.load_tools(include_tool_types=[\"OpenTarget\", "
"\"ChEMBLTool\"])"

#: b98d620c31e54c80bc887a276b8c667a c23ab9df0e7145098c0a45b9577bda12 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:49
msgid ""
"# Exclude specific tool types "
"tu.load_tools(exclude_tool_types=[\"ToolFinderEmbedding\", \"Unknown\"])"
msgstr ""
"# 排除特定工具类型  \n"
"tu.load_tools(exclude_tool_types=[\"ToolFinderEmbedding\", \"Unknown\"])"

#: 06c7bd8e422e4bdab12e402149b24f40 c56078b24a4f40849b9c02d01ffb1b41 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:52
#, python-brace-format
msgid ""
"# Load additional config files "
"tu.load_tools(tool_config_files={\"custom_tools\": "
"\"/path/to/custom_tools.json\"})"
msgstr ""
"# 加载额外的配置文件  \n"
"tu.load_tools(tool_config_files={\"custom_tools\": "
"\"/path/to/custom_tools.json\"})"

#: adad4a81d91f4e28abdc686c9dfe213a bf583b11283c42388d18e5ea8cdf5833 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:55
msgid "# Combine multiple options tu.load_tools("
msgstr "# 组合多个选项 tu.load_tools("

#: 2a919cfe59214a20b8d2358a02c8e962 ceb6707183e84103bff4f7359311bea5 of
#: tooluniverse.execute_function.ToolUniverse.load_tools:57
#, python-brace-format
msgid ""
"tool_type=[\"uniprot\", \"ChEMBL\"], "
"exclude_tools=[\"problematic_tool\"], exclude_tool_types=[\"Unknown\"], "
"tool_config_files={\"custom\": \"/path/to/custom.json\"}"
msgstr ""

#: 081ae9a3f2824adeb3eb9e82313371bf 39c792c0c11847399c4980a5b80b2817
#: 50a3b63c885e466baba21d87bbac8f3a 589b7669a10b484fa8baca5a7e23849f
#: 59d13c6eecae42c7826642f711556fb2 6036798984f84bbaa54f7115aafc59c2
#: 81ea7ab5da80489f85c52f94d155260d 874332e76aa64560b84763c79a953f65
#: 97bc6fd3e6ba4b38aa65413fe20cc0e3 af15e33579c54fbfb13df3caf4b4a0ea
#: c18085efb9534ab1a3efb727ffd749b0 d0de3a1d2827405a9617b359db1365b1
#: dd330abead3e4b789199708107cf724f ea32c79e9b8f4e85a7cbeda05e3e4a01
#: f7dede01c7d14d0e93b595f8edace42b of
#: tooluniverse.execute_function.ToolUniverse.load_tools:61
#: tooluniverse.smcp:30 tooluniverse.smcp.SMCP.add_custom_tool:53
#: tooluniverse.smcp.SMCP.add_custom_tool:69
#: tooluniverse.smcp.SMCP.add_custom_tool:92
#: tooluniverse.smcp.SMCP.run_simple:80 tooluniverse.smcp.create_smcp_server:89
#: tooluniverse.smcp.create_smcp_server:112
msgid ")"
msgstr "请提供需要翻译的具体英文文本，我将为您提供符合要求的中文翻译。"

#: 0d8cd6fe8e1f4f649577231fc342ac60 7a90309e43784581a77e74bf53afa548 of
#: tooluniverse.execute_function.ToolUniverse.load_tools_from_names_list:1
msgid "Load only specific tools by their names."
msgstr "仅通过工具名称加载特定工具。"

#: b719da3c11d240e2ae9b0fe5c87a1f01 b987378b7d2d430bb425850eace10b49 of
#: tooluniverse.execute_function.ToolUniverse.load_tools_from_names_list:3
msgid "DEPRECATED: Use load_tools(include_tools=...) instead."
msgstr "已弃用：请改用 load_tools(include_tools=...)。"

#: e776bafa48204ddb905c4a2a59e4087e f8480f95af8645dfb4c7e73fb60eb435 of
#: tooluniverse.execute_function.ToolUniverse.load_tools_from_names_list:5
msgid "List of tool names to load"
msgstr "工具名称加载列表"

#: 39201fd52dd14619af63d721f880b236 dea9fafdc75e4b76a3935c60e25cbb61 of
#: tooluniverse.execute_function.ToolUniverse.load_tools_from_names_list:7
msgid "Whether to clear existing tools first"
msgstr "是否先清除现有工具"

#: 565b38ded69a4d9e80f535e4b1414ccd cad40191fc69453db752c62b607262f0 of
#: tooluniverse.execute_function.ToolUniverse.load_tools_from_names_list:10
msgid "Number of tools successfully loaded"
msgstr "成功加载的工具数量"

#: 33f573cc2b1741c8b7e92599d4642354 59846376fb104c67940bed2272529ead of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:1
#, fuzzy
msgid "Load ToolSpace configuration and apply it to the ToolUniverse instance."
msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#: 8998ad48b0364c3ab73d447e28165d68 99f10ebe92074aafa5a79334298a95a7 of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:3
msgid ""
"This is a high-level method that loads a ToolSpace configuration from "
"various sources (HuggingFace, local files, HTTP URLs) and applies the "
"tool settings to the current instance."
msgstr ""

#: 534b33b5b952426b807ff6661e1bd971 c5e752c41b0049b28d9c2a01801ac017
#: ec29e69321844b258b763a82f0109837 of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:7
#: tooluniverse.toolspace_loader.ToolSpaceLoader.load:3
msgid ""
"ToolSpace URI (e.g., \"hf:user/repo\", \"./config.yaml\", "
"\"https://example.com/config.yaml\")"
msgstr ""

#: 0a29645047934eb0936b32c5c6b4ec85 ba61c5c00b614efe9fdeaa080441f805 of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:8
msgid ""
"Additional parameters to override ToolSpace configuration (e.g., "
"exclude_tools=[\"tool1\"], include_tools=[\"tool2\"])"
msgstr ""

#: 50ea3145957140a19e147ca098fc23b0 cc1b0b14e8684c0196963f875d4b66b7 of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:11
#, fuzzy
msgid "The loaded ToolSpace configuration"
msgstr "所有已加载工具配置列表"

#: 4796244ee4724a7d87521bd586b0480c bd6f67c1543f4d3e816019d8a2122692 of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:16
msgid ""
"# Load from HuggingFace config = tu.load_toolspace(\"hf:community"
"/proteomics-toolkit\")"
msgstr ""

#: 65aece5ff9364dd8bde993dbdd178e99 c68226bc933c4f688ea3c62f68e69afc of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:19
msgid ""
"# Load local file with overrides config = tu.load_toolspace(\"./my-"
"config.yaml\", exclude_tools=[\"slow_tool\"])"
msgstr ""

#: 334947019cad426c80d7384199538f60 8494c6d9748a4d37a59766d3bf21a3ca of
#: tooluniverse.execute_function.ToolUniverse.load_toolspace:22
msgid ""
"# Load from HTTP URL config = "
"tu.load_toolspace(\"https://example.com/config.yaml\")"
msgstr ""

#: 59087c1e7733438889a88baed17af013 c802c13ca1404f28b331d5938d2ec14b of
#: tooluniverse.execute_function.ToolUniverse.prepare_one_tool_prompt:1
msgid ""
"Prepare a single tool configuration for prompt usage by filtering to "
"essential keys."
msgstr "为便捷使用准备单一工具配置，筛选出必要的关键项。"

#: 8a3cac968338435ba173c44e940a3623 da824a80852948b8a7e6629f2cf40d19 of
#: tooluniverse.execute_function.ToolUniverse.prepare_one_tool_prompt:3
msgid "Tool configuration dictionary."
msgstr "工具配置字典"

#: be35934b5afe44019482cc1eef93b4c0 c0a4b7bf16894d7d99d1c91b69986fa5 of
#: tooluniverse.execute_function.ToolUniverse.prepare_one_tool_prompt:6
msgid "Tool configuration with only essential keys for prompting."
msgstr "仅使用必要的键进行工具配置以实现提示功能。"

#: 29f8414f765348eda54000a9a1b0fdd3 59b20cf6c0ee480d8a2c68bc81271c31 of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_examples:1
msgid ""
"Prepare tool configurations for example usage by keeping extended set of "
"keys."
msgstr "为示例使用准备工具配置，同时保留扩展的密钥集合。"

#: 27fbe8f00bfb4af2b9bae53ba148c9f8 4f065afcfcce48ba9cad1dbf73dbcabf of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_examples:3
msgid "DEPRECATED: Use prepare_tool_prompts(mode='example') instead."
msgstr "已弃用：请改用 prepare_tool_prompts(mode='example')。"

#: 3fe0219ede98462a9ce2744486dfadff 4545660f80054e9db27a4c186a4500ce
#: a636fdc0f24d472088f0244380b125ee bf6318b6c32d4c03a79681826b2b7221
#: c3fbe0e1f9f14f20988a9a83561be024 d3d3c3d755f54fdd987682a543dfab71
#: d657aca6d1a24de5ad571559a958dab7 f1a53c4c29004bb0aeb229026aa9bd3c of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_examples:5
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_prompts:3
#: tooluniverse.execute_function.ToolUniverse.remove_keys:5
#: tooluniverse.execute_function.ToolUniverse.tool_to_str:3
msgid "List of tool configuration dictionaries."
msgstr "工具配置字典列表"

#: 73896d20cfa74f208c1dae962a5d2a1b a1dcb94847634350a83e7afc2e16ca30 of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_examples:8
msgid "Deep copy of tool list with only example-relevant keys."
msgstr "仅复制工具列表中与示例相关的键的深拷贝。"

#: 1865c6eed6bc41ed9a8585661389d930 5dc9a84913b94d72b3c98ddf238164ad of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_prompts:1
#, fuzzy
msgid "Prepare a list of tool configurations for different usage modes."
msgstr "准备一份工具配置清单以便快速使用。"

#: 20ba908e83c34cdabaae0cef116af105 fdfbd33d9404483186fce7221f033f44 of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_prompts:5
msgid ""
"Preparation mode. Options: - 'prompt': Keep essential keys for prompting "
"(name, description, parameter, required) - 'example': Keep extended keys "
"for examples (name, description, parameter, required, query_schema, "
"fields, label, type) - 'custom': Use custom valid_keys parameter"
msgstr ""
"准备模式。选项：  \n"
"- 'prompt'：保留用于提示的必要键（name、description、parameter、required）  \n"
"- "
"'example'：保留用于示例的扩展键（name、description、parameter、required、query_schema、fields、label、type）"
"  \n"
"- 'custom'：使用自定义的 valid_keys 参数"

#: 4ed7840678ad40f29c2045d017a6984a 80d6edcb685d4527a17272ad4bb95067 of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_prompts:10
msgid "Custom list of keys to keep when mode='custom'."
msgstr "自定义模式下保留的键列表（mode='custom'）。"

#: bbb74d9f78834cb4bd6893656dd1d41c d603048c7d294416bfaf148706892c37 of
#: tooluniverse.execute_function.ToolUniverse.prepare_tool_prompts:13
#, fuzzy
msgid "List of tool configurations with only specified keys."
msgstr "指定名称的工具配置列表。"

#: 659741afc4324d2fadd8c2e5dbef38b7 acfb074579c94cd695e9b075c4cac7cd of
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:1
msgid "Refresh the tool name and description mappings with optional filtering."
msgstr "使用可选的筛选条件刷新工具名称和描述映射。"

#: 1ff7993562d34ed6ae63d149a750f02a 6cc8c5bcb5124e10a9679e4a5a5eaa00 of
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:3
msgid ""
"This method rebuilds the internal tool dictionary and generates filtered "
"lists of tool names and descriptions based on the provided filter "
"criteria."
msgstr "此方法会重建内部工具字典，并根据提供的过滤条件生成经过筛选的工具名称和描述列表。"

#: 6377b2be67574ec082374f50d5b0335a 9f55d671ecc54791a37ea229dbdb5221 of
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:6
msgid ""
"If True, includes full tool JSON as description. If False, uses \"name: "
"description\" format. Defaults to False."
msgstr "如果为 True，则将完整的工具 JSON 作为描述包含在内。如果为 False，则使用“名称: 描述”格式。默认为 False。"

#: 332fe0e90d2f4db482b827325e696a61 5df48f709980412f8f489942f8e0c981 of
#: tooluniverse.execute_function.ToolUniverse.refresh_tool_name_desc:18
msgid "A tuple containing (tool_name_list, tool_desc_list) after filtering."
msgstr "过滤后包含 (tool_name_list, tool_desc_list) 的元组。"

#: 285213c8d0f04b5fb33a20f5465fe96f 8c0e99e5ec4042edb6b5b174160a491f of
#: tooluniverse.execute_function.ToolUniverse.refresh_tools:1
msgid "Refresh tool discovery (re-discover MCP/remote tools, reload configs)."
msgstr "刷新工具发现（重新发现 MCP/远程工具，重新加载配置）。"

#: b2065a600196464586cf5016e023d035 b8ea6ffde23841738d2fcd1558acd1bd of
#: tooluniverse.execute_function.ToolUniverse.register_custom_tool:1
msgid "Register a custom tool class at runtime."
msgstr "在运行时注册自定义工具类。"

#: 052c210107114be2b7930b57a2b766cf dd22b6de7fe7428480bacf6c66650da9
#: f9ec335bd4eb4b3890bb272beb4b5be7 of
#: tooluniverse.execute_function.ToolUniverse.register_custom_tool:3
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:8
msgid "The tool class to register"
msgstr "要注册的工具类"

#: 88d3c0771b0940e6bda4040ebe679f67 9c4a120ce9f742da967e610326216ced of
#: tooluniverse.execute_function.ToolUniverse.register_custom_tool:4
msgid "Name to register under. Uses class name if None."
msgstr "注册名称。如果未指定，则使用类名。"

#: 4961b7418f384c0c91e972ee62cbdb4d febf2efaccf44408b3a7bb7edc13473a of
#: tooluniverse.execute_function.ToolUniverse.register_custom_tool:6
msgid "Tool configuration dictionary to add to all_tools"
msgstr "工具配置字典以添加到 all_tools"

#: 8cb21894a8064811a1cffbb5d2d03e6f 8ce3eaeba88740e1878c974b04379130 of
#: tooluniverse.execute_function.ToolUniverse.register_custom_tool:9
msgid "The name the tool was registered under"
msgstr "工具注册时使用的名称"

#: b1a4d534546a473b9760b68682359587 dd1c8f29087545bea9aa0dff3f7fdbbd of
#: tooluniverse.execute_function.ToolUniverse.remove_keys:1
msgid "Remove specified keys from a list of tool configurations."
msgstr "从工具配置列表中移除指定的键。"

#: 35d92696b8da4827a43bba29a5b86f0c 6fe5dd07923d4137900e8875a5a2849a of
#: tooluniverse.execute_function.ToolUniverse.remove_keys:3
msgid ""
"DEPRECATED: Use prepare_tool_prompts(mode='custom', valid_keys=...) "
"instead."
msgstr "已弃用：请使用 prepare_tool_prompts(mode='custom', valid_keys=...) 替代。"

#: cde52d6e54ef4514a6d3dfe21d86ae83 d6639214c6f34b31ba5cd09e5deb64b0 of
#: tooluniverse.execute_function.ToolUniverse.remove_keys:7
msgid "List of keys to remove from each tool configuration."
msgstr "每个工具配置中需要移除的键列表。"

#: 881f7362685a474089397d87da5b5138 ae4339e7e37249fe87ac271a714e7a43 of
#: tooluniverse.execute_function.ToolUniverse.remove_keys:10
msgid "Deep copy of tool list with specified keys removed."
msgstr "深度复制工具列表，并移除指定的键。"

#: 4639eed307e44847abf1dc187d6f38e5 7362a71f74d742c4a77d2eb21b501358 of
#: tooluniverse.execute_function.ToolUniverse.return_all_loaded_tools:1
msgid "Return a deep copy of all loaded tools."
msgstr "返回所有已加载工具的深拷贝。"

#: 1325db924ad24297b837c5dcee3d3627 9639d1c94b7749e1a7deb2dd0de22b81 of
#: tooluniverse.execute_function.ToolUniverse.return_all_loaded_tools:3
msgid "A deep copy of the all_tools list to prevent external modification."
msgstr "对 all_tools 列表进行深拷贝以防止外部修改。"

#: 07c26fea7b014546917a13ccc35c8edf 6610c1c59e0c403abcdc13bab91976eb of
#: tooluniverse.execute_function.ToolUniverse.run:1
msgid "Execute function calls from input string or data."
msgstr "从输入字符串或数据中执行函数调用。"

#: baea90f477ec41f6bdc912376bdacc7f ec044a97499a4b5796ba27520afb3d40 of
#: tooluniverse.execute_function.ToolUniverse.run:3
msgid ""
"This method parses function call data, validates it, and executes the "
"corresponding tools. It supports both single function calls and multiple "
"function calls in a list."
msgstr "该方法解析函数调用数据，对其进行验证，并执行相应的工具。它支持单个函数调用以及列表中的多个函数调用。"

#: 30a3880240be4c239b83dcc512a05dad dfe4344dca314881a4618a77f60f46a5 of
#: tooluniverse.execute_function.ToolUniverse.run:6
msgid "Input string or data containing function call information."
msgstr "输入字符串或数据，其中包含函数调用信息。"

#: 72b737b12ce3467b866740d0d047466d 89a98357181a4d84acc6cc71e95d592c of
#: tooluniverse.execute_function.ToolUniverse.run:7
msgid "Whether to return formatted messages. Defaults to False."
msgstr "是否返回格式化的消息。默认为 False。"

#: 03c047516b484fa2829db602a777b19c a779593a4e834224b119e7831f81c712 of
#: tooluniverse.execute_function.ToolUniverse.run:14
msgid ""
"- For multiple function calls: List of formatted messages with tool "
"responses - For single function call: Direct result from the tool - None:"
" If the input is not a valid function call"
msgstr ""
"- 对于多个函数调用：包含工具响应的格式化消息列表  \n"
"- 对于单个函数调用：工具的直接结果  \n"
"- 无：如果输入不是有效的函数调用"

#: 11e0f3411fd3469094c88b57af8fe6f0 c2333eb4e6fd47a4bc10328f70e37de6 of
#: tooluniverse.execute_function.ToolUniverse.run:14
msgid ""
"For multiple function calls: List of formatted messages with tool "
"responses"
msgstr "对于多次函数调用：带有工具响应的格式化消息列表"

#: 6495e136d9584637b4ac2efaa4f1b20d cac22815f06143c39c36698e6c576de9 of
#: tooluniverse.execute_function.ToolUniverse.run:15
msgid "For single function call: Direct result from the tool"
msgstr "对于单个函数调用：工具的直接结果"

#: 8ff6be8623764d39b6190081c0d86d61 ee8486cbe9d3494dabdfde8add9f3d89 of
#: tooluniverse.execute_function.ToolUniverse.run:16
msgid "None: If the input is not a valid function call"
msgstr "无：如果输入不是有效的函数调用"

#: 0c9883d8b452452d803fb0e55377bd7f bf2dbaaf98734b78a2d6d88397dac08b of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:1
msgid "Execute a single function call."
msgstr "执行单个函数调用。"

#: 9a668cd8c4e249e9a44b62f27c18deef a432e8e66d8a4c62ac8245dd3e442a31 of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:3
msgid ""
"This method validates the function call, initializes the tool if "
"necessary, and executes it with the provided arguments. If hooks are "
"enabled, it also applies output hooks to process the result."
msgstr "此方法用于验证函数调用，必要时初始化工具，并使用提供的参数执行。如果启用了钩子，还会应用输出钩子来处理结果。"

#: 5f8286deadc5445f8eb00e1d991bb662 b4f0475cbfbe4512a2e096ce41abaf60 of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:7
msgid "Dictionary containing function name and arguments."
msgstr "包含函数名称和参数的字典。"

#: 9a8e5b0063644715b6f3ed45aea071ec cabc6e1c7531432c9783a06e82fb93ac of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:9
#, fuzzy
msgid "Callback for streaming responses."
msgstr "用于流式输出的回调函数"

#: bdcb563177ca4e62bec25c69686e517c f35e3c0ffed2467b8ccb15c0c9e98437 of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:11
#, fuzzy
msgid "Whether to use result caching. Defaults to False."
msgstr "是否启用输出钩子。默认为 False。"

#: 253c1b22d8f34d34b42a6a0fee118162 9eb87cd3b16d425c99317d84e66ef182 of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:13
#, fuzzy
msgid "Whether to validate parameters against schema. Defaults to True."
msgstr "是否启用详细输出。默认值为 True。"

#: 00b74dd408bd4149a3104e6198adf1bf dff2d63e245543a592439e72ca1a981e of
#: tooluniverse.execute_function.ToolUniverse.run_one_function:16
msgid "Result from the tool execution, or error message if validation fails."
msgstr "工具执行结果，或在验证失败时返回的错误信息。"

#: 1a789ad56dbf42bf9d9f777e1a826f30 79366e3d04674b01b7353f55ca8b4729 of
#: tooluniverse.execute_function.ToolUniverse.select_tools:1
msgid "Select tools based on tool names and/or categories (tool_files keys)."
msgstr "根据工具名称和/或类别（tool_files 键）选择工具。"

#: 6ae4901d1838403380a830677577e88d abb2438a06544143885894b86d279685 of
#: tooluniverse.execute_function.ToolUniverse.select_tools:3
msgid "DEPRECATED: Use filter_tools() instead."
msgstr "已弃用：请改用 filter_tools()。"

#: 0dafe8a6234443769427a667fb2ec0df dbe72caafdc842f5aa5a81e5e66aa7cb of
#: tooluniverse.execute_function.ToolUniverse.select_tools:5
msgid "List of tool names to include. If None, include all."
msgstr "工具名称列表。如果为 None，则包含所有。"

#: 285c41ff279f49e0ae62c39aae2b502b 797d6f83222d4523a46ed8c2fcc68961 of
#: tooluniverse.execute_function.ToolUniverse.select_tools:9
msgid "List of categories (tool_files keys) to include. If None, include all."
msgstr "要包含的类别列表（tool_files 键）。如果为 None，则包含所有类别。"

#: a099b802e9b24f62be2917511f4f82e6 c1f69a2e15194f2db6216dc8c711e7b3 of
#: tooluniverse.execute_function.ToolUniverse.select_tools:12
msgid "List of categories (tool_files keys) to exclude."
msgstr "要排除的类别列表（tool_files 键）。"

#: 827de4fea7c24bc286e973743e11b32a aa81f32cc9524d0f83577daa303542e5 of
#: tooluniverse.execute_function.ToolUniverse.select_tools:15
msgid "List of selected tool configurations."
msgstr "已选择工具配置列表"

#: 45ee41094bd24064bfd1a684aba0fd0f ee459c48c10842d4806cbd2e03882d0c of
#: tooluniverse.execute_function.ToolUniverse.toggle_hooks:1
msgid "Enable or disable output hooks globally."
msgstr "在全局范围内启用或禁用输出钩子。"

#: 37cc0af5a63743c996e16348f00438b0 9aba10dcaf144208a79e817dcecfa30b of
#: tooluniverse.execute_function.ToolUniverse.toggle_hooks:3
msgid ""
"This method allows runtime control of the hook system. When enabled, it "
"initializes the HookManager if not already present. When disabled, it "
"deactivates the HookManager."
msgstr "此方法允许在运行时控制挂钩系统。启用时，如果 HookManager 尚未初始化，则会对其进行初始化。禁用时，则会停用 HookManager。"

#: 6ffeb5dbae0246d8996f24a8e5f115fc a85ec059efe542fd82057634db0ec323 of
#: tooluniverse.execute_function.ToolUniverse.toggle_hooks:7
msgid "True to enable hooks, False to disable"
msgstr "True 表示启用钩子，False 表示禁用"

#: 9a90cbd9cf4a45e7bf6a5b3ee272500d c171a94a54da47eeb3c084d85e0bdc59 of
#: tooluniverse.execute_function.ToolUniverse.tool_specification:1
msgid "Retrieve a single tool configuration by name."
msgstr "根据名称检索单个工具配置。"

#: 385643f90f4c4da4814b904d20900063 6245a93f15414d51a65c80c2e6c9edc7 of
#: tooluniverse.execute_function.ToolUniverse.tool_specification:5
msgid ""
"If True, returns tool prepared for prompting. If False, returns full tool"
" configuration. Defaults to False."
msgstr ""
"如果为 True，则返回用于提示的工具。  \n"
"如果为 False，则返回完整的工具配置。  \n"
"默认为 False。"

#: 60c827df500d46e59dbe3d053e4cd8bd 9c0d406a46ba493bad03172b14f33b98 of
#: tooluniverse.execute_function.ToolUniverse.tool_to_str:1
msgid "Convert a list of tool configurations to a formatted string."
msgstr "将工具配置列表转换为格式化字符串。"

#: 06583cec1ea0497f833a3b0f9e3562fd e664f155a6194e88b39fcf1f467b45d5 of
#: tooluniverse.execute_function.ToolUniverse.tool_to_str:6
msgid ""
"JSON-formatted string representation of the tools, with each tool      "
"separated by double newlines."
msgstr "JSON 格式的字符串表示工具，每个工具之间用两个换行符分隔。"

#: 676366d9f8494edb838a7298b5b3d748 db7d345334184cd7934151197e8b3752 of
#: tooluniverse.execute_function.ToolUniverse.tool_to_str:8
msgid "JSON-formatted string representation of the tools, with each tool"
msgstr "JSON 格式的工具字符串表示，其中每个工具"

#: 125fa2e84ba943da99480dc20a091215 f9c235c33d0c442f856d79dcbf08373e of
#: tooluniverse.execute_function.ToolUniverse.tool_to_str:9
msgid "separated by double newlines."
msgstr "请提供您需要翻译的具体文本，我将为您提供专业的中文翻译。"

#: 7130fb45a9d0416cb05237cfcbd50b35 d841483f802d451ea634bc78ba5b2505 of
#: tooluniverse.base_tool.BaseTool.get_batch_concurrency_limit:1
msgid ""
"Return maximum concurrent executions allowed during batch runs (0 = "
"unlimited)."
msgstr "返回批处理运行期间允许的最大并发执行数（0 = 不受限制）。"

#: 1b9b79a624e84384a43e23d3507fbff0 655c78e2cf1b4aef91a56f9b3086bb90 of
#: tooluniverse.base_tool.BaseTool.get_cache_key:1
msgid "Generate a cache key for this tool call."
msgstr "为此工具调用生成缓存键。"

#: 9597f96601f54ba6a18913713ec329ea 9e655891ca53442bae7349aa7d28000b of
#: tooluniverse.base_tool.BaseTool.get_cache_key:3
msgid ""
"This method provides standard cache key generation. Subclasses can "
"override this method to implement custom caching logic."
msgstr "此方法提供标准的缓存键生成。子类可以重写此方法以实现自定义的缓存逻辑。"

#: d99840ddaf7946d88628c157bcaa7f4d ee0fc718822b42fc8eb00680c9a00ed6 of
#: tooluniverse.base_tool.BaseTool.get_cache_key:6
#, fuzzy
msgid "Dictionary of arguments for the tool call"
msgstr "与工具定义中的参数相对应的工具参数字典。"

#: 8bffa00c49fd40a69da4f1588b5f3271 df41de0f43b54908bc46e9978ff60d56 of
#: tooluniverse.base_tool.BaseTool.get_cache_key:9
msgid "String cache key"
msgstr "字符串缓存键"

#: 1822821078bb41bea3b47deb3afb5e5d 4a772169653c4df7a7ba8d1268a4b1fe of
#: tooluniverse.base_tool.BaseTool.get_cache_namespace:1
msgid "Return cache namespace identifier for this tool."
msgstr "返回此工具的缓存命名空间标识符。"

#: 94c53944bb464b089584d38415e1d18e ba3fd54db9f44921925b9e5cb7818aea of
#: tooluniverse.base_tool.BaseTool.get_cache_ttl:1
msgid "Return TTL (seconds) for cached results; None means no expiration."
msgstr "返回缓存结果的TTL（秒）；None表示无过期时间。"

#: 5d7e2f61f6d34f1b98511c647423682c 8a4ec08261a54d568728dffbeda60ab3 of
#: tooluniverse.base_tool.BaseTool.get_cache_version:1
msgid "Return a stable cache version fingerprint for this tool."
msgstr "为此工具返回稳定的缓存版本指纹。"

#: 23a36fae2c384438bea5dd0040227400 e219f635786e4917b78b5e068aebf045 of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:1
msgid "Get the path to the default configuration file for this tool type."
msgstr "获取此工具类型的默认配置文件路径。"

#: 4d82760386d74476a5bc13ca9e0bfec5 ee5582d117d54d6f883a2ece083ffaa6 of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:3
msgid ""
"This method uses a robust path resolution strategy that works across "
"different installation scenarios:"
msgstr "此方法使用一种稳健的路径解析策略，可适用于不同的安装场景："

#: 02b24cb0a200488aadf58e25a06e071f 32433255f9cb4fa39db0184effe7147c of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:6
msgid ""
"Installed packages: Uses importlib.resources for proper package resource "
"access"
msgstr "已安装的软件包：使用 importlib.resources 以正确访问软件包资源"

#: df5ba051bca9491c8107cc055b5ea5eb fe82408fb2e24beeb81897d4ae0fedc7 of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:8
msgid "Development mode: Falls back to file-based path resolution"
msgstr "开发模式：回退到基于文件的路径解析"

#: 5736376bdb114e079c7854c951170155 96096c656af7453aaf3b620b5b6f94dc of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:9
msgid "Legacy Python: Handles importlib.resources and importlib_resources"
msgstr "遗留版 Python：处理 importlib.resources 和 importlib_resources"

#: 165c7fedadac45839a3d5ff4e78a26dc f04667e95513494c90170dc1b25aff6d of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:11
msgid "Override this method in subclasses to specify a custom defaults file."
msgstr "在子类中重写此方法以指定自定义默认值文件。"

#: c6f0063e95d2460da6caa6d57b182f55 e784b452f95f4dbc98edcd3d2c23de10 of
#: tooluniverse.base_tool.BaseTool.get_default_config_file:14
msgid "Path or resource object pointing to the defaults file"
msgstr "指向默认文件的路径或资源对象"

#: 92b0e094e82c4889b71dec963b5130e1 95ecb71d9cbd4729928d535117f1bd0a of
#: tooluniverse.base_tool.BaseTool.get_required_parameters:1
#, fuzzy
msgid ""
"Retrieve required parameters from the endpoint definition. Returns list: "
"List of required parameters for the given endpoint."
msgstr ""
"从端点定义中检索所需参数。  \n"
"返回值：  \n"
"list：给定端点的所需参数列表。"

#: bb6237d6d9d74ec3809cd23a0c8cd2a1 db2388d4a3d84117b4f497abfa100a68 of
#: tooluniverse.base_tool.BaseTool.get_tool_info:1
#, fuzzy
msgid "Get comprehensive information about this tool."
msgstr "获取有关已加载 XML 数据集的全面信息。"

#: 32e067c00a184e8cb7ebe2c29368ae29 9bc655e58808427cb2627353af2e303d of
#: tooluniverse.base_tool.BaseTool.get_tool_info:4
#, fuzzy
msgid "Dictionary containing tool metadata"
msgstr "包含所选工具和元数据的字典"

#: a40bb6d0118d40e793f358e3d22ef55b d5eae7ae66c342ec80786a12fcb8be82 of
#: tooluniverse.base_tool.BaseTool.handle_error:1
msgid "Classify a raw exception into a structured ToolError."
msgstr "将原始异常分类为结构化的 ToolError。"

#: a27e2948639a45c2b162ce0724b75ed7 b7a0f23c8e704c168401fa30c157771d of
#: tooluniverse.base_tool.BaseTool.handle_error:3
msgid ""
"This method provides standard error classification. Subclasses can "
"override this method to implement custom error handling logic."
msgstr "此方法提供标准错误分类。子类可以重写此方法以实现自定义错误处理逻辑。"

#: 8d918c01e95749e48147fefabc802b7e f67b2feb8a18457187ef724b970d7e4b of
#: tooluniverse.base_tool.BaseTool.handle_error:6
msgid "The raw exception to classify"
msgstr "用于分类的原始异常"

#: 519ce86de311469185756baaade23f37 fc17c8072231429f82e8585cf85a3d53 of
#: tooluniverse.base_tool.BaseTool.handle_error:9
#, fuzzy
msgid "Structured ToolError instance"
msgstr "已初始化工具实例。"

#: 60407248ede3451fb91aa5011a3091e9 992dfb6c90034effac397ad0e91346a6 of
#: tooluniverse.base_tool.BaseTool.load_defaults_from_file:1
msgid "Load defaults from the configuration file"
msgstr "从配置文件加载默认设置"

#: 007c26aabb18497c81d7629d9f9005bb 0316b08702ab4566bc8d9e31fe2c0ae1
#: 039f785981fb4465971e91afc049fb41 04000e33c1a040aab6773475a463c327
#: 0701da3cef8243edaa47ffe5806e11fa 0ae742c8350f4c6c850c5011d2c10d5c
#: 0cbc7119234942df971398ff2e8ed0a3 0d77d0ff81354c42861e0fdfed1ec70b
#: 0fc6f7239f39405298c5ad121a4e734e 0fdf461f99f445b3bb557131c546ea3d
#: 13f9a2880e2b41e68762c739c6a5d520 15f6db6252f140fea18248c0c81579d9
#: 17d12810180244998b1adaebaf261046 1935e969a2814459a7365f4148b73925
#: 1a79a502a6b04d93a86216e79cdc1b93 1c71afda84f3406d8e1d56c1a99833bb
#: 1ef35712cca04a8a984a89e906e06f28 1f8c89a718cc493fbd47164aca4964c9
#: 21c0f54bfa314ebfa52cf57efd9266e8 2392163a585640029004f844aed0667b
#: 263e54e554124fdca41cde0a13c76603 2ab837ca645244769259ebfb7c480df8
#: 2cf792cb83e842bcafd57e6e019882f8 2eae7195e12a4e5b8b1d04d905620e0c
#: 3238fbfc882c4be88452cd2fdaa5e3e5 324e9c3ed7b7461ebfb4839a4022d7f4
#: 32bdb0ec85de4971a356916a664b128c 362ffc56d4b140a2a00da3c07b5d184b
#: 37155d604976470f9cdf87263e22ad98 3746162017e44651a345459a896b8c74
#: 3783dc1e87e3441db2c5f9ecd52f9b10 38a095ebda0b467581b084b70fa9c345
#: 3dc4b8e02bb94d2ebed2278a7ad3966d 3efea3a18058425284240963568bec5a
#: 411540c6629b4e13abc9054d976341a5 41aef5248f18429d84df1b3e66b653d0
#: 4295344407f6477cb79c3b2201175dae 48225d1a49e14ac9bab3ad70398fb65b
#: 4917b4fe124644e889b8614bf53b9c01 4a4139a2d1d64f139ce8b1c75e4769e7
#: 4a9bd119d4e64c74a82630040d2b7e68 5100b865c5534e73a7cbd09150478106
#: 5231a137a2564c929fdabb27d27fe7c0 52752ebac504427a84d23946a8504637
#: 53de815fcdda4f63812a84d9b3b35ee4 54696e717d7e43099231856d405f0f65
#: 55bc4b4ae1a34b43bba1c036eddb6157 57c1afc8995a455db4e1c0167ad4c21c
#: 5d40c72cf16c44e0bd30a81f10ab495b 5e13167a723c441c9de07cd079a43daf
#: 5e8dab03d3794edc95713848e105672a 6098ee1e9d864f4ca85027157a354477
#: 619a735b0fd9402e938690803cca785d 6273433a65db4a34ad808c280126044a
#: 62bbccf7b8384daaaa22763d9c0ab927 65b8309137cc46e6bcf5d48263affa36
#: 677ede3e687b4897a605a3acdc1a5e39 6a0cdc3b6bd3437583822b494f79012b
#: 6b9d54d919b44219b7493cacc0e47b08 6c1c981603ca48fa81ad2f8034051595
#: 6cd22df4e7c3402f838decbf92dccfc4 6e2892ee04d7403eaa85a0a66afabee0
#: 6ef457e316744557be5421a2193dce2f 6f96f94c8d2a4f64a1f6af1a2c657965
#: 70037c63abde43f29a3ab7dafbe059e2 77920567a7b04e9aac5dfb6d9593a5de
#: 78cc50686e93451ebe43050b807d9eac 78f28f0e2ae84399b0aa205e86b3af97
#: 7b274f5a9e234ca0a6f6bca9e9cff095 7d3030ded647490da7cefc79e35cb148
#: 830b89d9e7e0453dbb64d3aec48833ed 84d15ac123194419aed044a25c0f473e
#: 85ac77b598534d0bbf40cddf6f50a583 8a365b5ef4d446fda1705ea911cf3dca
#: 8fae07491b3a479582f2cd22eb61d241 96a5ed521c784cf99698ede466bb9485
#: 97203e0da6a74ecab532cd1dbc299334 9bdd1269a89e46078a495cb85bbc6309
#: 9e58deb74e284b09988028f470a29cc7 a86ef9f834634feebf3750642c2c4523
#: a9b04b361f984b96be29b1385c29468e a9c47e0a36c44d10978d9747d56814fd
#: aaf2f8f454444d878318d82b9fbca54c abb6355b4f1748e983e995dfdcca22f8
#: ad0e007a013742628a4c69cbcc2bd2df ad2b28add09e43c2944fd80a499cf720
#: ad44e58ed8084c5fad7c055de5bcf55d af3c9a3d854649778c79ef0c569b18f9
#: b2533dea7c4745578d728c12c09faf2c b273c1ada527428b92a78ecb2a1d5250
#: b403d67d1f164675a5f81b0ec85a5983 b786e6da2d844861afa4e8df832ae429
#: b84733c45c704a53a33f1fce915dd7c7 bb8c5c4a95364b6cbfe843ad7c6b7262
#: bc9bc87548df47b9bb28cb14f99a08dd c030be6cf9244684b39717f371da4ad7
#: c0efeb6a968c43a49ecd67346f273860 c282214f5db043aeae3c2e8f8da78a1e
#: c3afb1de04004da49ccee3b91b9ec7de c86459b0f4c141399dadf45af7377a49
#: c8a8fa837acc42818ca630edb10ea00a c98c6813d65c401caf74f92d7ec86b5d
#: c998bfae564749eab4f4f15ef94cfdc6 cba40a9df90244cda4875083ff3951f9
#: d12ea10b77324d088fbde65cc9850959 d210eeabe5c44df0aac0b2102ffe48bb
#: d22a4953071d4d759cbd1791a11f31ae d2ff50e04b2449f1a820bab0721ab618
#: d4959fe2c04849a586108e7245fe68f1 d5ea65c90bbd4d72979f6973aa5cab59
#: d75d84a597ef487086844a024e1529d4 ddb2c581d9eb43bdbc15d41d2a92a9ad
#: dee68bc46ffb4752801638e22fae652a df55d2266c5c43c7a4004ba14a766ef2
#: eb53e4ac9ef448d897a95b4e31451e84 eb80a369108442ecaa6f95222cef7f2e
#: f0c245a3cb404e93b188ff0ece497608 f1a09380d89f4509b13e344405f01361
#: f291025d84c3443098a3c656cb5694a8 f4b392b114b64632ae38abdced4576cb
#: fb52287276ea4f5cb88195af5b5236dd fb76053d8e1e4b2eb36b551bc06c1b4e
#: fe6a302169ef4b519cce9a3a41b43d4c of
#: tooluniverse.agentic_tool.AgenticTool.run:1
#: tooluniverse.arxiv_tool.ArXivTool.run:1
#: tooluniverse.base_tool.BaseTool.run:1
#: tooluniverse.biorxiv_tool.BioRxivTool.run:1
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:1
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:1
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:1
#: tooluniverse.chem_tool.ChEMBLTool.run:1
#: tooluniverse.clinvar_tool.ClinVarTool.run:1
#: tooluniverse.crossref_tool.CrossrefTool.run:1
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:1
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:1
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:1
#: tooluniverse.dailymed_tool.SearchSPLTool.run:1
#: tooluniverse.dblp_tool.DBLPTool.run:1
#: tooluniverse.dbsnp_tool.DbSnpTool.run:1
#: tooluniverse.doaj_tool.DOAJTool.run:1 tooluniverse.efo_tool.EFOTool.run:1
#: tooluniverse.ensembl_tool.EnsemblTool.run:1
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:1
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:1
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:1
#: tooluniverse.gnomad_tool.GnomadTool.run:1
#: tooluniverse.graphql_tool.GraphQLTool.run:1
#: tooluniverse.graphql_tool.OpentargetTool.run:1
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:1
#: tooluniverse.hal_tool.HALTool.run:1
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:1
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:1
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:1
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:1
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:1
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:1
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:1
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:1
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:1
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:1
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:1
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:1
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:1
#: tooluniverse.medrxiv_tool.MedRxivTool.run:1
#: tooluniverse.odphp_tool.ODPHPItemList.run:1
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:1
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:1
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:1
#: tooluniverse.openaire_tool.OpenAIRETool.run:1
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:1
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:1
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:1
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:1
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:1
#: tooluniverse.openfda_tool.FDATool.run:1
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:1
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:1
#: tooluniverse.pubmed_tool.PubMedTool.run:1
#: tooluniverse.pubtator_tool.PubTatorTool.run:1
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:1
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:1
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:1
#: tooluniverse.restful_tool.MonarchTool.run:1
#: tooluniverse.restful_tool.RESTfulTool.run:1
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:1
#: tooluniverse.ucsc_tool.UCSCTool.run:1
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:1
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:1
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:1
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:1
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:1
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:1
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:1
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:1
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:1
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:1
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:1
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:1
#: tooluniverse.url_tool.URLHTMLTagTool.run:1
#: tooluniverse.url_tool.URLToPDFTextTool.run:1
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:1
#: tooluniverse.zenodo_tool.ZenodoTool.run:1
msgid "Execute the tool."
msgstr "执行该工具。"

#: 025f3695c5bb4e089e0b15c32e84d9a0 0314cc2c7b6842a1ba8629f6b93bd56f
#: 0b3d6abacfc940c995fbb3326b342168 11cea26b44e8438e8bf17d61f3cdb1f2
#: 13d9d5b5e6a34b4d83f1ee1c02f991b7 144edaf702da4525b8fe9433ab976b3c
#: 1a7c2433f8e8428694f8a7fd433b53f4 1ed9c8ac2f084890a01533217d487afa
#: 1ef0c89dab714dc1bec1cc92f0bff306 231c03c40273401ba8f6184224e352b9
#: 23db2936b35544059b80bca395e1b5da 25f97d13f41b44aca22bbe0dcbf74300
#: 260e9ed69145412bbc3d161b3c8ff05c 27eb0812433c4e078139f848d3bfd90c
#: 29c46a0ae5c9419e8c52ab56b0ebbfdf 2b3925be1c0d44d59f143fbfeffad0c9
#: 2f6d733915c34e5cb1de4ca8317e250e 2fa5477d4efa4a8bbbc465b4000f4760
#: 2fd8f199d693442883d5069a1caedc54 31fda7c2404441559e208d956d0f66f0
#: 33029ab2649c49e1af8ad744d276fb8e 35e6c9cc1d1f41babed751adb01dbcac
#: 36d109ccadb846f68b1acf8c2f49d1bd 39213b8093ff4047918f70df1019630b
#: 3b18e222b79f4d52a48dae2a26e97f50 3cf258a4a0ee4414b4ab38bd063bb0ea
#: 3efd238412dd4e27acb206a371561273 3fe3361f94434bcc8ecac197461a3dc1
#: 401a0f965d064f3a9852dd6fd03b2139 404d9f00a60b4c0795ba37afe7c5b0dd
#: 43f7c4fe6bdf44eb897c290bebac4d3b 461dd108ba384e2a8033ef7bf319043f
#: 48051bb775e84b4d80a9acb83181c416 4f011664e69a42b5ae75a96fc4f8c079
#: 5040f7595c7947898c98153f175243a4 510ebe4a11254b6690847c02ad5375c2
#: 591f1649614f414f92cad6d77bdf857d 59882fbf8dcb495596760d08b35edc66
#: 5a87bf0397484c458ceda4cac969afdd 5f9450f0678a41eb8b94783e733ac2b1
#: 630153d419a241778722499e99c48848 6338573e23bb4f728ad8471afcc65c26
#: 6488e196a2284b60a4a3bb08688e8747 6702f47f4a6b429381c36c5ce960b3e5
#: 67c20c971e874464b2a6370d811b8070 681947bdb45f4e37965654539accee26
#: 6a6cedf7b444415bb416b671ff0ba939 6c02b3b62cdb479b9c36600efa4b2e86
#: 6d859c672933418ea63c025090df7acf 6df0dde60d7244d798bc7510bf3316e7
#: 6e2b2a51b2204c598b14e346f57c0ff1 6f1f153fce284fb09c5799d5ac8b7aa0
#: 6f9d773fc992423eb9f34d26a4028791 70263c5fd3434936bbc7a9132dcae05a
#: 74b86ad2927747d2873fef9e79924cbd 75a07d28d37e4c5caf9d41d0ed41c03d
#: 789ef4cd97654a3991ae8660de717514 7915c7efca77452b8e4ca677e4cddbb4
#: 81849e57298243598ffeadd04b18ea95 822bb94a18134a46b2e0cda2bdd79777
#: 83dd73a875e14ff58d887fd99013d784 8499074f13924b1daa1b9bedc5672f2d
#: 85ddae68b2564ced8fabef1b0fdfae3b 88860d12cce7405d82803e7ca59128fa
#: 88de9952749a4538a28ed3d5e76ab933 8ff6cf4c064143369803c271e8f2cb59
#: 9029d09a3fe74a3c969b8c1aa4d94690 93010e25517b43ecb4169ba72f49dc05
#: 957db45a8411469f8594f261eba6ff19 9581691faf0646a0b1f0775958d51a6a
#: 966f7bccc46c4a3c9e9abd078fa50609 970f975169ba4e7fbc2de4357caf50fd
#: 988ecbea4bf1468384d1377d9ca3ff88 9bad64cdc7e74a55b6efdb3a7df3a6af
#: 9febd9b51a6347dab8107dd2f1ae9b98 a444307bd25e458a96246c95c9d50359
#: a4af727ac3fa4005aa649df6ce4d9b57 ab55061dc9114df8826709d68641ebf4
#: aceefb340cbe449ebf85c6bb794d7064 af0fe8147fb7409c8d304f347e742ef7
#: b3607fdeeac8413d8aab442d9e0ce421 b7a58c2f4c5a442ebe28bdf3fdda9c75
#: b84dce9ca9c44724a594700405b55c3b b86edcbd135147d79d1ac8a08f41ecfe
#: b94aa8d30d2f45ea96c0adf2d9115d13 bb83da5f0254447d8f95df8e56b5cc78
#: bdbbeebc12c6493489de1490db95ba92 bf742cac523848de97059f47fd8bd76f
#: c227c9a633474c91b9d870ee2812e624 c254529dc1f84bdf9577fa3ef335fea4
#: c264236d8db84ecbaa9c39315322e96a c335fe113c7442e2bb501e5eea93a999
#: c6b0b67d3be34ba6929314e301d3fb96 c71b5f9791524971a45f3857c739f5aa
#: c84e1b4daade429db9ced3c35ee66dc8 cb0eff7f0815401e94e2f36b08235172
#: cc3682bb981646a7a27094da8722b0dc cc484a85307749c2b3ce26f6fb2708ce
#: ccb7a8b34fad4403b8fd27c45dd38dbc ce1c3b029a304066b8610ce984ddb9b1
#: d33130bc70f9403ab0222c961da7b991 d3e7f17897f74f23b0f272c040055202
#: d3feb84c1fa84637a7b80ee4db4a6903 d49a7bfa1b9f4324b1fef674749184a8
#: d4d9901ece3a472f9f1811163b9d9abd d562dd9d080e43f88900237a4bea5289
#: d5d57a0c8ec8490a850e5bb250370c85 d7557988a8c64e42b82daa46b62b2eba
#: d8422b0347a44ee3b27e94ce962e05ac dbd16bd91d934a9ea56c844ae710103b
#: dc46b026fe244b069116cb8fc80c6a73 dc8c5ad6a0b04923b1f371236a679f9f
#: dfa7db69192c42d9b110c8a3b2f2639e dfb96b47bee84cbfaae6f8dc92d5fc87
#: e2427bafd4e5483e92564ada6e0b0ccd e9809d3887ab4296ba772afb3ba06563
#: eabca06095dc420daf4893a9499ff888 eb6aa60f8f6643c995f98189625a7b80
#: ed31359cb9a94846905b0b654f1092ea f14b7a468f14424b95de3ad32e784da7
#: f2d5a0bda52545cfb1154bd44c608665 ff22622f14ec40aa9ea7aeb5a53ce087
#: fff6441ef2e64674b3cddc047858578c of
#: tooluniverse.agentic_tool.AgenticTool.run:3
#: tooluniverse.arxiv_tool.ArXivTool.run:3
#: tooluniverse.base_tool.BaseTool.run:3
#: tooluniverse.biorxiv_tool.BioRxivTool.run:3
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:3
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:3
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:3
#: tooluniverse.chem_tool.ChEMBLTool.run:3
#: tooluniverse.clinvar_tool.ClinVarTool.run:3
#: tooluniverse.crossref_tool.CrossrefTool.run:3
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:3
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:3
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:3
#: tooluniverse.dailymed_tool.SearchSPLTool.run:3
#: tooluniverse.dblp_tool.DBLPTool.run:3
#: tooluniverse.dbsnp_tool.DbSnpTool.run:3
#: tooluniverse.doaj_tool.DOAJTool.run:3 tooluniverse.efo_tool.EFOTool.run:3
#: tooluniverse.ensembl_tool.EnsemblTool.run:3
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:3
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:3
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:3
#: tooluniverse.gnomad_tool.GnomadTool.run:3
#: tooluniverse.graphql_tool.GraphQLTool.run:3
#: tooluniverse.graphql_tool.OpentargetTool.run:3
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:3
#: tooluniverse.hal_tool.HALTool.run:3
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:3
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:3
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:3
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:3
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:3
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:3
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:3
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:3
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:3
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:3
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:3
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:3
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:3
#: tooluniverse.medrxiv_tool.MedRxivTool.run:3
#: tooluniverse.odphp_tool.ODPHPItemList.run:3
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:3
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:3
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:3
#: tooluniverse.openaire_tool.OpenAIRETool.run:3
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:3
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:3
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:3
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:3
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:3
#: tooluniverse.openfda_tool.FDATool.run:3
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:3
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:3
#: tooluniverse.pubmed_tool.PubMedTool.run:3
#: tooluniverse.pubtator_tool.PubTatorTool.run:3
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:3
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:3
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:3
#: tooluniverse.restful_tool.MonarchTool.run:3
#: tooluniverse.restful_tool.RESTfulTool.run:3
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:3
#: tooluniverse.ucsc_tool.UCSCTool.run:3
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:3
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:3
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:3
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:3
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:3
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:3
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:3
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:3
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:3
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:3
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:3
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:3
#: tooluniverse.url_tool.URLHTMLTagTool.run:3
#: tooluniverse.url_tool.URLToPDFTextTool.run:3
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:3
#: tooluniverse.zenodo_tool.ZenodoTool.run:3
msgid ""
"The default BaseTool implementation accepts an optional arguments mapping"
" to align with most concrete tool implementations which expect a "
"dictionary of inputs."
msgstr "默认的 BaseTool 实现接受一个可选的参数映射，以便与大多数具体工具实现保持一致，这些工具通常期望输入为字典形式。"

#: 0019ef36300849228f7c56e591ebe96a 014bcde836d245099263985c92049c25
#: 039943978a754971af1cf6b253d93ec0 0442c2146771405b974d4640f31744e1
#: 0534aabfecee464da5d67b4242dbea89 06f84624a77d4dd4a46e8a848190ecc4
#: 07335500619e4477bb7db94c0521d6be 0765aad2f51c4aed9b9164fdc73a9f38
#: 0e3b0743c0654da4bc242fd73b690ef9 0e621ee7b31a4b1a93834a0cfa5b7e6b
#: 12ef5f182ef14741b6cd35e6b1ec4b5c 16130e2691014d2ba0a64ca4f4435be2
#: 1653f6dfe94e414ebbb640f44a6681c7 1c690cf1b9074aeb841d86a708e3d271
#: 1d2d72e378ab4e3cae5e2719eff842eb 1d8ccfd41f93472c81dc1aeee22234b5
#: 1d986f89d6ba49c89d2c105efedaf83e 224be48aba5940ac897fa39648f03b5a
#: 23d18574882f4ecc8cad7b1eab1fb322 23ea048c71b841d68a72b66c482c8a02
#: 258949656e1245139fe800dbf94dca24 2960666428c4483a9fa104e647e4166f
#: 2b3a7c1b28094d7299130c010135e685 2b8dd1251eca41ddb148c969c315a753
#: 2e6d517948b44b01b919dac77f64f6b9 36328471da5d4966843cd479dfd49229
#: 386ea36281e44829bd8075f9f49b14d4 3ad3d13f16a54ddfb3106aa21e0a3540
#: 3db00fe39ff44fceab6bc637948a2b4c 3e1ad1d577e344dcaf645141e44d84a6
#: 3e225da9e64c4ba49b61bb720a6e589e 3f9b8a3b80ef410da9be73c2cf2b8617
#: 3ff1ac2fcc9548a9a894208c210fc3be 415032881afc4b4296ca60896145e204
#: 43294a5faebc46e6a863e51dde374ade 45701d64f4cf44f784ba9ae082e2011e
#: 46b40c0eec634d98af957b005e0f998a 49c5960d36294211bd3c39119a6b24a2
#: 4a88d052655940f3bea4b1c352e820dd 4e3756ce4aa442ca84ab964bb3e426c0
#: 511b5776c69f4f8db4603256656c389b 53e847b2f891405fa740fad650c3dee6
#: 5512a5c5971d4b7daea203d528e996f2 5697a78095d74b46a5510e84e61d2b3a
#: 599c78c0411e43abba17cb8ecb6feaf6 5b840baa23134619becd51871d9b6d07
#: 5db8e76365014db8a96d425f117840c3 5e6cda0099f349c39338fd4fa77c8767
#: 6722489f89e74b7d9500130b14a34493 68e6f5a1568e46a9af48416ef0d61731
#: 6ca9da439e614333bcd2ab89da9b5770 71b11b7e5bfd475f9ac123b023dfe365
#: 72e5f64cb12440a391f0ea0b087dfbfa 74ef3de818374758adc21b30300d1f66
#: 750d5e0514cb44039056ca727b98a1d1 77b5af34f07f4f43b4fff013e83d8b61
#: 7888d6892b1f498a9bb1a46b440e961f 79307c6bd41940c782bd21aad53ebddb
#: 7acde1837f3340ef9821802c37b2cca5 7b6b19435bbf48e8a30e3b1ce8b70e8b
#: 7df3be25c4f14382aa41fb14ba376b87 810cfb3062ee4d46aa80c34fbc156467
#: 8327cb7713234308a1803455dca54ed4 8af87c3ac5de4f39bd80deba97f52734
#: 8bc24e005b9d42ad86e77683d1b3c30c 8d753c16b7cb43eba359ec92db0a481a
#: 8f55be3b70504922bf0f3da7db8348a0 906fd94a19224f33859b675119d55b50
#: 917ac4a4183d4f01aca0552ea0951b4c 93282a13659544e38841d1fe9e9f3621
#: 96c003f8bb7e41edb365551dd16f42b5 972cb639fd064127a19e7480bba0a575
#: 97fba41b8ef640f69b686410b2ec8a0e 99a07c3c92c54dda928da16217b35f3f
#: 9c404d041b574f57a5b12432b4f94a59 9c9b8dcfa4e74abdaa60c4bd9e9a9185
#: 9d988ff1cbb6450183b3510587d18b12 9e16f88c04d04e74945f5e109adfcb30
#: 9e4f3da75b8140eab02ee2c8e5d3aba9 a1c570bf25db47b78f1834d763c0329c
#: a556ad0371474133b89f1ba8d1e29a44 a9d170bab2084b0596b1fd559e611826
#: aae9728cf9734ed7aa5849022ff92184 b0c741d0655447d3a2c276d2dce8ff95
#: b1e69fb89e144b68b104c6c6a988828e b47edb09de5641518dc97934b9a5ba75
#: b4d4f46e5b214341bbafa93b3d2da18b b5d2f0493305406b9f306f912a8e61c3
#: b8dd5267a49e4cb2bbe88aeee5ab8f07 bc907d2f5ff74e6d8d011d59ace64aad
#: bc9f7466164d4d0f847f43308a1045c0 be7350a8ce9245398c3bc029e6622891
#: bebaa685d600405983f84a315080fb89 bf5624e59ce24111a3b716fabb940d6b
#: bfd004f8dff9485f98185e78af74a1d2 c13927e409714633bac74311ea95a853
#: c3bc0a0fcc4d492a8a2dea539f98940e ce323f6a45fe448d81af70f11a8dbf7d
#: d0d9d3f6822741fba9b7e724e2979ccb d18c6b31b2e14c60911ae33a2ccc18e2
#: d417863fb6414499b260aa8f61b50803 d47491dc02784ff1adb404a893a06025
#: d9239dc17ac5473993beb653cf6a5881 d938c1eb84f64405abe3fabfc4981d5e
#: d9cd87caf976460f9890faf445090ee9 da7f62f9ccb14d66bfec1abe6619c138
#: e16aec6052d54938a222ccee8b08c25d e21d4e7d97624108b41570d26945639e
#: e95798e7699d4282a6493224c6c634b8 ebada9ceef034de7a13655822989fc93
#: edea398778634ebe86a56e5bb4117e54 edf708172f2e4d11942d92a473a6df40
#: efe422afd3be41829793e61b1923a922 f0e9abea72654e45b5174ab9e0b255ab
#: f1b40187fbc14d47966feaf7ef59c8b4 f44933e835724988811b338f7ae86d29
#: f673032fcd264c98b400961bc9d2a969 f86bb400bbb7439f8372730589c7bb57
#: fafc416aa46a45b7b4b3dc2c1debdb94 fc00dbb7316f4add894fae3ae57d636f
#: fd3e551d64954369950da65cbdc5e034 fe7cbf0e2feb4466b657a28943f3c901
#: ff1ce27b4669403d8938266df2409615 ff51c11654a747b4a94ea6bee9164ead of
#: tooluniverse.agentic_tool.AgenticTool.run:7
#: tooluniverse.arxiv_tool.ArXivTool.run:7
#: tooluniverse.base_tool.BaseTool.run:7
#: tooluniverse.biorxiv_tool.BioRxivTool.run:7
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:7
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:7
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:7
#: tooluniverse.chem_tool.ChEMBLTool.run:7
#: tooluniverse.clinvar_tool.ClinVarTool.run:7
#: tooluniverse.crossref_tool.CrossrefTool.run:7
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:7
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:7
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:7
#: tooluniverse.dailymed_tool.SearchSPLTool.run:7
#: tooluniverse.dblp_tool.DBLPTool.run:7
#: tooluniverse.dbsnp_tool.DbSnpTool.run:7
#: tooluniverse.doaj_tool.DOAJTool.run:7 tooluniverse.efo_tool.EFOTool.run:7
#: tooluniverse.ensembl_tool.EnsemblTool.run:7
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:7
#: tooluniverse.execute_function.ToolCallable.__call__:6
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:7
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:7
#: tooluniverse.gnomad_tool.GnomadTool.run:7
#: tooluniverse.graphql_tool.GraphQLTool.run:7
#: tooluniverse.graphql_tool.OpentargetTool.run:7
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:7
#: tooluniverse.hal_tool.HALTool.run:7
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:7
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:7
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:7
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:7
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:7
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:7
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:7
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:7
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:7
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:7
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:7
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:7
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:7
#: tooluniverse.medrxiv_tool.MedRxivTool.run:7
#: tooluniverse.odphp_tool.ODPHPItemList.run:7
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:7
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:7
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:7
#: tooluniverse.openaire_tool.OpenAIRETool.run:7
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:7
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:7
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:7
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:7
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:7
#: tooluniverse.openfda_tool.FDATool.run:7
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:7
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:7
#: tooluniverse.pubmed_tool.PubMedTool.run:7
#: tooluniverse.pubtator_tool.PubTatorTool.run:7
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:7
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:7
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:7
#: tooluniverse.restful_tool.MonarchTool.run:7
#: tooluniverse.restful_tool.RESTfulTool.run:7
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:7
#: tooluniverse.ucsc_tool.UCSCTool.run:7
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:7
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:7
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:7
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:7
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:7
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:7
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:7
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:7
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:7
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:7
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:7
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:7
#: tooluniverse.url_tool.URLHTMLTagTool.run:7
#: tooluniverse.url_tool.URLToPDFTextTool.run:7
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:7
#: tooluniverse.zenodo_tool.ZenodoTool.run:7
#, fuzzy
msgid "Tool-specific arguments"
msgstr "搜索参数"

#: 000365ef0c2c4967a8614f149757c8d7 005495d1ec78436f8286d23002bf8840
#: 01c6aeb0bfce4a479d7a52ff26473b81 02c5838fd1664700915922c2b34486c3
#: 0335199c9af44c4bba90651a661e8fea 0ca3a706c3fd40a1b673fac5165284c1
#: 0d63527061254070afc24a0a15358e3d 0e43aacbc6984d7bab5ddf824e0e40a4
#: 111ea6e170cb49b98d7966060e4d9179 15d666c8060f4384aabaecca0426c1ae
#: 184a3fda43dd41fc8d7f5fed20470671 185fb7e9e48e4194aba42a2c7b17cb25
#: 18e86fca133c49619b584d26298c9bf2 1e7495d3d4a64d7ab3c9818c54f3fba9
#: 1e9f8d10b56a41718016596713f96118 1f49cfb7b8b948debac0437166486240
#: 25ff810fc1be4a11b0b41ac64dbda533 26f6b8f7907948a09791e3e07ccc352d
#: 29eb6db05ba54cec83d05feae24223a5 2a5a5eed343d4900a166d42b65f9f3f7
#: 2a7eace22618418cb812a296c24a0cbd 2ab37efbbd7045e9b51a906a69b75da4
#: 2be43196015b446598b26b14e67003d3 2c43149417c84d1e8d05a21e36da8a7d
#: 2c99dd3f5ef84ae9ab93e8fdb2e93a2d 300eca457ddc44d0aaf6f0326e4e129e
#: 3209328fe6ec49f2826cd9bfa5cf7497 332a54f569a84beb8fe9f8e1ba64b992
#: 35eed1e612e943e6b56f91e9ccfb826c 3620baa73cca483f99fcdb59614736c5
#: 365b0dd778b5471382a49604d4f3bfb9 37ddd98e3099497692517814fe1a6a76
#: 38b2330c01e84c4ca9bd72390e691ee8 38c25884dfb347038bf0afeea9cd2665
#: 3cccadfaa3f24a8eba3b63975c7abb22 3db3f73e56f84cf0b9ffae8ea269acc8
#: 3e1901beacbb410ebc6b63f0b6ff057a 42f7271ea93e45e48b22255993886617
#: 433cef6326344b5b9911de5e8bb5937b 462631cb411d4090b76879377a9a45d1
#: 46498835481043c198ef4cbc83ccbd3b 473cba6c972e4a3e89b6e334d34365c2
#: 4793f94fc2f14c669b2bd0e3e823a2d6 4b0cad22219a4131ac3f5e7f9a8c9457
#: 4ba0d02e19e349f8af560ed1992f205c 4d479dd8cce84c9d9b1d4df1aa5d1aec
#: 57033499f0b94692b2d5e0bcc49ddb6b 57544acf73b64d1ca0839ca745bc79f2
#: 598df44147cc44ffad6c787cd5624037 5af8b2e437b040a0803bee9a9c9b6714
#: 5b6d870d9a3e487fb481842c7ad11ef4 5b787de694ee48c6bd0de0390adf41f6
#: 5c4a1ca40253444bbd5ac88b794050bc 63d41b7205d24c3ba5c7967a41c4083a
#: 647af2d7374f474baa118c142f726383 6a2d7d38f23e4e81aa3f7b8880daf165
#: 6dbdb03c265344389654ec851ff33426 6f6e8864ed1c4a4cbab5950a635a988f
#: 6f717f9596f04ca1acafdb4c95b78396 717a9aefca9f495bbd71dfd986a10777
#: 71f5f3bb27ee4d848226700a8e7ad284 76132598b0614dc180aeccc2170b597d
#: 7929eb1dea604b5bb56faa5822c5b217 7a4546cecbf4427fa999e12db1692ad2
#: 7a66f813d3284d419fe29d5a7406dc30 7dcb47e0790640519b19c4ebc6af3da3
#: 7e1627d6ba0f4539920afec7cf650b6e 8bac5fe65563423bb0b78c2aa6b995bc
#: 8c7d91e485d740c7909eeb84b1043cfd 8d98802bb3074d13a9e903f2d8f487e5
#: 8d992e2104524b63b1241043ee04da9d 8ffbc2c0e9454a8e8c98e9dae9caefc0
#: 948224693b38483aa62f11c92e58bfe8 97195f48e4f84c92a9ba13a53de09879
#: 98762915776a46e498311909a3f9524a 9a0291c426a74835b1fe34f2620e7130
#: 9c93444afbd84a609466b2751d222d69 9cdfe8a11edf42688e2804698adf29f5
#: 9df247c031de4f85b184c53c6f08c6e3 a0b790ddb75f49d1a546c12ce37c10a6
#: a190adc2c63f4557ab1b019e1258f067 a1e29d9459fa49309b5b26c9e8d1cf92
#: a51b644adf304e4aa79b6cbed2054457 ae051528fb7f4d35acf5aa4a0f12a6af
#: aed880079fd741a9a86906e832dda74f bb6b59645c874fd4a37abe5abf6f384f
#: bd5770d9aa90401d8bc4166e86402130 bdef2642f3db4135bf08409c55f5970f
#: bf36765c91d74adaa809c979da53e549 bf3fe1a40f77480bb020c47727a38d36
#: c0a8d855ebb248769de02924f35f5293 c6106e8c3bbb418b95e4809d8036f41b
#: c7f9d322b2354444829086f8aee65db5 c8176915dea54b649db10286e2d5e6aa
#: c893219453274f019d4dee28f851a32c ca9b9e510b394eccaf652a2f880c2748
#: cc02147bdf084f26b2f0da7878898e3d cdabf2a2da394c189b6cf1de5ae7320d
#: cfc7a41d0b5e447186db8aed3683ee48 d5441677134f4085a8db6ca1f84b1fd7
#: d6698e6d54e243b38edc108ae226d298 d81325d32bb042dcaca5c778c80e685f
#: e02e8c9b60134b89ab824759970bc11a e64be19cc5a64dcf9a394e0e35a026d1
#: e75c7c52626d4f1a9e0ef235f18693da e89b23cdc6d646fe8eb79f27e08e0951
#: ea08278985554f3da3618495f6a45cd3 ec0af480fc6643689c3f2f60a2292106
#: f2b7439373424be3a09f6e8af053569b f39ecab3078a459e85620f0de1686b05
#: f3ba9b1d49b44a2f9b684779ef5319de f3fabe3143524bf5ab1ff42ec0887669
#: f6f13c89772441dea4ebceeec5a7be26 f7977aeca5c946e7aaee4ee99835e0df
#: f7fa53cfc8e6415f88115e894f02070d f818158186134c0b9bdbc222bb0aa462
#: f8983cb6873c44c3ac6f215ffd055d92 f8f25727434246128aa6f3f03ae2fea1
#: f9ebde75f86149f48f781c67766aa4f7 f9f2803c0b28426ba8bb177ccb9dc79d
#: fa9a035a232043eebbf638f4c14db05c fc001458b1414064b46ee7b11f3879e8
#: fe573b3854064acb93c5f669699ee162 of
#: tooluniverse.agentic_tool.AgenticTool.run:9
#: tooluniverse.arxiv_tool.ArXivTool.run:9
#: tooluniverse.base_tool.BaseTool.run:9
#: tooluniverse.biorxiv_tool.BioRxivTool.run:9
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:9
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:9
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:9
#: tooluniverse.chem_tool.ChEMBLTool.run:9
#: tooluniverse.clinvar_tool.ClinVarTool.run:9
#: tooluniverse.crossref_tool.CrossrefTool.run:9
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:9
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:9
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:9
#: tooluniverse.dailymed_tool.SearchSPLTool.run:9
#: tooluniverse.dblp_tool.DBLPTool.run:9
#: tooluniverse.dbsnp_tool.DbSnpTool.run:9
#: tooluniverse.doaj_tool.DOAJTool.run:9 tooluniverse.efo_tool.EFOTool.run:9
#: tooluniverse.ensembl_tool.EnsemblTool.run:9
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:9
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:9
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:9
#: tooluniverse.gnomad_tool.GnomadTool.run:9
#: tooluniverse.graphql_tool.GraphQLTool.run:9
#: tooluniverse.graphql_tool.OpentargetTool.run:9
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:9
#: tooluniverse.hal_tool.HALTool.run:9
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:9
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:9
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:9
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:9
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:9
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:9
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:9
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:9
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:9
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:9
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:9
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:9
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:9
#: tooluniverse.medrxiv_tool.MedRxivTool.run:9
#: tooluniverse.odphp_tool.ODPHPItemList.run:9
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:9
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:9
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:9
#: tooluniverse.openaire_tool.OpenAIRETool.run:9
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:9
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:9
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:9
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:9
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:9
#: tooluniverse.openfda_tool.FDATool.run:9
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:9
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:9
#: tooluniverse.pubmed_tool.PubMedTool.run:9
#: tooluniverse.pubtator_tool.PubTatorTool.run:9
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:9
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:9
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:9
#: tooluniverse.restful_tool.MonarchTool.run:9
#: tooluniverse.restful_tool.RESTfulTool.run:9
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:9
#: tooluniverse.ucsc_tool.UCSCTool.run:9
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:9
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:9
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:9
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:9
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:9
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:9
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:9
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:9
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:9
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:9
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:9
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:9
#: tooluniverse.url_tool.URLHTMLTagTool.run:9
#: tooluniverse.url_tool.URLToPDFTextTool.run:9
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:9
#: tooluniverse.zenodo_tool.ZenodoTool.run:9
#, fuzzy
msgid "Callback for streaming responses"
msgstr "用于流式输出的回调函数"

#: 034b48e021d4470eb7a61a9b3881018d 052bf383856f42aeb21bfda220ab7d17
#: 0695a47ac2c347d1b1a4301a7a0c100b 0b3debd6ffa547e48ace51d5afc03cd7
#: 0b9ca173584042aeaaaaf8ac5750d3a0 0dacbc4166da4f3994389d756f9a6306
#: 0ff8c0ab42de42fc9d74571f6a9c1d18 10deba617f864fd3a41652594e5e474e
#: 14721efc41d344c29d4a7482d14186b1 14d7bd0833d94171b89044f034ed65e9
#: 1528bbdc583846f4922e5b43c4a2edde 154702266b11427385b4814b1cb5d479
#: 17b1011797614afab22c7f3d643b0de7 18508c83c7474056a0d6c28464bb4f76
#: 19fdff6975b84c0cb293a4836089e3f4 213d365b1d734e29bb2327a4a5c9749f
#: 21617bfe936c4332bdc9647f6b63f03f 236acd26825445ae8aa3367f90fc4055
#: 24494b851e89477eb3332b6e5f42a898 266a812dcbd24c928523edd88abdfb99
#: 28ac0e11b23543ed8bc7a9f0bf35a1cb 2a4a4f360a1b4b0a9349dc0e767512b8
#: 2d1015b99edc4bad88163c74560c8e60 2fc67c5e4c3e4f65bd5afd7d141e7ae2
#: 2ff64188e34145238fc942634f0cf514 31f2f4d42ac343d49cb7e7476b8150d2
#: 345ea0bbeef140099b459ead34629106 3762da53a75645389064bcd90d4000a1
#: 3778216b4f0f448d8e211b36930f5b7f 380a530e5b7444678757dfecda323845
#: 38dee2849e7349f5a7070ea137e3b777 3b1d1324a9f14b86a5b2090d15b682d7
#: 3bf8dc519b8f4cdb81cf0f7d7cef448d 3c01cc5aef854ff48e99c0cef90ffa94
#: 3cbf02fe106e4a848c419d72aed032ad 3d4219cd43014533bdd4c891ac2e69cd
#: 3da39a96af8a4a0baefac0d377b7619d 418b73e0af714f4086f7d466fbdb6f62
#: 4395800a1c1f46b687b5b1e9cff4ddd8 44c971246f744133b2f9c0fdd539c798
#: 49389504b72849e287564241e8f53285 4b243431d42e490686f16ff755a9cc99
#: 4c361097a7414b76824b7db5c82d2424 4dd6a299f306403c9db840feea6e1333
#: 4dfb3bc15e994d4ca68f040ded6daffb 53e850b58d9f4ed0bc46b655db99d24d
#: 59ababf63f814e5c92a55faa93ad33b3 5df8f0d6f7be4a0e9e2b58160add3dbd
#: 615aa733a03b48fdbd5f933905c286e0 62435b316ad54904a52242f64423fb4b
#: 64581164ac2f411292f41c80a7afe946 6588d647c0524c3a95c117add5e9b0f5
#: 66778a9e66984c47843d4dd6bf9f24cb 6825b4caed54420187890625d6ae8963
#: 6d3d9f740b6646d39c72d059b90729fc 70f8dabce16d4aaf8e27acd3ddab483e
#: 73d939df729f4fd09b6a6dca47ef5ec7 73f0a134ddf44452ba0e676351a6d28c
#: 75c7a1de8d5a432993d126221d13b81f 7606ef55be92477d9439c22996cbd84c
#: 7622b4487bdd498eb808682706d5dca8 763e2a3061404c92a7c72350f0f0a79e
#: 7697e8170f184b4ebc3013a5f00f5ea0 775ee39b395f47efb8b5c149b50c2e19
#: 77bca06bda6f4bd6b3163a70de6a3bc3 7e2f8d8b59db4eedb492ad7aaf9ecfe4
#: 809f23e61676430fa2e913566da91065 8124680a66914ddab041565cea5b0d4c
#: 81bf1db473fb490ca00e49680700039f 83bea54c9d874edca09cc33dfbe4d5c6
#: 866ac81dc19c4798b1237a797fc5c183 8856d46f29f14bbfb20b6cc16bd98cd0
#: 89c41b12a3a44842ae54b7605a459f3c 8e48e1f8d2a54c6daba37192e9462bcc
#: 8f37c47fc1e7414bb03250b1abc0d58b 911627907f814a33be39daa1efacce2b
#: 9135989ff75341b496afd1ab0f27203d 915164b8430347e496346425e98fe184
#: 968ee062670a448488e8af1c4e9085d0 97e37877d195477897e919b0cb3688ff
#: 9aaf5f0e9e6a46b884b6a2781cd791f3 9c8fc31835734deda35647663e3e4f1b
#: a647d915767f4fe8ad8ca6bc5608aaeb a790aea03fcd4933b3574d6269156630
#: aa65d352397742a08e7e862f6a7e3550 ada04faf47bb4317a7b8f81007399081
#: ae1c0e94419144b0811f8d890baaf7d6 af7797dc7df14dfeabc545a86745eb5f
#: b438bd7b191f473f925b12840c3a2b2d b6b07f00d6e247aa8ab0b69ccf1023a4
#: b87ca2df7c384bb1abe1ccb1e12cfc1b ba774843cb1345d6a1469ae6b21e4ac4
#: bc29239575a848a29d9e7938dbb32feb c2f8285cc4184f088f7d7a0f58e5a7c4
#: c2fed6ab89254ae5ba1336cd3a9527ca c34fe1d005ae4d0082a7e3443bca309c
#: c79825315ab648498f4ff269440f3a83 c94143d4e8544200a26656d2792211f6
#: c9ee3b7e3adb450ead160e965b569250 ca3b48f9694546b5aff1fc462afa6427
#: cabfb6a492994eaaa6bf41288a100064 cf610b8670cd45fea391c7d8ec5b5cc4
#: d48068bc3b7e47d38b5c22579ff478b7 d86edd195e904be998bdfe99d2fb9e35
#: e0b609a2a5e04a87b3b215cef45c8bfb e0cbc1dbd7944b67ac2f44079a453e97
#: e2802bb396bb46c789ce1e36ba99b895 e7efe763140d4397b6d24c407d1eff09
#: ecf4e94123d5487fb8342334e0c3f7ef ed6cba63789447f4a337c79d54ab50cd
#: ee9dcd5f313a4a2e8b675dfad76926e1 eeb1e07147554226805f10660a4a710e
#: ef56c712a4584e8ca2f2a0d2452e9708 f15682966d964328896479a8ed9f5b4d
#: f2809704c1964e7a8fb461f2ca521e51 f32b72d27e9d413f817a5dfcf5691802
#: f3788773373649a9bbddb0312d14e06d f6add726856e4973841fad68a9f9a081
#: f6fd2067595e4800bd86b28341e9415c f8d36426566249ecbbab3fbaf374ef1d
#: f905c46b846942d596e79694d5eaa228 f9cb2f3308164a9eb582a9f1fbe2e667
#: fd0dce218def4150918be2a0c1e33483 of
#: tooluniverse.agentic_tool.AgenticTool.run:11
#: tooluniverse.arxiv_tool.ArXivTool.run:11
#: tooluniverse.base_tool.BaseTool.run:11
#: tooluniverse.biorxiv_tool.BioRxivTool.run:11
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:11
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:11
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:11
#: tooluniverse.chem_tool.ChEMBLTool.run:11
#: tooluniverse.clinvar_tool.ClinVarTool.run:11
#: tooluniverse.crossref_tool.CrossrefTool.run:11
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:11
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:11
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:11
#: tooluniverse.dailymed_tool.SearchSPLTool.run:11
#: tooluniverse.dblp_tool.DBLPTool.run:11
#: tooluniverse.dbsnp_tool.DbSnpTool.run:11
#: tooluniverse.doaj_tool.DOAJTool.run:11 tooluniverse.efo_tool.EFOTool.run:11
#: tooluniverse.ensembl_tool.EnsemblTool.run:11
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:11
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:11
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:11
#: tooluniverse.gnomad_tool.GnomadTool.run:11
#: tooluniverse.graphql_tool.GraphQLTool.run:11
#: tooluniverse.graphql_tool.OpentargetTool.run:11
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:11
#: tooluniverse.hal_tool.HALTool.run:11
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:11
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:11
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:11
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:11
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:11
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:11
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:11
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:11
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:11
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:11
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:11
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:11
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:11
#: tooluniverse.medrxiv_tool.MedRxivTool.run:11
#: tooluniverse.odphp_tool.ODPHPItemList.run:11
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:11
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:11
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:11
#: tooluniverse.openaire_tool.OpenAIRETool.run:11
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:11
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:11
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:11
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:11
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:11
#: tooluniverse.openfda_tool.FDATool.run:11
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:11
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:11
#: tooluniverse.pubmed_tool.PubMedTool.run:11
#: tooluniverse.pubtator_tool.PubTatorTool.run:11
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:11
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:11
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:11
#: tooluniverse.restful_tool.MonarchTool.run:11
#: tooluniverse.restful_tool.RESTfulTool.run:11
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:11
#: tooluniverse.ucsc_tool.UCSCTool.run:11
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:11
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:11
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:11
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:11
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:11
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:11
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:11
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:11
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:11
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:11
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:11
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:11
#: tooluniverse.url_tool.URLHTMLTagTool.run:11
#: tooluniverse.url_tool.URLToPDFTextTool.run:11
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:11
#: tooluniverse.zenodo_tool.ZenodoTool.run:11
msgid "Whether result caching is enabled"
msgstr "是否启用了结果缓存"

#: 03d66f882e6b4d7db5b950175fbfdd3f 048c6614dad24af69f554ad8106ae864
#: 066cd0b5c5ea4c869de5949885fdf76c 0a46be2bdcfb456bb80505fa5334030f
#: 0aa99b1cd2f04418b0974d17d3f0e92d 0b8a9432a9a946d9b00d8c6535f2b228
#: 0c1fddb034c2435d8b92b2c9366887ab 0d291c6ddc364db9be70bb43926ae491
#: 0df44ca892d24dcaab7bba04bbfecfc1 119dd45b559743ee8527e8ace4c1eece
#: 1415529e35c0475089f79ec9f5394d09 16932c5f527a48b5a2053c762aeb887d
#: 182192a6a2c94df7be21ea96d207782a 1ad696b77e67481d83b34a87ce75f56f
#: 1af3c081c0264ef596f8f97f3b6ee3ac 1d8ed589dc1b4c22955d2a1a64908806
#: 2226c14a6c7f4dada503a042489ec3ac 25efe080355a48d4bd2ef3e5b6e93213
#: 26a43609915840229b05cbd93aa2e3b1 28377f2f6f8445348868446258274c3a
#: 2943ec80e42744c7b4804eb2742f66a4 295882c8a7104f70aa08334b4f55085c
#: 29f72d6316da4985a3a5e8d64e00f1ca 2a6e8a04f45348be9274b1ca670b9cb1
#: 2b2ce6c6bd814939a841b09586e3ad2a 2c17c367afc64e8fa34a5f0e83d2091d
#: 2f26a6e1487a4b6b9a2c88d67f9dda93 2ff2a97a0a2f441ba8606161d07a9566
#: 30dfba3a37594995b549e2165a68425d 330fb25f7a9548a7bc13b707e9f06afa
#: 34de4325469b4b4ba7ae09d683fac8fd 39f6a702b9b24d508dd2995d628e114c
#: 3ab295f16ca84cf49756c2e37694e46f 3e8454b5f93e4d0d9dd7be2c8e2d703d
#: 3fcd5fcf86c344a3bf8e4f6e6c44d795 42c536fc426c418baba3bad30a130d95
#: 452f1fac4cb04bf198afeaa73470e411 4643b632bad74299bbedc8c834961c96
#: 4b9ae09316c2453cabab1c39bb403097 4c91c756cf9c44588e04111ab828a487
#: 4ff1dd649c7848afbaaf96dec8840b1d 51d1bd22bec74094adce6767a6d135e4
#: 5217ad6944a549f0af1efa8334033687 5421a4147e654715ac5fa413b5b00eb1
#: 5456804d0be04a99a96e81d211e0cd4c 5470906bbefa40e4b796b50b1badc90a
#: 56c643b538a3443c818ff1766e2783ff 5a928b9cf6b8434ca332777da4d12b6e
#: 5c506e6ff4bc485d910075757cab8eec 5f02d9fc594242378fadac2fc19b3549
#: 5f77dc83c78140109376bfa3a4c260f8 61b119a0e2814aaeb94c76011b4eea67
#: 624329dc070944568c67b971134205e1 691fab6c5ecd4100b951c8cbadca52ec
#: 6e2eed990e6142f684a0d930be2f8837 6edd0ad193df481090f1e3e59569b759
#: 6ef8e9687f3f48d682583a4539af5cb5 7103e1b492354e8fb32f72280d8ff1a7
#: 73249825f35d4980acd7ff6487fb424b 7c9a0e00442e4ea183c1dcd28442c821
#: 7da9740075794fc3b2ac5f5a0b5e2cdb 7f385796d2af4c3aba1d378a0436b886
#: 85773e7c769a46a78d5c125e6e4a320d 85ceb309ced74ccda09828caa00fbc02
#: 892ce11ccc9f4c0cb9e941dde119e4c5 8f522d13e9d944679f44d8a929a195bf
#: 90330881383a4734b77630ccf2aab5d0 90523ad01bc94fbb941994b58f6e0320
#: 9053c5783e814705a5d226e446fa4483 96e253412f934c2191ab8d3c206d55a4
#: 97c3f55b9696453b89d70f2ab9d23f73 9a17222be2e94c25bc6de083024d1242
#: 9a8e54064a884ce2be2b986155a741bd 9b73922e7bf94d0d988e7b56a395583e
#: 9c6ca943834a4733a7959fd179b46d6e 9d548a728fd7410d966301fbeb9fab3c
#: a1bf7ea3273b44d4adba3efa12b02b3e a5980d3537644dc3b02c4c88b1257c6a
#: aa2a8c661c8f4fc7ad05dbea2ad0e9ce aaa10363cc9d4642a405b4114c984bf9
#: aaaaa5d54f0c40fe8aa0f01ae0c094d4 ac62ff09d3e647f99e60f869b3bebdbd
#: ae2165d02971422ba4d7ff1156d8c6d9 ae7e6d0d746844e8a4628a6bb0d323e1
#: b4905fa451224a19b2505210ef9d6b9e b727ca5908834b8980904ce6c26ff0b5
#: b854cfa23e6b4d3ea2dac22da801c80f b900751f22784cd49591a81a09c05168
#: ba4f57a6735c43f6997029cd5276b2c7 ba4fe7cc4167477a81c8f12f6f3c7fa6
#: bc117ee66b774d08a830c5036ba44229 bc3cb17bf29048b1878c6fd2648aea8c
#: bfe2ae2429fd40719a25c53ea0961910 c19c56f8419a44fa97850c1a0227dded
#: c39d2cff6bbf4929b2bddf8c5d1c4cca c3c647c21e67463db0eabe49289a69b8
#: c3ee0f1fff434b75b51481dfb919a97c c5ce9f55bcc0423a82694a41f2f108e0
#: c7895c21cfd24c1699984a1bf75a1354 c8b35999b98f46d5986500e0daa102c7
#: c954e6f062d84c88ad2ca91dd1eff6a4 cb0f0c2ae0c44c24b4d5ef5953da20a8
#: cba2f5a3870d49148c2d2a55971a1f7b ccd826cedad44d55990a658a86580619
#: cd5a7b31ffc04a0ea8727572623be8b4 d064377a063d44e4908baed0603216e6
#: d4793b817aef4df28697710d6c8c6696 d5f20fa4800140b7b9e331f2ecf2c4e6
#: d834bd9fb7fa434e9a6735e043ef5134 ddcc2bd28955400dab63c68d7ce0fb6c
#: e3a5b69ed8a3441fb2a1af3f2bf448d4 ebfa91c50c1d434c9f94370b697adaaa
#: ef2740eab98a4e10bda4542140656a5e ef4fdbf7b1ef4569b7dd6d9cc1bc8c8b
#: eff11bd76de345c7beb9dd9c76704e3f f0c625cc7b3f45488f412b85d6fb9d01
#: f28a4137f40844d783b020c535a6bc28 f40dfcfb3faa409ca613caede931ea84
#: fb1212b958b44870bd853fab308a54b9 fb79a7c2eeb14b9193570c38228a27ad
#: fcff2f16226042468d3f7b106447a799 fdcecbf08bc74f588b2d498c79745166
#: fe23baddab0a4ee38920dc06ee73bb9a of
#: tooluniverse.agentic_tool.AgenticTool.run:13
#: tooluniverse.arxiv_tool.ArXivTool.run:13
#: tooluniverse.base_tool.BaseTool.run:13
#: tooluniverse.biorxiv_tool.BioRxivTool.run:13
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:13
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:13
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:13
#: tooluniverse.chem_tool.ChEMBLTool.run:13
#: tooluniverse.clinvar_tool.ClinVarTool.run:13
#: tooluniverse.crossref_tool.CrossrefTool.run:13
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:13
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:13
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:13
#: tooluniverse.dailymed_tool.SearchSPLTool.run:13
#: tooluniverse.dblp_tool.DBLPTool.run:13
#: tooluniverse.dbsnp_tool.DbSnpTool.run:13
#: tooluniverse.doaj_tool.DOAJTool.run:13 tooluniverse.efo_tool.EFOTool.run:13
#: tooluniverse.ensembl_tool.EnsemblTool.run:13
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:13
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:13
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:13
#: tooluniverse.gnomad_tool.GnomadTool.run:13
#: tooluniverse.graphql_tool.GraphQLTool.run:13
#: tooluniverse.graphql_tool.OpentargetTool.run:13
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:13
#: tooluniverse.hal_tool.HALTool.run:13
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:13
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:13
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:13
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:13
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:13
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:13
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:13
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:13
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:13
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:13
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:13
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:13
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:13
#: tooluniverse.medrxiv_tool.MedRxivTool.run:13
#: tooluniverse.odphp_tool.ODPHPItemList.run:13
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:13
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:13
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:13
#: tooluniverse.openaire_tool.OpenAIRETool.run:13
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:13
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:13
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:13
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:13
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:13
#: tooluniverse.openfda_tool.FDATool.run:13
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:13
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:13
#: tooluniverse.pubmed_tool.PubMedTool.run:13
#: tooluniverse.pubtator_tool.PubTatorTool.run:13
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:13
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:13
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:13
#: tooluniverse.restful_tool.MonarchTool.run:13
#: tooluniverse.restful_tool.RESTfulTool.run:13
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:13
#: tooluniverse.ucsc_tool.UCSCTool.run:13
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:13
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:13
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:13
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:13
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:13
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:13
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:13
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:13
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:13
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:13
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:13
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:13
#: tooluniverse.url_tool.URLHTMLTagTool.run:13
#: tooluniverse.url_tool.URLToPDFTextTool.run:13
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:13
#: tooluniverse.zenodo_tool.ZenodoTool.run:13
msgid "Whether parameter validation was performed"
msgstr "是否已执行参数验证"

#: 008ca3f486614a7b894b63c48fff30cf 04c9d70589d246d3bd6dbd1bd6a4c788
#: 0d0c8b9a8281462c9b64b9f99ff8387f 0df862080cc844099bc61a3247dd6787
#: 0f4e21569ce44eaf98b8aec82262a1cd 0fcf11207a2b4787bb094869a5687925
#: 10e12abc6bdf4a4e8118b6f66754489f 14b8ccb9b9354bb7b6432f0379857bf5
#: 1c2d75e2415541bcbecaa185574aa8b0 1d59038cc4204cf49bfe5a9457a941e6
#: 1db9a9bf233e46a8954f0baea56ae647 1e7e3733b1b54a7582ae08835997a529
#: 200bf659d11a45f2a6245564f495875a 2203ebea11804931a87103099e2089e6
#: 23e7fa48a4444e7f84cdf95c2b35e996 28c4164739ee4ce98c418600d8c90279
#: 299999cc1f8844f8947c029f4a30837d 2af8af4f31cc4fcc8d1444df086271b2
#: 2b58ca884ab44e49bb0648f117cb0717 31b5d879d8d54df1aa62cc75d5063a9b
#: 345032ab0ea64acf87fbc344ea816caf 35761f325a7d4810bde1202028139cf6
#: 3b67088106c54479803dbacd0747c466 3c51ccd060084ef29c74b8bfc1a1fe12
#: 47a46f37694c47a1bc911182152570db 482e7756385b48e181f8283f077f6a84
#: 4860344c84234f76ac6030c73ffcb374 4b23851de3e748849dd81b565eb2b130
#: 4bc59a2dae83412c9ba5394705a0b13e 4f4d19fd79fe40b4bb4f9a51b36becd1
#: 53067452e157447c9308772a0597e97d 532fbb98c8dc4405815bbe340ccd9a03
#: 5521e83a2e114d31bd60db23b861b7be 56d7b6f152d54d21ad2699ccc9d7ac35
#: 5a232d41b75b4c6ca85b2d29b23f74e2 5d7b4e1bf4e441878828a853dd0b969c
#: 63f13914e0cc4cca8bb6c95929317a58 67951b8fc8f54060b53d48034ab97355
#: 67af9532c3d940229bfd9452b4f16dc0 682c6b0715b04c4a80bdd0ac638e9217
#: 6c0b5b60b1e3472caa302b00481fd510 6c6f228e28ac43d0aabf9f309290ab4e
#: 6e48820900364ddea67c0fc78d5a344d 70762499e62a4a338f2bb12595b30ca3
#: 7139f50f4b304cafb21f325c41a8b2f8 72b50899870a436b95c12c4e3422c250
#: 7340323d230746c9a57a17472579939e 757135055d274c72a1c1265b98e7c829
#: 75867e08cd8248edbfccee5b51ae6961 75ca2ba6790e485095d2f2045bf3ea92
#: 75cb8227d1374e2b882c5fe572eaa58c 771a66f6fc544c448cd785eed17ec88e
#: 79482de51a2845ca8b96712915d78caf 7d94bc771a6448b1ba301a2d53e58341
#: 836de4b1a675492e9be4145a757c7cd7 8623ab1419cd4538a91237260178c18c
#: 8c1565f62134438bbc819d9950215989 8e3e7c7fa65a40c5a62d15e1843765c0
#: 90bfe1c738be45aaaf1200c36764c384 92c00f3a8ce44c19b82703a8f53d0522
#: 933d2979e2fe462c9ba8c793b2fb7a7d 9423769614de4a2297a342eee8917c14
#: 95880a89d01e40a983d81d2b4d3864fd 961e9b0e7dc444b59fa4da3ee680ab72
#: 96784464728845d7bbbc3d191a9a0b18 96de6e857c5b4ffd8a8e4cfefde0191f
#: 9887d4c891444bb6a74042670291f765 999b7fc3c96a4dbd901366d119543c8f
#: 9a287e480c2444f18658401605c2d86b 9bac9696e9884b58b7a13b87a6900872
#: 9c8fda549a8f4db382fd6ec4550a8fd9 9cdf10ce10f54fb59c6ce6a58f1841bc
#: a8f842c5196848439e3f8af9fedf2a40 a9487935f49c40c09ef6ed3ec2137a69
#: ace395b1f0f548438a9b6d4725b12be8 aee32723cca8460cb3c5db696c5780e1
#: b10726f5517e4d078ba2f1972b6bb605 b29fcba345364257ab58abcc21d392e1
#: b4776e9472424c65a864f914a576213e b4cc2c647e5c42b28271787ead6640c6
#: b551a45812324d2f9385ee6cb7fba738 b5588e9860c345dfbcd3737355b63b5e
#: b5c9e281456344a6a5fba122d40e7835 b6e54fc23d614ab0b995321748553aad
#: b74cde487a2a4d7ea3fecba3730ddecd b8982098641f417092c985a6821ef92e
#: be8d234d70ff4e8580044d87f0aadf44 c14db8b5930346f688051d26183ab151
#: c4ba3499904d4386aa7a4e267cf5749e c6c60a029c6d4db798b8d9c38eba7539
#: c735f0d3c98145d69eef553467c92873 c7fef20af68f4a4e940b359005b49a34
#: c858875e7ff146f79354896247b607de c9987fff8b5245589bd0279006aad1f0
#: ca5299735a1a4cb7ab87cf8f4684e3c6 d05df08380e140a2bec1db2e12a698f9
#: d3aa463973b54b98ad1e3c9c129a2b9a d540818606ea4bf38f7b25a846b57e90
#: d54f1710c4f8467595744d57f0c916ae da1b65ba45534ce0a1433a18e70f3005
#: df34ed7459e94b569f2e8d34bc853dca df9169b7041f47cfa61b65d1842a62e3
#: e13a7f3ed207463db75442a6bd72975c e3643a2e51ca4e72aa4e810e412f0095
#: e392a793beed40139b4e9a37288bd4cc e43064b97c0e45018f2ea818109cf00b
#: e4f1c809a455427f90dcd22a8a3cccb0 e5c0945bd95441a1a3b5503a42045d23
#: e663ec5b144043f1b8e2a4e1076173bb e768ee7f97ee4fc99ba730c2e9f2aa93
#: ea359dfc65da4192943ec172b22331b6 ebc14cd94419427d8861aae79d5d9334
#: ec9df0e40d8b4fef8cab1a9d805d57a8 ee80e425b001422dbd5dd891dd6086f3
#: f18ecadb9e7c4a9088a30452225f4524 f30f0c8b8db5440a9105bc75cf772058
#: f3c0b4b3f90a475191a6f055ade9f003 f7436c543a2846ef85f0630399aa9825
#: f77fbcb629e044de8feefa3115c337ff f898812331e5452c92938c921d557be2
#: f91bef5e5e2248ec944077b861487409 fa3b8ad3db914bf9b1f294c903d64128
#: fe4af627bb2046699ab725710ce22c88 of
#: tooluniverse.agentic_tool.AgenticTool.run:18
#: tooluniverse.arxiv_tool.ArXivTool.run:18
#: tooluniverse.base_tool.BaseTool.run:18
#: tooluniverse.biorxiv_tool.BioRxivTool.run:18
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:18
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:18
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:18
#: tooluniverse.chem_tool.ChEMBLTool.run:18
#: tooluniverse.clinvar_tool.ClinVarTool.run:18
#: tooluniverse.crossref_tool.CrossrefTool.run:18
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:18
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:18
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:18
#: tooluniverse.dailymed_tool.SearchSPLTool.run:18
#: tooluniverse.dblp_tool.DBLPTool.run:18
#: tooluniverse.dbsnp_tool.DbSnpTool.run:18
#: tooluniverse.doaj_tool.DOAJTool.run:18 tooluniverse.efo_tool.EFOTool.run:18
#: tooluniverse.ensembl_tool.EnsemblTool.run:18
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:18
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:18
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:18
#: tooluniverse.gnomad_tool.GnomadTool.run:18
#: tooluniverse.graphql_tool.GraphQLTool.run:18
#: tooluniverse.graphql_tool.OpentargetTool.run:18
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:18
#: tooluniverse.hal_tool.HALTool.run:18
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:18
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:18
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:18
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:18
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:18
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:18
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:18
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:18
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:18
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:18
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:18
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:18
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:18
#: tooluniverse.medrxiv_tool.MedRxivTool.run:18
#: tooluniverse.odphp_tool.ODPHPItemList.run:18
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:18
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:18
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:18
#: tooluniverse.openaire_tool.OpenAIRETool.run:18
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:18
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:18
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:18
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:18
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:18
#: tooluniverse.openfda_tool.FDATool.run:18
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:18
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:18
#: tooluniverse.pubmed_tool.PubMedTool.run:18
#: tooluniverse.pubtator_tool.PubTatorTool.run:18
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:18
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:18
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:18
#: tooluniverse.restful_tool.MonarchTool.run:18
#: tooluniverse.restful_tool.RESTfulTool.run:18
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:18
#: tooluniverse.ucsc_tool.UCSCTool.run:18
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:18
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:18
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:18
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:18
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:18
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:18
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:18
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:18
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:18
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:18
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:18
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:18
#: tooluniverse.url_tool.URLHTMLTagTool.run:18
#: tooluniverse.url_tool.URLToPDFTextTool.run:18
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:18
#: tooluniverse.zenodo_tool.ZenodoTool.run:18
msgid ""
"These additional parameters (stream_callback, use_cache, validate) are "
"passed from run_one_function() to provide context about the execution. "
"Tools can use these for optimization or special handling."
msgstr ""
"这些附加参数（stream_callback、use_cache、validate）由 run_one_function() "
"传递，用于提供有关执行的上下文。工具可以利用这些参数进行优化或特殊处理。"

#: 014c656576784963bbee2a11eecf9dca 0164b260d7dc4cc58907fe6ee541e9ea
#: 016d86d498274288850c26775e7d2e4c 07036349b70a4ff5a27b9fe2b2f9e4b4
#: 076401237ca44af0a4fcd289a82df241 08e27e12a82b440299baf4e7b1c6dc0b
#: 0afc94b9217642b89b75501d7f819dac 0b32458c11f54453b37d0aca93c091e7
#: 0d886814af364ab581492f68c3eafa51 0fd339bccd0a4149b83262f8a472db2a
#: 12128b78b80142548061127102c6dfaa 1ebc4732203e4837b28a0849c7fe14da
#: 1eee2bfd459c4bcb9d4c5bdd079ab6a1 2136f7f36e6f43f2a849dac2992a63b2
#: 21bc5a1a0f11418b8640b79b4746f1ff 250f197659c7497ab53a85df176e13b0
#: 251069f20bfe438fb9b19172861177d1 2580ce0ac7ff4def8019a6a6902e73ac
#: 26701002bca5427991246da6ef566045 2a412bdd50c2485486dda51de768f6fd
#: 2b19605cb98c47c8946af761bbaae89d 2be6c7937ebf4c53b0760a5a17cb4aa8
#: 2f1617d73c124d2c8b3476cec3cb4f41 386ccbdbe5e4410a8ee632cb97c033c7
#: 3a5eeac761934fff879c96506548dc82 3ca7177a0d1347c3bb0c674097cee762
#: 3e1af9cb83b44b189d77a78eca6fcd8d 3f54148e616f4787bc9ef1bb4ec00ed3
#: 403c823a7471431297fbd8b42cbf602e 4157a576b36549bcb69f91f7e4257092
#: 4246434646a648abb9ab88ca827c5f91 43b54aa654c84046b7d2748e026444ae
#: 4401755f99a94f48a7685e42ac769376 4411485c95ba4c71884fddc61cf5d022
#: 45fb90d3872449aa96fdd081bc707c52 46db316a55c74c419fef2eb1d1ea8126
#: 481fe054d1a54c40ae6f9309f63abc99 4ba1db8b8cea49baab5577b24ae388f1
#: 4bbbddab6aca466194fcb4f3ad99195c 4f1f8088e63743e7928ff0e05bd5a6d2
#: 53ddc287cc254d5f9045c95a72c725dc 544ddafd81a84f5389d3eb955a728ee2
#: 5579356ff9144cbdbc75cac36268d721 55eeaee3d6df44578648bb5e542569dc
#: 567ffdbfc38241d7af37ac9907783f6b 59d8f1853e484659aee43e7ec3de2cdf
#: 5c41a5bb2de2428091d558d9abea9b4d 6219cfde1d3a41beadc56ded3a92daa2
#: 63b1e22603ca41f5aa4bf129459c8cc2 65a4ab29e79744f791c74e1a8ec4f333
#: 660a576d907a4af58e35731f526f20c6 6827a79a5dfd4359846de099f637735a
#: 68e95e78f38b44c489d9c27c70eade54 6ad98b36ee9244dfb7aaaa88264e7b93
#: 6b6ca2ce5c284890aa8871f3ec596b27 6cacb0754ff04cc592b412e29a49e935
#: 6f9039621d2e4cfe887d68b11192aaea 7132232e8c0e46c19348fdce14ad8519
#: 7380c4877ba3472ea10cf11416d1b2c6 74d452e5c40248f19fa9f221e2160186
#: 74eca02d24a249dea6724e63b36a2833 76b7b8dafa3843fea429d81659903194
#: 77a2827598934e739df761f07a132b19 7abb622ddbdd48f59ce6641271db7394
#: 7dccf7c269444008ad7153e82d18d16e 7eb48ed110dd4eb7b0cc415c4b031154
#: 8152730db678492cafa151e05c90a34c 85a873b7df7c434fb106741e0236d28d
#: 8f8bbf52d30e4f949598c346b15267e4 901c8590208f4ced82608f0ff97cddd6
#: 93d903fc011a41eca077ef6b9f0a2f03 95f63005604344ae9962d2708ea1bfd0
#: 9739e172cdcf458097202654c2cab7cd 980a2a35cac948c993318cc9723f6082
#: 9c4ca4bdecfc44a099e786afff762dc4 9ce75a0ccc67438991adea4a29851727
#: 9d9d76ca10de4e77ae0ff3e0951f3ace 9de6a62697ce4076bf873e14d16d47e3
#: 9e8363302fe34a39aec91753e7e141d1 a015fabfecde41899c2ee5cbbf2a0af6
#: a442cd1a321645dd979c0dd37f01d3b7 a4f11207e4314cceae5bca5b7e3f7890
#: a65cbdd466794ec3bfee03f4226a7b9e ae04a09e2a784a57936d9e06c5af5282
#: b146b0a03e5b4f0bb1e3d230c466dd33 b2b8c6756f5f410e84ee7d95d086f93b
#: b309514a414c45bdab265c27fea28ea1 b3a6d28f3ab940959a3fe16383d191cc
#: b531d5fff570483ca56df26fa044ca0d b5800a27ba02488ebc5b9ca3d9c08b73
#: bbdbdc3ba03941ff9abc2923ea8e094b bc4d5aadc58241718633176d7db7589f
#: bc6224651932408f98942e54eb34fbe9 bcb00088954d4b858940c9b45374d40a
#: bfad44c52b914a5098dfa2d63c9347a3 c236393809514d849a02620ff6588a7f
#: c2445636f4184e89997975c06694f345 c3ce2790dedd4a5fa9e61fc5a9b27d33
#: c4bc9a2ca4f04ec39744e9c49ab58bb0 c5da45c1ab9a401d808eb75f50867b6b
#: c64db87881354ff6a61875f53917e801 c74531b167b84cd0979acf13513ff66f
#: cd85870777ec4e8d82a5cdc52708dc25 cddc1bb89f27478c87b21e951997321f
#: d17db854e801450eac4d42c3e7084638 d3b33475c92942c19487d59d5d455252
#: d4df686d149a492299409aa8e2735886 ddd64efd0664415e8fe8d113b34c5cf8
#: de41b011489e429d84bcccb16d751a0d e0167a0835fc4602a7a7a00f9f9719e0
#: e27c7449748b47efa1918601a6a367f1 e481fc7023ce443c835e4a51fd4d4af9
#: e494fec44ec74f7cae5ff5c553b7b7e1 e542e37ecdc44985822353b3b236ae43
#: e603eaa4e5114270b7d85cb654da6d4b e6c1e8550ae24459a790767de490494b
#: e83762a66b85478b8b2f3a3f58f9b6b5 e843965f3c71499ca5b299de974cca7f
#: e93e6733ac0245a7b076d612066dc29c efa5e2714b6d4b7c8281a9b2ad686364
#: f0f809a956d645a6afc97a6636985529 f68a19b6875d4a208774ce80bad11304
#: fe3995d32a3e41f0b1cdd10a89cf9e39 of
#: tooluniverse.agentic_tool.AgenticTool.run:22
#: tooluniverse.arxiv_tool.ArXivTool.run:22
#: tooluniverse.base_tool.BaseTool.run:22
#: tooluniverse.biorxiv_tool.BioRxivTool.run:22
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool.run:22
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool.run:22
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool.run:22
#: tooluniverse.chem_tool.ChEMBLTool.run:22
#: tooluniverse.clinvar_tool.ClinVarTool.run:22
#: tooluniverse.crossref_tool.CrossrefTool.run:22
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool.run:22
#: tooluniverse.ctg_tool.ClinicalTrialsTool.run:22
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool.run:22
#: tooluniverse.dailymed_tool.SearchSPLTool.run:22
#: tooluniverse.dblp_tool.DBLPTool.run:22
#: tooluniverse.dbsnp_tool.DbSnpTool.run:22
#: tooluniverse.doaj_tool.DOAJTool.run:22 tooluniverse.efo_tool.EFOTool.run:22
#: tooluniverse.ensembl_tool.EnsemblTool.run:22
#: tooluniverse.europe_pmc_tool.EuropePMCTool.run:22
#: tooluniverse.fatcat_tool.FatcatScholarTool.run:22
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch.run:22
#: tooluniverse.gnomad_tool.GnomadTool.run:22
#: tooluniverse.graphql_tool.GraphQLTool.run:22
#: tooluniverse.graphql_tool.OpentargetTool.run:22
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch.run:22
#: tooluniverse.hal_tool.HALTool.run:22
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool.run:22
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool.run:22
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool.run:22
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool.run:22
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool.run:22
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool.run:22
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool.run:22
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool.run:22
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool.run:22
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool.run:22
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool.run:22
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool.run:22
#: tooluniverse.hpa_tool.HPASearchGenesTool.run:22
#: tooluniverse.medrxiv_tool.MedRxivTool.run:22
#: tooluniverse.odphp_tool.ODPHPItemList.run:22
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder.run:22
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch.run:22
#: tooluniverse.odphp_tool.ODPHPTopicSearch.run:22
#: tooluniverse.openaire_tool.OpenAIRETool.run:22
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool.run:22
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.run:22
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool.run:22
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool.run:22
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool.run:22
#: tooluniverse.openfda_tool.FDATool.run:22
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool.run:22
#: tooluniverse.pubchem_tool.PubChemRESTTool.run:22
#: tooluniverse.pubmed_tool.PubMedTool.run:22
#: tooluniverse.pubtator_tool.PubTatorTool.run:22
#: tooluniverse.rcsb_pdb_tool.RCSBTool.run:22
#: tooluniverse.reactome_tool.ReactomeRESTTool.run:22
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool.run:22
#: tooluniverse.restful_tool.MonarchTool.run:22
#: tooluniverse.restful_tool.RESTfulTool.run:22
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool.run:22
#: tooluniverse.ucsc_tool.UCSCTool.run:22
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool.run:22
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool.run:22
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool.run:22
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool.run:22
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool.run:22
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool.run:22
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool.run:22
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool.run:22
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool.run:22
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool.run:22
#: tooluniverse.uniprot_tool.UniProtRESTTool.run:22
#: tooluniverse.unpaywall_tool.UnpaywallTool.run:22
#: tooluniverse.url_tool.URLHTMLTagTool.run:22
#: tooluniverse.url_tool.URLToPDFTextTool.run:22
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool.run:22
#: tooluniverse.zenodo_tool.ZenodoTool.run:22
msgid ""
"For backward compatibility, tools that don't accept these parameters will"
" still work - they will only receive the arguments parameter."
msgstr "为了向后兼容，不支持这些参数的工具仍然可以正常运行——它们只会接收到 arguments 参数。"

#: 7a32363d391e4e80baa5475134f0c22a c5beb1f6e99b4ec58d3f318d0fd5a095 of
#: tooluniverse.base_tool.BaseTool.supports_caching:1
msgid "Check if this tool's results can be cached."
msgstr "检查此工具的结果是否可以缓存。"

#: c3b5057a084b4b4e94770afc3e2fa19e f382390af35e44d0819f5338bf909058 of
#: tooluniverse.base_tool.BaseTool.supports_caching:4
#, fuzzy
msgid "True if tool results can be cached, False otherwise"
msgstr "is_valid（bool）：如果函数调用有效，则为 True；否则为 False。"

#: b77210197c9f4a8a8e91a8c4de8f91f6 ce51c047bc684957bda2b488114f87fb of
#: tooluniverse.base_tool.BaseTool.supports_streaming:1
msgid "Check if this tool supports streaming responses."
msgstr "检查此工具是否支持流式响应。"

#: 287fd0b0b79645cd859cbf1456a5ccf3 be91bbf7f197447c9368e870bda16b79 of
#: tooluniverse.base_tool.BaseTool.supports_streaming:4
msgid "True if tool supports streaming, False otherwise"
msgstr "如果工具支持流式处理，则为 True，否则为 False"

#: 16e3bb2f76954984bb347d7eb4379fd4 fa0b779ce2954d66b6618876e4e9bb48 of
#: tooluniverse.base_tool.BaseTool.validate_parameters:1
#, fuzzy
msgid "Validate parameters against tool schema."
msgstr "验证函数调用是否符合工具配置。"

#: 161383e8b8474cecb068722ac9696602 db670e1ef81f4186a2a06458836fbb5e of
#: tooluniverse.base_tool.BaseTool.validate_parameters:3
msgid ""
"This method provides standard parameter validation using jsonschema. "
"Subclasses can override this method to implement custom validation logic."
msgstr "此方法使用 jsonschema 提供标准参数验证。子类可以重写此方法以实现自定义验证逻辑。"

#: f7c55e131d0b4ac8b90c440fcb74880a fde0fc3685ff4d52b6194e6de6c02fbf of
#: tooluniverse.base_tool.BaseTool.validate_parameters:7
#, fuzzy
msgid "Dictionary of arguments to validate"
msgstr "函数调用字符串或需验证的数据。"

#: b90d09e4123c48db817f1b0245192f53 e19598a9fbd5448d9a95f688e11ae70b of
#: tooluniverse.base_tool.BaseTool.validate_parameters:10
msgid "ToolError if validation fails, None if validation passes"
msgstr "验证失败时返回 ToolError，验证通过时返回 None"

#: 88e7b92e73304d108f3f07ae52d0d5a0 97f4aad46e0c4c4d8f8b8508c5f9f01f of
#: tooluniverse.tool_registry.register_tool:1
msgid "Decorator to automatically register tool classes and their configs."
msgstr "用于自动注册工具类及其配置的装饰器。"

#: 4ae74486a8b149b99761cb6e79976be2 8b324cc2fb054d2fbbdb44e196308024
#: 8b9f0009f0ac4cb49eaccdc35f5536cd of tooluniverse.logging_config:7
#: tooluniverse.tool_registry.register_tool:3
msgid "Usage:"
msgstr ""
"用法：\n"
"\n"
"上下文：文档"

#: 3055db806caf4993bd9ee8589c1506e7 434e1d783dbc4f698490eefa6ecec418 of
#: tooluniverse.tool_registry.register_tool:4
#, python-brace-format
msgid "@register_tool('CustomToolName', config={...}) class MyTool:"
msgstr "@register_tool('CustomToolName', config={...}) class 我的工具:"

#: 38f87a6226a74fe192d2613678eba808 456404ffd52c46bd8414381ed6b7c523
#: d4161a59945f4ac48ccf0f98366c9989 fc8db97e5a094d5484614aebabb5dbab of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:28
#: tooluniverse.mcp_tool_registry.register_mcp_tool:32
#: tooluniverse.tool_registry.register_tool:6
msgid "pass"
msgstr "通过"

#: 28da4fc7bd63418d85a0e0b8ab8b17d3 a158a18fed97479abe9c28044d4a92a6 of
#: tooluniverse.tool_registry.get_tool_registry:1
msgid "Get a copy of the current tool registry."
msgstr "获取当前工具注册表的副本。"

#: 9de68b7d969a47fca286bbc2ff64cc04 deb23298c0154752923bbf630f69ee2d
#: e5a0844aa2a8402a87d2f75d3b619439 of
#: tooluniverse.ctg_tool.ClinicalTrialsTool:1
#: tooluniverse.restful_tool.MonarchTool:1
msgid "Bases: :py:class:`~tooluniverse.restful_tool.RESTfulTool`"
msgstr "基础类：:py:class:`~tooluniverse.restful_tool.RESTfulTool`"

#: 74864cb5924741109950de9d39ad93a1 b722edab891f46d2bd775424822f0bd6 of
#: tooluniverse.restful_tool.MonarchDiseasesForMultiplePhenoTool:1
msgid "Bases: :py:class:`~tooluniverse.restful_tool.MonarchTool`"
msgstr "基础类：:py:class:`~tooluniverse.restful_tool.MonarchTool`"

#: 373dcb6cd73d4b64a4f952bcbb245de4 625d5673894c46a8ba10addb326eef7f
#: 6d6e514cf1c24c3b9698f9f8f637d631 9b851fb7c84d4aafbc64ebf9fecfebbf of
#: tooluniverse.ctg_tool.ClinicalTrialsDetailsTool:1
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool:1
msgid "Bases: :py:class:`~tooluniverse.ctg_tool.ClinicalTrialsTool`"
msgstr "基础类：:py:class:`~tooluniverse.ctg_tool.ClinicalTrialsTool`"

#: 0079642904b94af3bcb8df267592f702 7f54ff04e0f143c4b9366397cb81893a of
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool.run:1
msgid "Executes the search query for clinical trials."
msgstr "执行临床试验的搜索查询。"

#: bce1b2d4105d4ac2b0ecd77df03d95fb d7dab7aaf9c3441f83136c203e0bff8c of
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool.run:3
msgid "A dictionary containing parameters provided by the user/LLM"
msgstr "由用户/LLM 提供的参数字典"

#: 4c5f96053e834ad8a0bc9f5bbb63c2f1 c3d7d6e769ab441c8c05d67cba3b539a of
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool.run:7
#, fuzzy
msgid "dict or str: The JSON response from the API as a dictionary,"
msgstr "API 返回的 JSON 响应作为字典，"

#: 5293d0ce1613453585cc4b7e099c6e60 dac5964dd8a042ed89bded2a86681139 of
#: tooluniverse.ctg_tool.ClinicalTrialsSearchTool.run:8
msgid "or raw text for non-JSON responses, or an error dictionary."
msgstr "对于非 JSON 响应的原始文本，或错误字典。"

#: 14f430d4208d4ba28f239f34e0e06aa9 231e0d5a786c445d8def7c3838f3b63c
#: 580f5e5dd8f7431eb83990308a4114e3 5a04fae9359b4a648aa6ca2e4299d8cd
#: a430bc8692e945e895275f536724c61b aefcdcbfcf584f6d8919e94b0157f177
#: b0c5aef27604428283f2037ad75b1ad3 c02ae7d60b3648a99975b48cf003a9aa
#: c776912711d4435aa301e5168bb4f356 of
#: tooluniverse.graphql_tool.DiseaseTargetScoreTool:1
#: tooluniverse.graphql_tool.OpentargetGeneticsTool:1
#: tooluniverse.graphql_tool.OpentargetTool:1
#: tooluniverse.graphql_tool.OpentargetToolDrugNameMatch:1
#: tooluniverse.restful_tool.RESTfulTool:1
msgid "Bases: :py:class:`~tooluniverse.graphql_tool.GraphQLTool`"
msgstr "基础类：:py:class:`~tooluniverse.graphql_tool.GraphQLTool`"

#: 3721d3645fa04634b8ec884e15950adc da09348c2fae4e1abd4d55f8234bf71b of
#: tooluniverse.graphql_tool.DiseaseTargetScoreTool:1
msgid ""
"Tool to extract disease-target association scores from specific data "
"sources"
msgstr "从特定数据源中提取疾病-靶点关联评分的工具"

#: 1e77a209872b41ff86ea1b6ce8e81136 b229a2bfea814d188d47295716b1d429 of
#: tooluniverse.graphql_tool.DiseaseTargetScoreTool.run:1
msgid ""
"Extract disease-target scores for a specific datasource Arguments should "
"contain: efoId, datasourceId (optional), pageSize (optional)"
msgstr "提取特定数据源的疾病-靶点评分 参数应包含：efoId，datasourceId（可选），pageSize（可选）"

#: 20952598ae33445d997e50f9c756120b 47704f0cc9d146688aceba04fda0e037
#: a2d5f539062245399a3fbd03d92ed27d a46c050b02034dd38bf3ad396c9b7d7a
#: dc0c72fba74a4b099fe99ba63816739b f8c59e36e6a24f34a2dc733c949cb009 of
#: tooluniverse.openfda_tool.FDADrugLabelSearchIDTool:1
#: tooluniverse.openfda_tool.FDADrugLabelSearchTool:1
#: tooluniverse.openfda_tool.FDADrugLabelTool:1
msgid "Bases: :py:class:`~tooluniverse.openfda_tool.FDATool`"
msgstr "基础类：:py:class:`~tooluniverse.openfda_tool.FDATool`"

#: 2933aaf30a704201a991b7563d827e18 75b8717d922f4992a75e0708b072bf8e of
#: tooluniverse.openfda_tool.FDADrugLabelGetDrugGenericNameTool:1
msgid "Bases: :py:class:`~tooluniverse.openfda_tool.FDADrugLabelTool`"
msgstr "基础类：:py:class:`~tooluniverse.openfda_tool.FDADrugLabelTool`"

#: 06eec3c0eadc4727b007c6451513de77 0860fd5d9f4e42dfb79a191237c65b09
#: 0b213432e097429cbf3f306c338bd13b 0b4b626be3904248ba90bfb2b4d1154d
#: 0e1488ee550747d8a82f60cf5bbc85b3 14299a0f9db94be38cb5bd8411f40361
#: 1590e60cbf9e49f582426f9072d6d0ae 1792ab92e9cb4e0aa49b7a7a0d4a5e23
#: 1d8b22daa2374076a9d5f0a6583f28e0 1dfa822a584d4b95b97c2e6950614998
#: 2171c1bd3c9b4952845d6194c71d8b7e 22707d90a44e4e3cbcc207c361dde29a
#: 229544dbbec444b4baea7fc60e0a16fa 2734d64eb1c34954a5e39a91776d632b
#: 28363a5b588d4745b2e8b31ecdfe3776 28c15eccf506466c9601190f87e59cc7
#: 2b006fe7e0544fed8634861687404873 2baa00ade5e446ac9d434f0ca626ff2d
#: 2ca4238d96f047fd95c817f6ad7b284d 2cab6c5b8d664ef3bf6e831fa1099f32
#: 30d1d50c68d24198bc816a4ec8fd90d0 31951e49bff74dd38dd1ab9e27cb511f
#: 32347f21ff8040b5ad4f983506ee4101 338225c63b7145c2afbc5685c92077b6
#: 3442cb48b8c64c71948ab8fe76766369 3aa51db403f04b0086eab6d6b9d846ee
#: 3ad0506e9d44450ea4ff99d6f75d5070 3d27169739fa4e51bd2859b22cac8a64
#: 3e63953cc5af40459c451859f83cbf8e 40590e111cdf4dce9c624ba69448a6f2
#: 43abdab2202c48348ddeef67d70b1423 47daec50f44e4988bd3e4217289a22af
#: 48d316012751443695ec3b24a9b1fe41 4a48ed6e21e1477bb8196306a2668426
#: 4bebb16f53f74e02a96ae87a1002efe7 4e1cb9e885f5429db4285087afca54dc
#: 4e7aea1d03de4d6d989f83f9bbe8a41d 50e0ffa259c241f8b1a08a15f619bbf2
#: 531e5f01a261469ea7ede946c8cdee82 53e50a62ba944f11848e38d059d1c3a9
#: 56409188b822469395881171a15e4c8c 5bad69c39bb34db8aa5179e451d2efa2
#: 5dbc6ef175bc41959d489704c6d356ea 5ed230e95a5d4fb0bca5272729c942ff
#: 61be2d75d02d43b39bff1b82f4f0b614 61c57d006fd643aaae889e90b2e0dfa5
#: 6203d1021ac04ff695f92528c99ad01c 6a0a2996036142d898163167dbce4ed4
#: 6a912e8798d34e0f87542f8887f7cdf5 6b97065fc1d44b799cbdd3456f106ccc
#: 6dde52d178c44a5d97d3a62205465d95 6de619d81f324a56a2246d6809e1a66e
#: 70a6c4372c264379af0a0a11460da370 773cc4a519b74cf587823dbe3b6f8dd1
#: 7c59b49b73d648c2a0674a25115da3fa 7ce20da9854447c4a50d83284b763d7e
#: 7df07274e55a44299ef3e4c58dd73192 7e4213f20c27407181f4ebfde6030569
#: 7e78adcd2ccd47ce89bd658623ff514f 7ef69198865a4b21be858135689db297
#: 7fb34cc0db244bea8f7f4fe0551e98bc 807fe1da4834468eba906ba951943b4e
#: 81ada1ba1ed24d4bb2f5d6dd11c87081 8376340f1b84484bacc12eaf3255ee6e
#: 8421915b1003492fabc7d80daeef53ce 84fbb70b25eb44d990ef49dfc5fa3eb1
#: 862a4d0978f7406b9b54930b7513b70f 88a9bd36fc174a5c8a99c1151e54382b
#: 8bef35976ab64983ba5d5f56df503103 8c2da4dd55a24c01b329c733d543c7b0
#: 8cfce37c8dd1472188a4489c018992ae 8df5b65edd564c9fad0d1d6a935652e6
#: 8fd0c183769742ddaf3c8f77ec4c082f 906c7b3a976f4234ab283184eb5f15b0
#: 93b94b1af5874278ab06042aedf9ceaf 984b5f19f7e44d61b965d51b6d6b98f4
#: 9aa5b9ac0fa4484e8cfd5124f0ba84bd 9c985453ad0f4d16ad98ba0557322c98
#: a2263242009b45308d06cd4b69c5ab01 a2d7a69645374ee7a489ca60f338ebaf
#: a3d000b5243143fc99eba55880ea2018 a65c7d98abc0442ab8c03e41b60dc3b1
#: a65d14982812487a899999dc122b1ccd a8259865ed614c7799434e6d25546f95
#: aa0698a83b364ae1abc466fe22f9eee7 aac54805c56f4930bf966a3b34371819
#: ab33f75aa6534dada1638a05559f13c4 aca9389d2e8343f2a60d4330c6bc9c05
#: acb2d255f9f945c3b505b904b280fe3a af03b36a44a647cf89da581e3aa4bcf4
#: af746ea0b6a940faa6fc61d91c90e13b b0dc492caa014473a61111eb772fb531
#: b129f282f92148a9a53fac7e2fb5f644 b1b08c7d9245431cb3b42202ca7e137c
#: b4f4ae68cf5e449589387ff249b14995 b6d002f876b64a8c9d8698c2b5632abf
#: b71f66aec8d7449faf12cac04d5da957 bd24a66325c34a2cabb8c3343a4c2592
#: bdd820e1372545f199eab97a0d5b84d4 bee0d3652dff4fd8ba4c1f0ce2dc5674
#: c0df84faee48461fb4e4ee5fd2488985 c30c80fabde44459861235712f8f6049
#: c5a548b9dca145e1a3bf76512cf7bd45 cb795a5ad93245b9a47fa69976fceef8
#: cbcb561762e04fe597f9e28f8ed16e5f cf7aec49ead44e509af0f45e7df8a570
#: d08c6b0eeb9f49718130a008e799d0fe d127e02c956b41cbafd79b8561831a6d
#: d2e249a7e4b14cf090f2e9185d3d4eb9 d3a373aa46464f14b2c001df63a0fc54
#: d4f99ce8c0e342b6984f90cd9d735a32 d9fc3d1950064dba94bde8d03a74afed
#: da11ee5fffe8444196f8ac721bfb126b dc3633c3e10244059b7c0e2a8ac4b433
#: df450e18e5754bbbacd7996841cc1579 e08c0599085543e08c46b4ba723f5019
#: e11874c0faf845629541af4d0b8ead48 e1b8c962a73e44f490ea7c81c14da18e
#: e2d697fee2ee42cc9179d4cb8ca01d07 e624a270453a47ed85a8fef76717c0ef
#: e94b5b1747c64707a723acaae3db1302 ea1da99f74294a398e9ec58131f8e247
#: efa45a61c13340a6a0337749213fcd8c f1435637311e4eca825910d929484317
#: f15ac8c6a32c4ca480ec19228a3eb670 f1dc104c97154d39ad6ddd8b37f517ab
#: f7b34cde6fdb4ee69e1fbce2b8e323e0 facb09d70bc44dc4b81811db42bc8040 of
#: tooluniverse.admetai_tool.ADMETAITool:1
#: tooluniverse.agentic_tool.AgenticTool:1
#: tooluniverse.alphafold_tool.AlphaFoldRESTTool:1
#: tooluniverse.arxiv_tool.ArXivTool:1
#: tooluniverse.biogrid_tool.BioGRIDRESTTool:1
#: tooluniverse.biorxiv_tool.BioRxivTool:1
#: tooluniverse.boltz_tool.Boltz2DockingTool:1
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool:1
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool:1
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool:1
#: tooluniverse.chem_tool.ChEMBLTool:1 tooluniverse.clinvar_tool.ClinVarTool:1
#: tooluniverse.compose_tool.ComposeTool:1 tooluniverse.core_tool.CoreTool:1
#: tooluniverse.crossref_tool.CrossrefTool:1
#: tooluniverse.custom_tool.CustomTool:1
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool:1
#: tooluniverse.dailymed_tool.SearchSPLTool:1
#: tooluniverse.dataset_tool.DatasetTool:1 tooluniverse.dblp_tool.DBLPTool:1
#: tooluniverse.dbsnp_tool.DbSnpTool:1 tooluniverse.doaj_tool.DOAJTool:1
#: tooluniverse.efo_tool.EFOTool:1
#: tooluniverse.embedding_database.EmbeddingDatabase:1
#: tooluniverse.embedding_sync.EmbeddingSync:1
#: tooluniverse.enrichr_tool.EnrichrTool:1
#: tooluniverse.ensembl_tool.EnsemblTool:1
#: tooluniverse.europe_pmc_tool.EuropePMCTool:1
#: tooluniverse.fatcat_tool.FatcatScholarTool:1
#: tooluniverse.gene_ontology_tool.GeneOntologyTool:1
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch:1
#: tooluniverse.geo_tool.GEORESTTool:1 tooluniverse.gnomad_tool.GnomadTool:1
#: tooluniverse.graphql_tool.GraphQLTool:1
#: tooluniverse.gwas_tool.GWASRESTTool:1 tooluniverse.hal_tool.HALTool:1
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool:1
#: tooluniverse.hpa_tool.HPAJsonApiTool:1
#: tooluniverse.hpa_tool.HPASearchApiTool:1
#: tooluniverse.hpa_tool.HPAXmlApiTool:1
#: tooluniverse.humanbase_tool.HumanBaseTool:1
#: tooluniverse.markitdown_tool.MarkItDownTool:1
#: tooluniverse.medlineplus_tool.MedlinePlusRESTTool:1
#: tooluniverse.medrxiv_tool.MedRxivTool:1
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch:1
#: tooluniverse.odphp_tool.ODPHPRESTTool:1
#: tooluniverse.openaire_tool.OpenAIRETool:1
#: tooluniverse.openalex_tool.OpenAlexTool:1
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool:1
#: tooluniverse.openfda_tool.FDATool:1
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool:1
#: tooluniverse.package_tool.PackageTool:1 tooluniverse.pmc_tool.PMCTool:1
#: tooluniverse.pubchem_tool.PubChemRESTTool:1
#: tooluniverse.pubmed_tool.PubMedTool:1
#: tooluniverse.pubtator_tool.PubTatorTool:1
#: tooluniverse.rcsb_pdb_tool.RCSBTool:1
#: tooluniverse.reactome_tool.ReactomeRESTTool:1
#: tooluniverse.remote_tool.RemoteTool:1
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool:1
#: tooluniverse.string_tool.STRINGRESTTool:1
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:1
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword:1
#: tooluniverse.tool_finder_llm.ToolFinderLLM:1
#: tooluniverse.ucsc_tool.UCSCTool:1
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool:1
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool:1
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool:1
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool:1
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool:1
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool:1
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool:1
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool:1
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool:1
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool:1
#: tooluniverse.uniprot_tool.UniProtRESTTool:1
#: tooluniverse.unpaywall_tool.UnpaywallTool:1
#: tooluniverse.url_tool.URLHTMLTagTool:1
#: tooluniverse.url_tool.URLToPDFTextTool:1
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool:1
#: tooluniverse.visualization_tool.VisualizationTool:1
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool:1
#: tooluniverse.xml_tool.XMLDatasetTool:1 tooluniverse.zenodo_tool.ZenodoTool:1
msgid "Bases: :py:class:`~tooluniverse.base_tool.BaseTool`"
msgstr "基础类：:py:class:`~tooluniverse.base_tool.BaseTool`"

#: 1a975ff327994d2aaf3f7654a362016e 3f403b72970044728c460354a5082947 of
#: tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool.validate_enum_arguments:1
msgid "Validate that enum-based arguments match the allowed values"
msgstr "验证基于枚举的参数是否与允许的值匹配"

#: 3f8dc389f56946838bad5ca304eea0d0 7d3b6503d1124d5daea4e93bad6327e1 of
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool:1
msgid "Bases: :py:class:`~tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool`"
msgstr "基础类：:py:class:`~tooluniverse.openfda_adv_tool.FDADrugAdverseEventTool`"

#: 1e328c84e4b14872a9676a415ddf11ff 8572afca82cc48889bc82ceae03488fd of
#: tooluniverse.openfda_adv_tool.FDACountAdditiveReactionsTool:1
msgid ""
"Leverage openFDA API to count adverse reaction events across multiple "
"drugs in one request."
msgstr "利用 openFDA API 在一次请求中统计多个药物的不良反应事件数量。"

#: 85ba7465a5024dccbd20a997d3fc36ff e6f5f65f724e40058266b880640d9608 of
#: tooluniverse.chem_tool.ChEMBLTool:1
msgid ""
"Tool to search for molecules similar to a given compound name or SMILES "
"using the ChEMBL Web Services API."
msgstr "使用ChEMBL Web Services API，根据给定的化合物名称或SMILES搜索相似分子的工具。"

#: 245281e3c20647519291f57ef501d191 e4e36013ca1d4a1fa68e4bc4166dc1e2 of
#: tooluniverse.chem_tool.ChEMBLTool.get_chembl_id_by_name:1
msgid ""
"Search ChEMBL for a compound by name and return the ChEMBL ID of the "
"first match."
msgstr "在 ChEMBL 中通过名称搜索化合物，并返回第一个匹配项的 ChEMBL ID。"

#: 4261807a84d142349dd417220b812946 5760359dc92e449d81cdcd86dbda9909 of
#: tooluniverse.chem_tool.ChEMBLTool.get_chembl_smiles_pref_name_id_by_name:1
msgid ""
"Search ChEMBL for a compound by name and return a list of dicts with "
"ChEMBL ID, canonical SMILES, and preferred name for the top 5 matches."
msgstr "在ChEMBL中按名称搜索化合物，并返回一个包含前5个匹配项的列表，每个列表项为一个字典，包含ChEMBL ID、规范化SMILES和首选名称。"

#: 0c4f97bfaafb48349fc52fa6119abaf0 0ff2957eee774b1fbc937b067308be2d of
#: tooluniverse.chem_tool.ChEMBLTool.get_smiles_pref_name_by_chembl_id:1
msgid "Given a ChEMBL ID, return a dict with canonical SMILES and preferred name."
msgstr "根据提供的ChEMBL ID，返回一个包含规范化SMILES和首选名称的字典。"

#: 068e02d894a344c98340f67c89c08607 f9ba87ee15514dc0b53bbd2571dc9932 of
#: tooluniverse.compose_tool.ComposeTool:1
msgid ""
"A flexible tool that can compose other tools using custom code logic. "
"Supports both inline composition_code and external Python files. Features"
" intelligent dependency management with automatic tool loading."
msgstr "一个灵活的工具，可通过自定义代码逻辑组合其他工具。支持内联的composition_code和外部Python文件。具有智能依赖管理功能，可自动加载工具。"

#: 102f237583454dd194a332e471f61fa6 24fbafdcc33840188c36190a59a7c524 of
#: tooluniverse.compose_tool.ComposeTool.run:1
msgid "Execute the composed tool with custom code logic."
msgstr "执行带有自定义代码逻辑的组合工具。"

#: e017231bab45426495d3d79a85f1ca63 fa4be377517d4ad0bf05c699bd3bae90 of
#: tooluniverse.compose_tool.ComposeTool.run:3
msgid "Input arguments for the composition"
msgstr "组成的输入参数"

#: 3d0b3cb2356f4f7fbf2d06841003abfc 7526a7047d254a5390e6f59ee0f1c9de of
#: tooluniverse.compose_tool.ComposeTool.run:5
msgid "Callback function for streaming output"
msgstr "用于流式输出的回调函数"

#: 4fafc791c18c417aa592e1b8f3db12e5 f6b5b664cb364b3d8c8c2d49d4a894b2 of
#: tooluniverse.compose_tool.ComposeTool.run:9
#, fuzzy
msgid "Any: Result from the composition execution"
msgstr "组合执行结果"

#: 200711a9274a4b39974365d3a810ba77 cbc9b119bea24e70adaa093ee50df558 of
#: tooluniverse.europe_pmc_tool.EuropePMCTool:1
msgid "Tool to search for articles on Europe PMC including abstracts."
msgstr "用于在 Europe PMC 上搜索文章（包括摘要）的工具。"

#: 07719ea60cff45a3a0fa7d1a9d239eb3 808bec91685841dd885bbfc17d007ef6 of
#: tooluniverse.semantic_scholar_tool.SemanticScholarTool:1
msgid "Tool to search for papers on Semantic Scholar including abstracts."
msgstr "用于在Semantic Scholar上搜索论文（包括摘要）的工具。"

#: 1c207a6765c741e0a075c3f789fb6942 fa4e84247673475598c3a9193644781c of
#: tooluniverse.pubtator_tool.PubTatorTool:1
msgid ""
"Generic wrapper around a single PubTator 3 endpoint supporting JSON-"
"defined configs."
msgstr "围绕单个PubTator 3端点的通用包装器，支持JSON定义的配置。"

#: a3fb75f3edbf42218263995067def514 bfdbcc1ef61d4f0fb46625358dd2c3f5 of
#: tooluniverse.efo_tool.EFOTool:1
msgid ""
"Tool to lookup Experimental Factor Ontology (EFO) IDs for diseases via "
"the EMBL-EBI OLS API."
msgstr "通过EMBL-EBI OLS API查找疾病的实验因子本体（EFO）ID的工具。"

#: 33b5a11b731a4a1d8ed5799391d057b8 8f7e803d24a944e6872c1c1b1202993f of
#: tooluniverse.agentic_tool.AgenticTool:1
msgid ""
"Generic wrapper around LLM prompting supporting JSON-defined configs with"
" prompts and input arguments."
msgstr "围绕LLM提示的通用包装器，支持使用JSON定义的配置以及提示和输入参数。"

#: 70ca7e29b9ad4aac98de9d4181bb6c49 c5966222b1e44e26807c66a1fb0878b4 of
#: tooluniverse.agentic_tool.AgenticTool.get_availability_status:1
msgid "Get detailed availability status of the tool."
msgstr "获取工具的详细可用性状态。"

#: a33fe146785845dcaff399ca3cb16bef ed634bc04d72431f8fa8d0486771fc02 of
#: tooluniverse.agentic_tool.AgenticTool.has_any_api_keys:1
msgid "Check if any API keys are available across all supported API types."
msgstr "检查所有支持的 API 类型中是否有可用的 API 密钥。"

#: 9d1b92dd91f14380b708a0b5220a6ecc f5d309bc433b4554b8d1d509a9aee2c2 of
#: tooluniverse.agentic_tool.AgenticTool.has_any_api_keys:4
#, fuzzy
msgid "bool: True if at least one API type has all required keys, False otherwise"
msgstr "如果至少有一种 API 类型包含所有必需的键，则为 True，否则为 False"

#: 132df5deffbb4d9ab773cd30b06f37f6 5c623adb1f7e41859193f49b22839882 of
#: tooluniverse.agentic_tool.AgenticTool.is_available:1
msgid "Check if the tool is available for use."
msgstr "检查该工具是否可用。"

#: 23c86fd307374c3eb1099f43d6fdde67 e1af4eb7b9224d09b4e59b99ab7c8b90 of
#: tooluniverse.agentic_tool.AgenticTool.retry_initialization:1
msgid "Attempt to reinitialize the tool (useful if API keys were updated)."
msgstr "尝试重新初始化工具（如果更新了API密钥，这将非常有用）。"

#: c934e6235a9b4d96b4f0cd241b1774dd d997b00561db4fb2bcd59f2dd1b2f8bb of
#: tooluniverse.dataset_tool.DatasetTool:1
msgid ""
"Tool to search and filter the DrugBank vocabulary dataset. Provides "
"functionality to search drugs by name, ID, synonyms and filter by various"
" criteria."
msgstr "用于搜索和筛选DrugBank词汇数据集的工具。提供按名称、ID、同义词搜索药物的功能，并可根据各种条件进行筛选。"

#: 0600b8ca47584bd391e573e8ef4def71 19aa936056064c929531d95c3baa6c7e of
#: tooluniverse.dataset_tool.DatasetTool.get_dataset_info:1
msgid "Get information about the loaded dataset."
msgstr "获取有关已加载数据集的信息。"

#: 024e5f4be27d468292206140e71465ad 313e9e4ccc704819b47b35a6e322a794
#: 6532b4e473c6416e936aa4e7092ca937 6aa203e23c484a8a87295f7b1aa7929c
#: 6bc97375feca46099bc7dc6e13ef680d 885650918f86431988053237a17d458b
#: a2c2fc921b4b404584b52af322d622b8 of
#: tooluniverse.dataset_tool.DatasetTool.run:1
#: tooluniverse.enrichr_tool.EnrichrTool.run:1
#: tooluniverse.humanbase_tool.HumanBaseTool.run:1
#: tooluniverse.openalex_tool.OpenAlexTool.run:1
#: tooluniverse.xml_tool.XMLDatasetTool.run:1
msgid "Main entry point for the tool."
msgstr "工具的主要入口点。"

#: aa0a58e152144271b250cfbe945a1fd6 b446635abcb040afbda206db544e3010 of
#: tooluniverse.dailymed_tool.SearchSPLTool:1
msgid ""
"Search SPL list based on multiple filter conditions "
"(drug_name/ndc/rxcui/setid/published_date). Returns original DailyMed API"
" JSON (including metadata + data array)."
msgstr ""
"根据多个筛选条件（drug_name/ndc/rxcui/setid/published_date）搜索SPL列表。返回原始的DailyMed "
"API JSON（包括元数据和数据数组）。"

#: 247dc306a0b54fdd848941996b175a8a 651362f2f6a44462888fa3d33aa538cb of
#: tooluniverse.dailymed_tool.GetSPLBySetIDTool:1
msgid ""
"Get complete SPL label based on SPL Set ID, returns content in XML or "
"JSON format."
msgstr "根据SPL集ID获取完整的SPL标签，返回内容支持XML或JSON格式。"

#: 3ee87fb72b7542ed99f5b8962ceec78c c5c4ca8bceb84fa08ee80a38917ba595
#: d29e86166b4444b1b188b68c4f3d40b6 fead287808a144b8abf8e299f0c68ab3 of
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool:1
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool:1
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool:1
msgid "Bases: :py:class:`~tooluniverse.hpa_tool.HPAJsonApiTool`"
msgstr "基础：:py:class:`~tooluniverse.hpa_tool.HPAJsonApiTool`"

#: 8dd6c08a369c4bdd8367c74d5fb894fe 90539495cb69483eb6cf6d159d07be7c of
#: tooluniverse.hpa_tool.HPAGetGeneJSONTool:1
msgid ""
"Enhanced legacy tool - Get basic gene information using Ensembl Gene ID. "
"Now uses the efficient JSON API instead of search API."
msgstr "增强的旧版工具 - 使用 Ensembl 基因 ID 获取基本基因信息。现在使用高效的 JSON API 替代了搜索 API。"

#: 10485c1dc8474cfc855393c05d3ff7c6 1dad47d5d10e4ce5989d46e0da916f17
#: 24dbeeca2ccb42ad988ec4c945e5eb12 32ed5d3fa5c24c54b93472e0d6bad8a3
#: 53336867204b4bd8afd18fb657dee192 92f081c0310e461fb57cbc52406ab74d
#: 98e04a5c0438430c842c001326b9d6fd bd17dd6909634150bee1d72de21c0471
#: c979becbeaec48599550f358d4802b31 of
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool:1
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool:1
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool:1
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool:1
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool:1
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool:1
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool:1
#: tooluniverse.hpa_tool.HPASearchGenesTool:1
msgid "Bases: :py:class:`~tooluniverse.hpa_tool.HPASearchApiTool`"
msgstr "基础：:py:class:`~tooluniverse.hpa_tool.HPASearchApiTool`"

#: 0238c2f5d3734a24b066dcd16ec9d861 a866610e0cbc4c8083dee05bd538e743 of
#: tooluniverse.hpa_tool.HPAGetGeneXMLTool:1
msgid "Legacy tool - Get gene TSV format data (alternative to XML)."
msgstr "遗留工具 - 获取基因TSV格式数据（XML的替代方案）。"

#: 1cca07cea1604284b83e719b9dbe1d6e b68d341783024c3aa6ece123a01375d0 of
#: tooluniverse.reactome_tool.ReactomeRESTTool:1
msgid ""
"Generic Reactome Content Service REST tool. If there is no "
"\"fields.extract_path\" in config or its value is empty, returns complete"
" JSON; Otherwise, drills down according to the \"dot-separated path\" in "
"extract_path and returns corresponding sub-node."
msgstr "通用Reactome内容服务REST工具。如果配置中没有“fields.extract_path”或其值为空，则返回完整的JSON；否则，根据extract_path中的“点分隔路径”向下钻取，并返回对应的子节点。"

#: 234512b6aba24c63aa8ff7878d13abf1 af1ff321c4a44fd29fdb43854acacdb4 of
#: tooluniverse.pubchem_tool.PubChemRESTTool:1
msgid ""
"Generic PubChem PUG-REST tool class. Directly concatenates URL from the "
"fields.endpoint template and sends requests to PubChem PUG-REST."
msgstr "通用的PubChem PUG-REST工具类。直接根据fields.endpoint模板拼接URL，并向PubChem PUG-REST发送请求。"

#: 7dc48a6378714c6fb8396e7a441c8bce 91813b0ec954411db12d757a5a339295 of
#: tooluniverse.medlineplus_tool.MedlinePlusRESTTool:1
msgid ""
"MedlinePlus REST API tool class. Supports health topic search, code "
"lookup, genetics information retrieval, etc."
msgstr "MedlinePlus REST API 工具类。支持健康主题搜索、代码查询、遗传信息检索等功能。"

#: 02ea37d4a41c4751a42d63e2e7fcc820 8e6dd7ffd4d74863bf566d536c0f2ed4 of
#: tooluniverse.medlineplus_tool.MedlinePlusRESTTool.run:1
msgid "Execute tool call"
msgstr "执行工具调用"

#: 18f99c7dc76d4433ad8f4ebe31074369 c09133dcbd8a4925aeb0267220e40718 of
#: tooluniverse.package_tool.PackageTool:1
msgid ""
"Universal tool to provide information about Python packages. Fetches "
"real-time data from PyPI API with local fallback."
msgstr "通用工具，用于提供有关 Python 包的信息。通过 PyPI API 获取实时数据，并支持本地备用方案。"

#: 97fca471274a4c95b6879894210b2692 ce7db2f9b8214e9a9da1c37f47f90434 of
#: tooluniverse.package_tool.PackageTool.run:1
msgid "Get comprehensive package information."
msgstr "获取全面的包信息。"

#: 92554e480025428c8642567a71e5c913 b667edf82c3b4e759af396b8ac5765fd of
#: tooluniverse.package_tool.PackageTool.run:3
msgid "Optional parameters for customization"
msgstr "可选参数用于自定义"

#: 7d7b13d15c2341adb892c3ebf1515c5f ce733c3b9d984f8a95dcbc8b0f54fad6 of
#: tooluniverse.package_tool.PackageTool.run:7
#, fuzzy
msgid ""
"dict: Package information including name, description, installation, "
"docs, usage"
msgstr "软件包信息，包括名称、描述、安装、文档、使用"

#: 86e6877831ba4b01b557ab2be667d0b1 d27101bd062a4416a41a294a7e62c348 of
#: tooluniverse.smcp.SMCP:1
msgid "Bases: :py:class:`~fastmcp.server.server.FastMCP`"
msgstr "基础类：:py:class:`~fastmcp.server.server.FastMCP`"

#: 8bbc46c9397244d3a0c36b6679cf5df0 fd4aa2f3e093413e9e6ce249fefb18fb of
#: tooluniverse.smcp.SMCP:1
msgid "Scientific Model Context Protocol (SMCP) Server"
msgstr "科学模型上下文协议（SMCP）服务器"

#: 83de939691584dc89a1ea14ccdce86e5 aac9cabf01e345199cd78e02ad2199e6 of
#: tooluniverse.smcp.SMCP:3
msgid ""
"SMCP is an enhanced MCP (Model Context Protocol) server that seamlessly "
"integrates ToolUniverse's extensive collection of scientific and "
"scientific tools with the FastMCP framework. It provides a unified, AI-"
"accessible interface for scientific computing, data analysis, and "
"research workflows."
msgstr ""
"SMCP 是一个增强版的 MCP（模型上下文协议）服务器，它将 ToolUniverse 的广泛科学工具集合与 FastMCP "
"框架无缝集成。该服务器为科学计算、数据分析和研究工作流程提供了一个统一的、可由 AI 访问的接口。"

#: 425b1d38210c4332b4f7236c4fbdfb16 811b7032e2e04519b1d2fe7e2026656a of
#: tooluniverse.smcp.SMCP:8
msgid ""
"The SMCP server extends standard MCP capabilities with scientific domain "
"expertise, intelligent tool discovery, and optimized configurations for "
"research applications. It automatically handles the complex task of "
"exposing hundreds of specialized tools through a consistent, well-"
"documented interface."
msgstr ""
"SMCP 服务器在标准 MCP "
"功能的基础上扩展了科学领域的专业知识、智能工具发现功能以及针对研究应用的优化配置。它能够自动处理复杂的任务，通过一致且文档完善的接口公开数百种专业工具。"

#: 299161b99e5148508e77bd9b39357b7f 8e435e67a2424eceb808b6d17d086bc3 of
#: tooluniverse.smcp.SMCP:14
msgid "Key Features:"
msgstr "关键功能："

#: 0dbf4dea83ed49f290996a3e068071c2 f1c9126077be45a59228e6cd1c0c9c4f of
#: tooluniverse.smcp.SMCP:15
msgid ""
"🔬 **Scientific Tool Integration**: Native access to 350+ specialized "
"tools covering"
msgstr "🔬 **科学工具集成**：原生支持访问350多种专业工具，涵盖"

#: 837a32b0b3bb42849c80a2bcd1624242 838ff163308f4fe1922a26c26a5f6043 of
#: tooluniverse.smcp.SMCP:16
msgid ""
"scientific databases, literature search, clinical data, genomics, "
"proteomics, chemical informatics, and AI-powered analysis capabilities."
msgstr "科学数据库、文献检索、临床数据、基因组学、蛋白质组学、化学信息学，以及基于人工智能的分析功能。"

#: c5cbf69942d14c12aaedaa7c8304e3ea ee7c5ed01d7b4ef79ae30a623f75dc00 of
#: tooluniverse.smcp.SMCP:19
msgid ""
"🧠 **AI-Powered Tool Discovery**: Multi-tiered intelligent search system "
"using:"
msgstr "🧠 **AI 驱动的工具发现**：使用多层次智能搜索系统："

#: 182e5b79bdd84787884181eea0d3f3ae 9a685c1d70f44d4d8043274c63c9a67c of
#: tooluniverse.smcp.SMCP:20
msgid ""
"ToolFinderLLM: Cost-optimized LLM-based semantic understanding with pre-"
"filtering"
msgstr "ToolFinderLLM：通过预过滤实现成本优化的基于LLM的语义理解"

#: 6723cfaf86ec4d8dbe90f4ea47812732 8069569174994f0ca035a669d9f4b1ad of
#: tooluniverse.smcp.SMCP:21
msgid "Tool_RAG: Embedding-based similarity search"
msgstr "Tool_RAG：基于嵌入的相似性搜索"

#: 7476741ec2d84e189ace0a779a7b5565 8d1cdbc6afdf4de2a46e520688f6b383 of
#: tooluniverse.smcp.SMCP:22
msgid "Keyword Search: Simple text matching as reliable fallback"
msgstr "关键词搜索：作为可靠的备用方案，进行简单的文本匹配"

#: 152718748c4c42eebd45aa4110562efb 90f1ffdc3ca94dab8edcc939fb548cac of
#: tooluniverse.smcp.SMCP:24
msgid ""
"📡 **Full MCP Protocol Support**: Complete implementation of MCP "
"specification with:"
msgstr "📡 **全面支持MCP协议**：完整实现MCP规范，包括："

#: 2ddcf426275e45c990cde8deae5c5d8e 4a02079627a04cfcb83234bdf036dd50 of
#: tooluniverse.smcp.SMCP:25
#, fuzzy
msgid "Standard methods (tools/list, tools/call, resources/*, prompts/*)"
msgstr "标准方法（tools/list、tools/call、resources/*、prompts/*）"

#: 27e07ac8914d4f97824432c71241bdb2 83e32df7b6174daa919de7815fc1c440
#: ec43d87451d74eb6814edaed47dfec67 of tooluniverse.smcp:76
#: tooluniverse.smcp.SMCP:26
msgid "Custom scientific methods (tools/find, tools/search)"
msgstr "自定义科学方法（tools/find, tools/search）"

#: 47fd818cdd944346a96d06877c053e68 4e2c3a9095da4d31af69f40629471ff2 of
#: tooluniverse.smcp.SMCP:27
msgid "Multi-transport support (stdio, HTTP, SSE)"
msgstr "多传输支持（stdio、HTTP、SSE）"

#: 1d3cacda52744b66aad333780bff271f d22e4e4cd6f5466e9c21ba8da0c7b3a8 of
#: tooluniverse.smcp.SMCP:28
msgid "JSON-RPC 2.0 compliance with proper error handling"
msgstr "JSON-RPC 2.0 兼容性与正确的错误处理"

#: 5897ec53b8c244f48ceeab2be3933371 be47d26688c34b3fad755b3a178cd9a3 of
#: tooluniverse.smcp.SMCP:30
msgid "⚡ **High-Performance Architecture**: Production-ready features including:"
msgstr "⚡ **高性能架构**：包含可用于生产环境的功能："

#: 2d80a90c1a514a20957ec5d729ee8517 ded72e28b8534041bfd56055b5aaaef2 of
#: tooluniverse.smcp.SMCP:31
msgid "Configurable thread pools for concurrent tool execution"
msgstr "用于并发工具执行的可配置线程池"

#: f369ee706af14ea494ab9c494b7bb8a7 f3c186c1e4ad447b85a5aeacccc136d7 of
#: tooluniverse.smcp.SMCP:32
msgid "Intelligent tool loading and caching"
msgstr "智能工具加载与缓存"

#: b36c0a6fc2e6405ea7f7e7b33127f9ed c471b60b1c2a4cefb3f2d96a17babbe2 of
#: tooluniverse.smcp.SMCP:33
msgid "Resource management and graceful degradation"
msgstr "资源管理与优雅降级"

#: 376e8fb3ddbd448eb2c0a841e2c8bf82 ad0c7baa49014c36bed5036ff0ef3c30 of
#: tooluniverse.smcp.SMCP:34
msgid "Comprehensive error handling and recovery"
msgstr "全面的错误处理与恢复"

#: 0ec69dc5d2bd428d9f1fafcd9b2aa47a fb653018388c445eb4e8057696ef09f8 of
#: tooluniverse.smcp.SMCP:36
msgid "🔧 **Developer-Friendly**: Simplified configuration and deployment with:"
msgstr "🔧 **开发者友好**：通过以下方式简化配置和部署："

#: eea567506f9244cbb33156ad75cae05e f4a5df92d9e74d16b7e196df31a15415 of
#: tooluniverse.smcp.SMCP:37
msgid "Sensible defaults for scientific computing"
msgstr "科学计算的合理默认设置"

#: 561005cf75634912b258436367b94dfd 88b705710611485081c7249b28797eff of
#: tooluniverse.smcp.SMCP:38
msgid "Flexible customization options"
msgstr "灵活的自定义选项"

#: 20ede238bfd74949b10222941bc7d7c8 4a78649cb30041fd934caf6fbc5fbd56 of
#: tooluniverse.smcp.SMCP:39
msgid "Comprehensive documentation and examples"
msgstr "全面的文档与示例"

#: 3ba0a54900f94ac295cad33ef06ae254 985d4bfca6be40a2802fd8a6b2ad7973 of
#: tooluniverse.smcp.SMCP:40
msgid "Built-in diagnostic and monitoring tools"
msgstr "内置诊断和监控工具"

#: 3f66e28fb8fc438d88bbd2825df2be36 67f4f688e0994366825019975b814d9a of
#: tooluniverse.smcp.SMCP:43
msgid "Custom MCP Methods:"
msgstr "自定义MCP方法："

#: 77aeca59b4264bf69eaf14f7271fdb27 9a2b17d241524a6592a8a15721269961 of
#: tooluniverse.smcp.SMCP:44
msgid "tools/find:"
msgstr "工具/查找:"

#: 44e56606ee454711a2e8b7425dcadbda ba49c9d931154eab85f773e0a0663c2f of
#: tooluniverse.smcp.SMCP:45
msgid ""
"AI-powered tool discovery using natural language queries. Supports "
"semantic search, category filtering, and flexible response formats."
msgstr "基于AI的工具发现，支持使用自然语言查询。功能包括语义搜索、类别筛选以及灵活的响应格式。"

#: 293dc79505ec47a9b735e2007e36e077 ac136629de744abdb21ef18ad3dce26f of
#: tooluniverse.smcp.SMCP:48
msgid "tools/search:"
msgstr "工具/搜索："

#: 3f5b09064a044a349585a920db6dbe06 52d0f3075a96474a9e2fb1b7b3a29acc of
#: tooluniverse.smcp.SMCP:49
msgid ""
"Alternative endpoint for tool discovery with identical functionality to "
"tools/find, provided for compatibility and convenience."
msgstr "用于工具发现的备用端点，功能与 tools/find 完全相同，提供兼容性和便利性。"

#: 0e8e718016d94146bc7893fbdd099d8e 345f4215837f48e7a7517e7ea0579cd5
#: 3d06eaf412fb43378f11adb633fedc65 4bc4ee3026bc43adb1fdf14d6a9629e3
#: 5f021ac21fc541cdaf13a1936b86660f 6cdd93e59c914b1baf6b730bd69efcc7
#: 9b0cfa89654740c7991f89066cae8b79 facf1f34883146ab8c8bd149afbc90be of
#: tooluniverse.smcp.SMCP:53 tooluniverse.smcp.SMCP.add_custom_tool:9
#: tooluniverse.smcp.SMCP.run_simple:8 tooluniverse.smcp.create_smcp_server:8
#, fuzzy
msgid "Parameters:"
msgstr "参数"

#: 1ea82be56d0743d1b98c22d40f9318f8 49c6ee880a354e65b78598db1b048c46
#: 791846866eb64988bcc9d53a6972033f 8e59e453c62140289b314f337e563fa5
#: bb969740eb344ee1add4e5dcba3beb68 cfa62d3e845d46aa83b605f561654d05 of
#: tooluniverse.smcp.SMCP:54 tooluniverse.smcp.SMCP.add_custom_tool:10
#: tooluniverse.smcp.create_smcp_server:9
#, fuzzy
msgid "name"
msgstr "钩子类型"

#: 1e48da8f07ff41f89be76eb3b4601d3a 38d95c404e094dc4be64f66eb35c168d
#: 8a56573311704fc1add9716609c34b7c 9c494e71bd2245c6ad2f433aed09b2e8
#: cc6e91eaab4d44099f3aec2cbd5d25d6 d6186a67165546e0922b7ae711ebf47a
#: d760fd73e4e1464da4ef199f0263a8ac ec531e6535344f50a09ce26b565a7252 of
#: tooluniverse.smcp.SMCP:-1 tooluniverse.smcp.SMCP.add_custom_tool:-1
#, fuzzy
msgid "str, optional"
msgstr ":py:class:`列表`"

#: 3df4f17121094c93babb76552dd1e78b 92af16df31b040279eedd78ae23d2e00 of
#: tooluniverse.smcp.SMCP:55
msgid ""
"Human-readable server name used in logs and identification. Default: "
"\"SMCP Server\" Examples: \"Scientific Research API\", \"Drug Discovery "
"Server\""
msgstr ""
"用于日志记录和标识的人类可读服务器名称。  \n"
"默认值：\"SMCP Server\"  \n"
"示例：\"Scientific Research API\"、\"Drug Discovery Server\""

#: 1183726b21624024bd396e9bd77af4a9 3a2faffdfd3e4763bdd57768ee1214a7 of
#: tooluniverse.smcp.SMCP:59
#, fuzzy
msgid "tooluniverse_config"
msgstr "tooluniverse 软件包"

#: 44390b0a33e94a7fa6b61873acce5dd3 817f6868107644b5a604dd5e82171050 of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "ToolUniverse or dict, optional"
msgstr "ToolUniverse 或 dict，可选"

#: 06cce7b468d74e408131981fd9b217cd 4f604943f26a49a4a3a2eaf52e1b9a11 of
#: tooluniverse.smcp.SMCP:60
msgid ""
"Either a pre-configured ToolUniverse instance or configuration dict. If "
"None, creates a new ToolUniverse with default settings. Allows reuse of "
"existing tool configurations and customizations."
msgstr ""
"如果为预先配置的 ToolUniverse 实例或配置字典。如果为 None，则创建一个具有默认设置的新 "
"ToolUniverse。支持重用现有工具配置和自定义设置。"

#: 67346a1dd2a9413aabef11bf95229155 85a849d3d7694eadbb1909819e7baf94
#: a926b24437014dafa7be1119d7455547 cffc1681e0f1417483d5a4fb72b6c715 of
#: tooluniverse.smcp.SMCP:64 tooluniverse.smcp.create_smcp_server:16
#, fuzzy
msgid "tool_categories"
msgstr "工具类别"

#: 07b4cfab88c048458f2ace3e850d3f77 1c4fe83a6f6242c0a1925b4ab5683972
#: 2e45f3d99c7d486bbf2ad5d63d898bb2 4e944d387dba4b90a8f4c30ff831cb74
#: 7d7bd77bbe934983b0259d7e5b604eca 826620c1e27344af8d61513e06f206eb
#: 97a59bf46bc643a29b0e3bbace67b327 b8416a156eda4551b6346f63040c7d59
#: cf4ffd0219094fd5865ceebe297f3432 d47ed36650054cae8b1063e745cabef5
#: d724916dfee44292be62ad277488c8f1 e3babd8cce8e41ddb36595c43f3f2809
#: e7b1a1ac957444358a03ba79d60da12a f61f460d4d42489aa9248e29e4519381 of
#: tooluniverse.smcp.SMCP:-1 tooluniverse.smcp.create_smcp_server:-1
#, fuzzy
msgid "list of str, optional"
msgstr "纸质词典列表"

#: 640899ab957d4aefa9982f3fd99ec2f0 d24452e75e5144d8872dda833930773a of
#: tooluniverse.smcp.SMCP:65
msgid ""
"Specific ToolUniverse categories to load. If None and "
"auto_expose_tools=True, loads all available tools. Common combinations: -"
" Scientific: [\"ChEMBL\", \"uniprot\", \"opentarget\", \"pubchem\", "
"\"hpa\"] - Literature: [\"EuropePMC\", \"semantic_scholar\", "
"\"pubtator\", \"agents\"] - Clinical: [\"fda_drug_label\", "
"\"clinical_trials\", \"adverse_events\"]"
msgstr ""
"指定要加载的 ToolUniverse 分类。如果设置为 None 且 "
"auto_expose_tools=True，则会加载所有可用工具。常见组合如下：  \n"
"- 科学类: [\"ChEMBL\", \"uniprot\", \"opentarget\", \"pubchem\", \"hpa\"]  \n"
"- 文献类: [\"EuropePMC\", \"semantic_scholar\", \"pubtator\", \"agents\"]  \n"
"- 临床类: [\"fda_drug_label\", \"clinical_trials\", \"adverse_events\"]"

#: 2554da1c8742460ea1fff35498276d71 ec6040347f9d420587df7d3fdb5d0572 of
#: tooluniverse.smcp.SMCP:71
#, fuzzy
msgid "exclude_tools"
msgstr ""
"exclude_tool_types  \n"
"排除工具类型"

#: 30c78e6b479442e0a330869372ecac06 91775e7f48da4b5689c382f912a8fc82 of
#: tooluniverse.smcp.SMCP:72
msgid ""
"Specific tool names to exclude from loading. These tools will not be "
"exposed via the MCP interface even if they are in the loaded categories. "
"Useful for removing specific problematic or unwanted tools."
msgstr "需要排除加载的特定工具名称。这些工具即使属于已加载的类别，也不会通过MCP界面显示。此功能适用于移除特定存在问题或不需要的工具。"

#: 04382641036a471cb81d18cb446a7eb1 f4c085dbac004884ac1b0d09f12e667c of
#: tooluniverse.smcp.SMCP:76
#, fuzzy
msgid "exclude_categories"
msgstr ""
"exclude_categories  \n"
"排除类别"

#: 0087086db8534de5ba5495c6b91320af 3593ddd8d17a4638956b56f6b285369f of
#: tooluniverse.smcp.SMCP:77
msgid ""
"Tool categories to exclude from loading. These entire categories will be "
"skipped during tool loading. Can be combined with tool_categories to "
"first select categories and then exclude specific ones."
msgstr "要排除加载的工具类别。这些整个类别将在工具加载过程中被跳过。可以与 tool_categories 配合使用，先选择类别，然后排除特定类别。"

#: 2994cd4605e44595b69b362150a22ec9 9e85bb5e77dc41a396ccea56e50d0d8d of
#: tooluniverse.smcp.SMCP:81
#, fuzzy
msgid "include_tools"
msgstr ""
"exclude_tool_types  \n"
"排除工具类型"

#: 773b5b9bb71d47ddbf081c9341095fa2 ca45d6806189403c98e479e167ba8a5e of
#: tooluniverse.smcp.SMCP:82
msgid ""
"Specific tool names to include. If provided, only these tools will be "
"loaded regardless of categories. Overrides category-based selection."
msgstr "如果提供了特定工具名称，则仅加载这些工具，而不考虑类别。这将覆盖基于类别的选择。"

#: 560a08681ebb4e92811b70ef74794bf6 5ead7ec18d274818869e4c86e6e76898 of
#: tooluniverse.smcp.SMCP:85
#, fuzzy
msgid "tools_file"
msgstr "工具_文件"

#: bcf62ce9f6c940c68a6ca2b6f6a21c8f ebee92853c944041930399e325319bcd of
#: tooluniverse.smcp.SMCP:86
msgid ""
"Path to a text file containing tool names to include (one per line). "
"Alternative to include_tools parameter. Comments (lines starting with #) "
"and empty lines are ignored."
msgstr "包含工具名称的文本文件路径（每行一个）。作为 include_tools 参数的替代选项。会忽略注释（以 # 开头的行）和空行。"

#: 38cd525f2ca048c19a0fcfe4210ae194 d262815039d14876bea8acd6d4afe82b of
#: tooluniverse.smcp.SMCP:90
#, fuzzy
msgid "tool_config_files"
msgstr "工具配置文件"

#: 2131466505dc4a95bb1bcb1ba2a755d5 718b193b049843fd9d042d36ed2e413d of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "dict of str, optional"
msgstr "dict of str，可选"

#: 12b17456ed4449e38af6dd2c65e2715b a10eec8543b64a8ebdedea83ac74e1de of
#: tooluniverse.smcp.SMCP:91
#, python-brace-format
msgid ""
"Additional tool configuration files to load. Format: {\"category_name\": "
"\"/path/to/config.json\"}. These files will be loaded in addition to the "
"default tool files."
msgstr ""
"额外的工具配置文件加载。格式：{\"category_name\": "
"\"/path/to/config.json\"}。这些文件将在默认工具文件的基础上加载。"

#: 00692b1d4fec417194ddd22559d22ea3 0ece26dffc0d437c9cbb6198e630c11a of
#: tooluniverse.smcp.SMCP:95
#, fuzzy
msgid "include_tool_types"
msgstr ""
"exclude_tool_types  \n"
"排除工具类型"

#: 27a9285876634fcaae5900b104905009 e4204526a16740f6b1f9efe14f50d73c of
#: tooluniverse.smcp.SMCP:96
msgid ""
"Specific tool types to include. If provided, only tools of these types "
"will be loaded. Available types include: 'OpenTarget', "
"'ToolFinderEmbedding', 'ToolFinderKeyword', 'ToolFinderLLM', etc."
msgstr ""
"指定要包含的工具类型。如果提供了此选项，则仅加载这些类型的工具。可用的类型包括：'OpenTarget'、'ToolFinderEmbedding'、'ToolFinderKeyword'、'ToolFinderLLM'"
" 等。"

#: 744a45ab6f884d818220ec2e170b3355 a2e85e09c007462fabeb754848c48143 of
#: tooluniverse.smcp.SMCP:100
#, fuzzy
msgid "exclude_tool_types"
msgstr ""
"exclude_tool_types  \n"
"排除工具类型"

#: b04fc010834a41a3b0019cfea74d95cf c6334225548b4b6bb88ea3092207ecce of
#: tooluniverse.smcp.SMCP:101
msgid ""
"Tool types to exclude from loading. These tool types will be skipped "
"during tool loading. Useful for excluding entire categories of tools "
"(e.g., all ToolFinder types or all OpenTarget tools)."
msgstr ""
"要排除加载的工具类型。这些工具类型将在工具加载过程中被跳过。此功能适用于排除整个类别的工具（例如，所有 ToolFinder 类型或所有 "
"OpenTarget 工具）。"

#: 7b4e4db555364e4ead237cc8292a3672 f177d18509a849f0af3b5bc527b47c1d of
#: tooluniverse.smcp.SMCP:105
#, fuzzy
msgid "toolspace"
msgstr "工具_文件"

#: 09a1d9f9b8c44a5ab2a05f7a61c0b880 1c7891e850584fb7abb72001785c313a of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "str or list of str, optional"
msgstr "纸质词典列表"

#: a3ff92d25c984a03bb92b2760f9a914c e9fb1b25b119428b9d0f78c5840b845b of
#: tooluniverse.smcp.SMCP:106
msgid ""
"ToolSpace configuration URI(s) to load. Can be a single URI string or a "
"list of URIs for loading multiple ToolSpace configurations. Supported "
"formats: - Local file: \"./config.yaml\" or \"/path/to/config.yaml\" - "
"HuggingFace: \"hf:username/repo\" or \"hf:username/repo/file.yaml\" - "
"HTTP URL: \"https://example.com/config.yaml\""
msgstr ""

#: 0f7a235cbbbd4da1bb77dbdbd7ff2881 88d33e69c4a0483eaa0d17a62d469af6 of
#: tooluniverse.smcp.SMCP:112
msgid ""
"When provided, ToolSpace configurations are loaded after tool "
"initialization, applying LLM settings, hooks, and tool selections from "
"the configuration files. Multiple toolspaces can be loaded sequentially, "
"with later configurations potentially overriding earlier ones."
msgstr ""

#: 28e9a6e32b4949b1ac4c7c246d7655ce da923779036f48de96ddb24bd11c8e47 of
#: tooluniverse.smcp.SMCP:117
msgid ""
"Example: toolspace=\"./my-workspace.yaml\" Example: "
"toolspace=[\"hf:community/bio-tools\", \"./custom-tools.yaml\"]"
msgstr ""

#: 469639ce1ddc473d84cf56d7b6703d1e ba5dda5589754934ac760455fc6ec10f of
#: tooluniverse.smcp.SMCP:120
#, fuzzy
msgid "auto_expose_tools"
msgstr "自动曝光工具"

#: 002c0ec519e145f887c8bf9a6b5bae4a 20a3f4c18a11470c88166fcc9187da22
#: 3cd5735452264d21923bc5ffbaa8b96b 7dbef5143b6f4dc7a3948a88a27cca5c
#: a4b36e84a46c4df0857fea45b7076c83 a7eb7c98292a4929923e22eedee8f27a of
#: tooluniverse.smcp.SMCP:-1 tooluniverse.smcp.create_smcp_server:-1
#, fuzzy
msgid "bool, default True"
msgstr "布尔值，默认值为 True"

#: 394336e4fe1645b6afc6a86d1d968d59 59421e26695e4a368b2f5febf6b91049 of
#: tooluniverse.smcp.SMCP:121
msgid ""
"Whether to automatically expose ToolUniverse tools as MCP tools. When "
"True, all loaded tools become available via the MCP interface with "
"automatic schema conversion and execution wrapping."
msgstr ""
"是否将 ToolUniverse 工具自动暴露为 MCP 工具。当设置为 True 时，所有加载的工具都会通过 MCP "
"接口可用，并自动进行模式转换和执行封装。"

#: 13daa477bb96435d8a41b1f323a76e78 79435ac661304cf28aa60c69b33650c1
#: a26c29a68ed744abbc008c30f23bc935 e648eabee24641599e32884a1f52555c of
#: tooluniverse.smcp.SMCP:125 tooluniverse.smcp.create_smcp_server:32
#, fuzzy
msgid "search_enabled"
msgstr ""
"search_enabled  \n"
"搜索_启用"

#: 20d95950fa6241aa90971b4170c95250 5a0d729c06624646a8140176df50a822 of
#: tooluniverse.smcp.SMCP:126
msgid ""
"Enable AI-powered tool search functionality via tools/find method. "
"Includes ToolFinderLLM (cost-optimized LLM-based), Tool_RAG (embedding-"
"based), and simple keyword search capabilities with intelligent fallback."
msgstr ""
"通过 tools/find 方法启用 AI 驱动的工具搜索功能。包括 ToolFinderLLM（基于 LLM "
"的成本优化方案）、Tool_RAG（基于嵌入技术），以及具有智能回退机制的简单关键词搜索功能。"

#: 3ac5aa6667fe4341b65af832bfb43ce0 d14c0ba0b28445d7baffa657e981ae8a of
#: tooluniverse.smcp.SMCP:130
#, fuzzy
msgid "max_workers"
msgstr "最大工作线程数"

#: 849e91abe85241bd9cfdc3af4b204707 e82cbbe45a38486db159e6ba669339d2 of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "int, default 5"
msgstr ":py:class:`列表`"

#: 3443353961714d95b6f15d91da2d2bf0 70969a51ae8044a0a1173ae4751feefd of
#: tooluniverse.smcp.SMCP:131
msgid ""
"Maximum number of concurrent worker threads for tool execution. Higher "
"values allow more parallel tool calls but use more resources. "
"Recommended: 5-20 depending on server capacity and expected load."
msgstr "用于工具执行的最大并发工作线程数。较高的值允许更多工具并行调用，但会占用更多资源。建议值：5-20，具体取决于服务器容量和预期负载。"

#: 7828ef2b044441d09a08f2e0e42209f4 d693123a59574006a10b48d2c0e041d3 of
#: tooluniverse.smcp.SMCP:135
#, fuzzy
msgid "hooks_enabled"
msgstr ""
"hooks_enabled  \n"
"挂钩启用"

#: 49f6ff92e47f4558829549a6b4ca3a6e b3a20ec031944a50a71e91df1e125188 of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "bool, default False"
msgstr "布尔值，默认值为 False"

#: 6e1de3293b3f4eadb5540f722ac13dd7 e149db5a25a84d08bd791a4b18a051db of
#: tooluniverse.smcp.SMCP:136
msgid ""
"Whether to enable output processing hooks for intelligent post-processing"
" of tool outputs. When True, hooks can automatically summarize long "
"outputs, save results to files, or apply other transformations."
msgstr "是否启用输出处理钩子以对工具输出进行智能后处理。启用时，钩子可以自动汇总较长的输出、将结果保存到文件中或应用其他转换。"

#: 629897018d7f4f9180e78a8b6baa6364 ad3baad142e74c07b470c4b5418dd4c9 of
#: tooluniverse.smcp.SMCP:140
#, fuzzy
msgid "hook_config"
msgstr ""
"hook_config\n"
"\n"
"上下文：文档"

#: 78754222d98e46eaae72c1acf44e7e8d 8001ed4c32484029ae0f5b127bf031d1 of
#: tooluniverse.smcp.SMCP:-1
#, fuzzy
msgid "dict, optional"
msgstr "字典，可选"

#: afef12a93d0a4f7b895e84cb2fdaf48d d253a31a519d4f1b9d9a147bdfd7b440 of
#: tooluniverse.smcp.SMCP:141
#, python-brace-format
msgid ""
"Custom hook configuration dictionary. If provided, overrides default hook"
" settings. Should contain 'hooks' list with hook definitions. Example: "
"{\"hooks\": [{\"name\": \"summarization_hook\", \"type\": "
"\"SummarizationHook\", ...}]}"
msgstr ""
"自定义钩子配置字典。如果提供，将覆盖默认钩子设置。应包含带有钩子定义的 \"hooks\" 列表。例如：{\"hooks\": "
"[{\"name\": \"summarization_hook\", \"type\": \"SummarizationHook\", "
"...}]}"

#: 4ab16075d91b4ca3817d698b06bb404f 7f3033cd7f144376bda866b75b17b707 of
#: tooluniverse.smcp.SMCP:145
#, fuzzy
msgid "hook_type"
msgstr "钩子类型"

#: 00165301560a4b6d92efb725e2f32e1a 153591c0fc5c4b8db286e234d76a8311 of
#: tooluniverse.smcp.SMCP:146
msgid ""
"Simple hook type selection. Can be 'SummarizationHook', 'FileSaveHook', "
"or a list of both. Provides an easy way to enable hooks without full "
"configuration. Takes precedence over hooks_enabled when specified."
msgstr ""
"简单的钩子类型选择。可以是“SummarizationHook”、“FileSaveHook”，或者两者的列表。提供了一种无需完整配置即可启用钩子的简便方法。当指定时，优先于"
" hooks_enabled。"

#: 01634a45a5f5457686687944bbde4611 24f98a374fb8487fb06cf897d414a376
#: 63eaf1a5503c4710a6f28e3ef7be9824 76781f2b802645598bd69df1d4a43096
#: 78d663dbd9374fb4b19211feadbcd8e8 86363d809be94573ab4d665bdf5cbb8c
#: d14322c0b4e94683b7f9cf08b17618dd eeab918cfaf34b3cac777528e1896daa of
#: tooluniverse.smcp.SMCP:150 tooluniverse.smcp.SMCP.add_custom_tool:27
#: tooluniverse.smcp.SMCP.run_simple:39 tooluniverse.smcp.create_smcp_server:37
#, fuzzy
msgid "**kwargs**"
msgstr "**kwargs（关键字参数）"

#: 6f8f4def53dd48608086a89ef4ccd9bd ac75ebd8f0a6407fa0102b5ed92a4492 of
#: tooluniverse.smcp.SMCP:151
msgid ""
"Additional arguments passed to the underlying FastMCP server instance. "
"Supports all FastMCP configuration options for advanced customization."
msgstr "传递给底层 FastMCP 服务器实例的附加参数。支持所有 FastMCP 配置选项以实现高级自定义。"

#: 851e5c507b9f4797936a3c593b1bb435 b4032549f02540a8baaa7ef4b748b2b1 of
#: tooluniverse.smcp.SMCP:155
#, fuzzy
msgid "Raises:"
msgstr "提升"

#: 6b2601d6b9d146489caccc4e960d135f d96be7e0d743442b9fb4672160942386 of
#: tooluniverse.smcp.SMCP:156
#, fuzzy
msgid "ImportError"
msgstr "导入错误"

#: 99be2dd7ac824e86bdf1b8a3e48e4344 d7a93a0b55be46088fc060457b65f36f of
#: tooluniverse.smcp.SMCP:157
msgid ""
"If FastMCP is not installed. FastMCP is a required dependency for SMCP. "
"Install with: pip install fastmcp"
msgstr "如果未安装 FastMCP。FastMCP 是 SMCP 的必要依赖项。请使用以下命令安装：`pip install fastmcp`"

#: 0d605b2b7b6f45b2a0044ea9849ca060 1e28e4e399034ee08422c8768a921bf1
#: 2471d0474c964ac399ff36d5534e6f8d 41ccf31c5dab4db29ecb50ecc379edc1
#: 90f656db43be44428e8777227a30e977 f9316ec39c914a89ab4164e19d971d6c of
#: tooluniverse.smcp.SMCP:161 tooluniverse.smcp.SMCP.add_custom_tool:112
#: tooluniverse.smcp.SMCP.close:72
msgid "Notes:"
msgstr ""
"注意事项：\n"
"\n"
"上下文：文档"

#: 4278958ee6d14c0d9c7b4535ab878c27 476a9509d4624a05aa2c7c92d631f7e1 of
#: tooluniverse.smcp.SMCP:162
#, fuzzy
msgid "SMCP automatically handles ToolUniverse tool loading and MCP conversion"
msgstr "SMCP 自动处理 ToolUniverse 工具加载和 MCP 转换"

#: 13c24fae03a84ea69d51c03fa58f45aa 36c7053f5db04f05a9568c4369cd5d59 of
#: tooluniverse.smcp.SMCP:163
#, fuzzy
msgid ""
"Tool search uses ToolFinderLLM (optimized for cost) when available, "
"gracefully falls back to simpler methods"
msgstr "工具搜索在可用时使用经过优化以降低成本的ToolFinderLLM，并优雅地回退到更简单的方法。"

#: 2c163ecb60a14c8597ddf48d2474008e 35bea180fd214d97800aed7666ab1c9f of
#: tooluniverse.smcp.SMCP:164
#, fuzzy
msgid "All tools support JSON argument passing for maximum flexibility"
msgstr "所有工具均支持通过JSON传递参数，以实现最大灵活性"

#: 913df83392aa4903ae5cb6bf8a234080 bdd2b1d62c4447b2a55fcfd89edae24e of
#: tooluniverse.smcp.SMCP:165
#, fuzzy
msgid "Server supports graceful shutdown and comprehensive resource cleanup"
msgstr "服务器支持优雅关闭和全面的资源清理"

#: 0ec0c50e755d4a89b3123b3d7797e220 a2b32b8f95b4469dbd9fa0302e8ff965 of
#: tooluniverse.smcp.SMCP:166
#, fuzzy
msgid ""
"Thread pool execution ensures non-blocking operation for concurrent "
"requests"
msgstr "线程池执行确保并发请求的非阻塞操作"

#: 47f6cfbd13bb4caba8cc65bd320d4789 956a81ff6946484a9eceb53f6086082c of
#: tooluniverse.smcp.SMCP:167
#, fuzzy
msgid "Built-in error handling provides informative debugging information"
msgstr "内置错误处理功能提供详细的调试信息"

#: b331c2e2fc06421b8382bd72ed38054a e96a12405d044c548cc5cac1dd98c364 of
#: tooluniverse.smcp.SMCP.add_custom_tool:1
msgid "Add a custom Python function as an MCP tool to the SMCP server."
msgstr "将自定义的 Python 函数作为 MCP 工具添加到 SMCP 服务器。"

#: 66cc8a4b1b4d444ea6a192d53f6ed05c e1bca48fcae742da951f658cc01e96f6 of
#: tooluniverse.smcp.SMCP.add_custom_tool:3
msgid ""
"This method provides a convenient way to extend SMCP functionality with "
"custom tools beyond those provided by ToolUniverse. Custom tools are "
"automatically integrated into the MCP interface and can be discovered and"
" used by clients alongside existing tools."
msgstr "此方法提供了一种便捷的方式，可通过自定义工具扩展SMCP功能，超越ToolUniverse所提供的工具范围。自定义工具会自动集成到MCP界面中，客户可以与现有工具一起发现并使用这些工具。"

#: 53d13be23d2d4ddf9db1b2520749e78b f10fe637088d4cd88f63f242922c7b72 of
#: tooluniverse.smcp.SMCP.add_custom_tool:-1
msgid "str"
msgstr ""

#: 01ef82f8cdd445b784e45bd168dae99b b5fdd3fbaf2d4847935465fa8e4bbc17 of
#: tooluniverse.smcp.SMCP.add_custom_tool:11
msgid ""
"Unique name for the tool in the MCP interface. Should be descriptive and "
"follow naming conventions (lowercase with underscores preferred). "
"Examples: \"analyze_protein_sequence\", \"custom_data_processor\""
msgstr "在MCP界面中为工具指定唯一名称。名称应具有描述性，并遵循命名规范（建议使用小写字母和下划线）。示例：\"analyze_protein_sequence\"、\"custom_data_processor\""

#: df10d57bb13e4fe58c070ca64689d188 e8d33c41aa6245129849486fed16facf of
#: tooluniverse.smcp.SMCP.add_custom_tool:15
msgid "function"
msgstr ""

#: 022c34531ed9454393414a6671451210 2b64a82c97274212ab187ba44fa897fc
#: 87e3450edec749d4845c6d9c3283a5ca 92b2134efbf5447aa19c17933551b505 of
#: tooluniverse.smcp.SMCP.add_custom_tool:-1
#: tooluniverse.smcp.SMCP.add_custom_tool:36
msgid "Callable"
msgstr ""

#: 152fa279989b45a38f7ecf3b02734b59 ce7966d87acf41579abada2d578033d0 of
#: tooluniverse.smcp.SMCP.add_custom_tool:16
msgid ""
"Python function to execute when the tool is called. The function: - Can "
"be synchronous or asynchronous - Should have proper type annotations for "
"parameters - Should include a comprehensive docstring - Will be "
"automatically wrapped for MCP compatibility"
msgstr ""
"Python 函数将在调用工具时执行。该函数：  \n"
"- 可以是同步的或异步的  \n"
"- 应为参数提供正确的类型注解  \n"
"- 应包含全面的文档字符串  \n"
"- 将自动包装以兼容 MCP"

#: a9230ae06e28425faace155e222e5d34 d3f228e264b24f5c984c555c9efe0b68 of
#: tooluniverse.smcp.SMCP.add_custom_tool:22
msgid "description"
msgstr ""

#: 0c7f45627dd2467a9e052b2c79afbe9a 173d6e46144b4be08a0be8f9b247719d of
#: tooluniverse.smcp.SMCP.add_custom_tool:23
msgid ""
"Human-readable description of the tool's functionality. If provided, this"
" will be set as the function's __doc__ attribute. If None, the function's"
" existing docstring will be used."
msgstr "工具功能的人类可读描述。如果提供，该描述将被设置为函数的 __doc__ 属性。如果未提供，则使用函数现有的文档字符串。"

#: 82d9bc9e4f0143968589ffc129423ea8 d72a3ee8aa91476bb9cadf478da1e9d6 of
#: tooluniverse.smcp.SMCP.add_custom_tool:28
msgid ""
"Additional FastMCP tool configuration options: - parameter_schema: Custom"
" JSON schema for parameters - return_schema: Schema for return values - "
"examples: Usage examples for the tool - tags: Categorization tags"
msgstr ""
"其他 FastMCP 工具配置选项：  \n"
"- parameter_schema：参数的自定义 JSON 架构  \n"
"- return_schema：返回值的架构  \n"
"- examples：工具的使用示例  \n"
"- tags：分类标签"

#: 75f2bc86d766466bb9485660a9045ece c33ce0bece224b1389225e6b1f3b9ac2
#: db1ec8b0295249618f322327546af36a f40478e8b5074180a71846a096835fb4 of
#: tooluniverse.smcp.SMCP.add_custom_tool:35
#: tooluniverse.smcp.create_smcp_server:46
#, fuzzy
msgid "Returns:"
msgstr "退货"

#: 28ac53f2bd1f4dc7853bbefaffe189df d8fec164b21c4641b5fb445591ebf241 of
#: tooluniverse.smcp.SMCP.add_custom_tool:37
#, fuzzy
msgid "The decorated function registered with FastMCP framework."
msgstr "使用FastMCP框架注册的装饰函数。"

#: 39a7f05f0a514d7f9f58e3039df7f076 9be212ad2f424cfe8a05085a0fa03b9d
#: d06ac171c8bd4a579ec35d9ceff9a031 d4756faf503a4615aaead88eefba447a of
#: tooluniverse.smcp.SMCP.add_custom_tool:40
#: tooluniverse.smcp.create_smcp_server:51
#, fuzzy
msgid "Usage Examples:"
msgstr ""
"用法示例：\n"
"\n"
"上下文：文档"

#: 5c8f5a4ca7e14576aebafd0393fc2bf4 d173f072306a4b31adab43ff4a4cf0e0 of
#: tooluniverse.smcp.SMCP.add_custom_tool:42
msgid ""
"Simple synchronous function: ```python def analyze_text(text: str, "
"max_length: int = 100) -> str:"
msgstr ""

#: 107f8190019d4848b4ded8655b9dcc71 503a4ae8cb784dc4a2bf24b81345d96e of
#: tooluniverse.smcp.SMCP.add_custom_tool:45
#, fuzzy
msgid ""
"'''Analyze text and return summary.''' return text[:max_length] + \"...\""
" if len(text) > max_length else text"
msgstr ""
"'''分析文本并返回摘要。''' return text[:max_length] + \"...\" if len(text) > "
"max_length else text"

#: 40ce21ffcb6640779cef88d8c3ceec93 40d9837aeac64468b89d9633e7e7ee36
#: 4a861ca4c1d340f1bf18ea21c239d43a 543ad31ea07b4585abc455acf0cc0815
#: 7481944650794b759ade0165f29a2e62 dce0a685c8da496ea322f7b2655279fb of
#: tooluniverse.smcp.SMCP.add_custom_tool:48
#: tooluniverse.smcp.SMCP.add_custom_tool:65
#: tooluniverse.smcp.SMCP.add_custom_tool:77
msgid "server.add_custom_tool("
msgstr ""

#: 654a7a88e39f4608ad808b72cd1e7ab7 ce304cf91fac48ee93829f64fdd1cb51 of
#: tooluniverse.smcp.SMCP.add_custom_tool:49
#, fuzzy
msgid ""
"name=\"text_analyzer\", function=analyze_text, description=\"Analyze and "
"summarize text content\""
msgstr "name=\"text_analyzer\", function=analyze_text, description=\"分析并总结文本内容\""

#: 59d89ef2d0014b009222ebd8f6606e90 b1d1992e94b74925badab561e110edbb of
#: tooluniverse.smcp.SMCP.add_custom_tool:55
#, fuzzy
msgid ""
"Asynchronous function with complex parameters: ```python async def "
"process_data("
msgstr "带有复杂参数的异步函数：```python async def process_data("

#: 2abe9afc528c4072839c9d2c6ef85d0d c0fabe80346c448cb3a0b13f1767590c of
#: tooluniverse.smcp.SMCP.add_custom_tool:58
#, fuzzy
msgid "data: List[Dict[str, Any]], processing_type: str = \"standard\""
msgstr "数据：List[Dict[str, Any]]，处理类型：str = \"standard\""

#: 966e8a49d1ec454c88bec154f6e741b2 ada556b3c62041be8b8d2467879d5320 of
#: tooluniverse.smcp.SMCP.add_custom_tool:60
msgid ") -> Dict[str, Any]:"
msgstr ""

#: b633a663b18141b78683343eb67a366e d7a2808d6e95484ca867db572416c6d7 of
#: tooluniverse.smcp.SMCP.add_custom_tool:61
#, fuzzy, python-brace-format
msgid ""
"'''Process scientific data with specified method.''' # Custom processing "
"logic here return {\"processed_items\": len(data), \"type\": "
"processing_type}"
msgstr ""
"'''使用指定方法处理科学数据。''' # 自定义处理逻辑在此 return {\"processed_items\": len(data), "
"\"type\": processing_type}"

#: d92272af60c94f9bbec76ee5ca73fbba e0ab8fac972449f9a8e6d9cc0d26f443 of
#: tooluniverse.smcp.SMCP.add_custom_tool:66
#, fuzzy
msgid "name=\"data_processor\", function=process_data"
msgstr "name=\"数据处理器\", function=处理数据"

#: 68cbb6ec47fa47d38d8b489e50b65257 7bceb26b98d446f7809a280b7ee4607c of
#: tooluniverse.smcp.SMCP.add_custom_tool:71
msgid ""
"Function with custom schema: ```python def calculate_score(values: "
"List[float]) -> float:"
msgstr ""

#: 4204f0aeb8004da68896d93c6f2ffe4f 61b6aba6704348568a74304265fb6a64 of
#: tooluniverse.smcp.SMCP.add_custom_tool:74
#, fuzzy
msgid ""
"'''Calculate composite score from values.''' return sum(values) / "
"len(values) if values else 0.0"
msgstr ""
"'''从数值计算综合得分。'''  \n"
"return sum(values) / len(values) if values else 0.0"

#: 1971a4a3a8f441d790e3743b30155d85 e902d161d72f4b8d9a7c13fcef6a91f7 of
#: tooluniverse.smcp.SMCP.add_custom_tool:78
#, fuzzy
msgid "name=\"score_calculator\", function=calculate_score, parameter_schema={"
msgstr "name=\"score_calculator\"，function=calculate_score，parameter_schema={"

#: 4445409d81fd45c4a8db31c94d099549 7fe30e6fff934621bedf72101b62c8f6 of
#: tooluniverse.smcp.SMCP.add_custom_tool:81
msgid "\"type\": \"object\", \"properties\": {"
msgstr ""

#: 16c2df24871847a7ab5963f4c389fba3 dd641b5255494069b2291b958f0821c2 of
#: tooluniverse.smcp.SMCP.add_custom_tool:83
msgid "\"values\": {"
msgstr ""

#: cf18161bf71b44998a5fdf0e3b3db504 f61998de22804d4a82b33bc3f5ea723c of
#: tooluniverse.smcp.SMCP.add_custom_tool:84
#, python-brace-format
msgid ""
"\"type\": \"array\", \"items\": {\"type\": \"number\"}, \"description\": "
"\"List of numeric values to process\""
msgstr ""
"type\": \"array\", \"items\": {\"type\": \"number\"}, \"description\": "
"\"待处理的数值列表"

#: 0c4de63ef5894e3bb37937a5a9b69d34 24ce05ad3d774ee38ab9bf259b4057c0
#: 4a7751c87e3443b3b7bb0db0a4d8197c 5b90a2b3f52c4798b96df5119efc68f3
#: 682d632c49eb4adfa7e7338620d0e425 of tooluniverse.mcp_tool_registry:23
#: tooluniverse.smcp.SMCP.add_custom_tool:87
#: tooluniverse.smcp.SMCP.add_custom_tool:90
msgid "}"
msgstr "请提供需要翻译的具体英文文本内容，我将为您翻译成符合要求的中文。"

#: 13c33e21feba45649fb288940bd29b5d 7cac2e234b684eb587a32d4ee4b7815e of
#: tooluniverse.smcp.SMCP.add_custom_tool:88
msgid "}, \"required\": [\"values\"]"
msgstr ""

#: 3c097ba3514a4a82b83bc8e53777a8c9 ce0ce9c757434125882d84bbf94b81a5 of
#: tooluniverse.smcp.SMCP.add_custom_tool:95
#, fuzzy
msgid "Integration with ToolUniverse:"
msgstr ""
"```python\n"
"tu = ToolUniverse()\n"
"```"

#: 282ac1383ade4afabb2934727f372d78 2bceced41a214871a048d567cbe2aaad of
#: tooluniverse.smcp.SMCP.add_custom_tool:96
msgid ""
"Custom tools work seamlessly alongside ToolUniverse tools: - Appear in "
"tool discovery searches - Follow same calling conventions - Include in "
"server diagnostics and listings - Support all MCP client interaction "
"patterns"
msgstr ""

#: 087ea36eae134fb18c1256c01997a070 e932b4c958af49a98a700c2c5aab3bd7 of
#: tooluniverse.smcp.SMCP.add_custom_tool:103
#, fuzzy
msgid "Best Practices:"
msgstr ":py:class:`列表`"

#: 45d13e1fa0f34b369b28a9a7dbde2e4e f778fa2d3bf24ea4bae4e73504b0d737 of
#: tooluniverse.smcp.SMCP.add_custom_tool:104
#, fuzzy
msgid "Use descriptive, unique tool names"
msgstr "使用描述性且独特的工具名称"

#: d63a6696995441e7905aa8ecf52d82dd f987f57bdd0841028b51165287f34c4e of
#: tooluniverse.smcp.SMCP.add_custom_tool:105
#, fuzzy
msgid "Include comprehensive docstrings"
msgstr "包含全面的文档字符串"

#: 3b6d68ed42f845cebe02dbae1b86e71c cb08ed17a6544b0cb86cc5fa5cd07c58 of
#: tooluniverse.smcp.SMCP.add_custom_tool:106
#, fuzzy
msgid "Add proper type annotations for parameters"
msgstr "为参数添加适当的类型注解"

#: 2c5bb16cf7c64005b8c9cd7b5be4c6ec d000fe42432245738f9ad1186fcb0dd5 of
#: tooluniverse.smcp.SMCP.add_custom_tool:107
#, fuzzy
msgid "Handle errors gracefully within the function"
msgstr "在函数内优雅地处理错误"

#: 08f691495f684a489e1e6b4aee6ca711 800cc4257f8c41ebb1e1e842d2556548 of
#: tooluniverse.smcp.SMCP.add_custom_tool:108
#, fuzzy
msgid "Consider async functions for I/O-bound operations"
msgstr "对于 I/O 密集型操作，请考虑使用异步函数"

#: 5385efb5365d4842b799c7d48c851848 e217c79083f24f3ca5ec985c52e90b58 of
#: tooluniverse.smcp.SMCP.add_custom_tool:109
#, fuzzy
msgid "Test tools thoroughly before deployment"
msgstr "在部署之前彻底测试工具"

#: c6f420863dc7477c8ecc6b87b29803cc c75d8eea83d04c0798b8c2c1ea51b52f of
#: tooluniverse.smcp.SMCP.add_custom_tool:113
#, fuzzy
msgid "Custom tools are registered immediately upon addition"
msgstr "自定义工具在添加后会立即注册"

#: 83c8507fe68140759540f34ce252e522 c5033379059d4e108776cbbc11ebe92e of
#: tooluniverse.smcp.SMCP.add_custom_tool:114
#, fuzzy
msgid "Tools can be added before or after server startup"
msgstr "工具可以在服务器启动之前或之后添加"

#: 805f721941b944b2b53d9c3d817d2d2b b29f1d15dfb44a1d9af9c882fd2f205d of
#: tooluniverse.smcp.SMCP.add_custom_tool:115
#, fuzzy
msgid "Function signature determines parameter schema automatically"
msgstr "函数签名自动确定参数模式"

#: e5445937421840b2b9d1503887984a4f eb156cc8dc2f44b8b37a0c2886a935c3 of
#: tooluniverse.smcp.SMCP.add_custom_tool:116
#, fuzzy
msgid "Custom tools support all FastMCP features and conventions"
msgstr "自定义工具支持所有FastMCP功能和约定"

#: 4822359029224b2997c760c98bcb4ce4 bf7715bb7bbe48f68078a2f1b925c351 of
#: tooluniverse.smcp.SMCP.close:1
msgid ""
"Perform comprehensive cleanup and resource management during server "
"shutdown."
msgstr "在服务器关闭期间执行全面清理和资源管理。"

#: 048c10418d704d2d9efedff4ba933984 23e09d311cb644d198656e3f0e75b0a3 of
#: tooluniverse.smcp.SMCP.close:3
msgid ""
"This method ensures graceful shutdown of the SMCP server by properly "
"cleaning up all resources, stopping background tasks, and releasing "
"system resources. It's designed to be safe to call multiple times and "
"handles errors gracefully."
msgstr "此方法通过正确清理所有资源、停止后台任务并释放系统资源，确保SMCP服务器的平稳关闭。该方法设计为可安全多次调用，并能够优雅地处理错误。"

#: 07fe4d494b9041c2b2a2dbda48aafe02 8128a8939e13400ea15ac076a19ea42f of
#: tooluniverse.smcp.SMCP.close:8
msgid "Cleanup Operations:"
msgstr ""
"清理操作：  \n"
"\n"
"上下文：文档"

#: 092f394d059141fd9dad1f59e5b629bc 7a502d1ab8f14600bb6d17a48580578b of
#: tooluniverse.smcp.SMCP.close:10
msgid ""
"**Thread Pool Shutdown:** - Gracefully stops the ThreadPoolExecutor used "
"for tool execution - Waits for currently running tasks to complete - "
"Prevents new tasks from being submitted - Times out after reasonable wait"
" period to prevent hanging"
msgstr ""
"**线程池关闭：**  \n"
"- 优雅地停止用于工具执行的ThreadPoolExecutor  \n"
"- 等待当前正在运行的任务完成  \n"
"- 阻止新任务的提交  \n"
"- 在合理的等待时间后超时以防止挂起"

#: a635667bb2c74b51bc3868d59a4790e1 c11f95022ce34ea880019818e6137fc7 of
#: tooluniverse.smcp.SMCP.close:16
msgid ""
"**Resource Cleanup:** - Releases any open file handles or network "
"connections - Clears internal caches and temporary data - Stops "
"background monitoring tasks - Frees memory allocated for tool "
"configurations"
msgstr ""
"**资源清理：**  \n"
"- 释放所有已打开的文件句柄或网络连接  \n"
"- 清除内部缓存和临时数据  \n"
"- 停止后台监控任务  \n"
"- 释放为工具配置分配的内存"

#: 89fda742ee994d75a5b40fc16d4a0322 8c7c9c91d0d442908c8b6afe2cd06b48 of
#: tooluniverse.smcp.SMCP.close:22
msgid ""
"**Error Handling:** - Continues cleanup even if individual operations "
"fail - Logs cleanup errors for debugging without raising exceptions - "
"Ensures critical resources are always released"
msgstr ""
"**错误处理：**  \n"
"- 即使单个操作失败，也会继续执行清理  \n"
"- 记录清理错误以供调试，但不会抛出异常  \n"
"- 确保始终释放关键资源"

#: 0e8d5c15f4a84a81a7d0d850f970570c 6ff925436e7240d2a6e2808e116cf5ba of
#: tooluniverse.smcp.SMCP.close:28
msgid "Usage Patterns:"
msgstr ""
"使用模式：\n"
"\n"
"上下文：文档"

#: 3e494ef1d1664efbb0de2355d5292894 ce445f732bd3433a93f8e68c34899782 of
#: tooluniverse.smcp.SMCP.close:30
msgid ""
"**Automatic Cleanup (Recommended):** ```python server = SMCP(\"My "
"Server\") try:"
msgstr "**自动清理（推荐）：** ```python server = SMCP(\"My Server\") try:"

#: 9e70d1bc65e841849f6f411e0a1bf445 cff2f807b6be48c288022e22fee04bba of
#: tooluniverse.smcp.SMCP.close:34
msgid "server.run_simple()  # Cleanup happens automatically on exit"
msgstr "server.run_simple()  # 退出时会自动进行清理"

#: 4ae2d832f2184e3b90d78d9048968717 620a8927e4bb4159b9a9aebf45180696 of
#: tooluniverse.smcp.SMCP.close:35
msgid "except KeyboardInterrupt:"
msgstr "除 KeyboardInterrupt:"

#: c540ccefaea5437da5ce58eee88a3116 db8546d45bc74d9f844e955b2c786195 of
#: tooluniverse.smcp.SMCP.close:36
msgid "pass  # run_simple() handles cleanup"
msgstr "pass  # run_simple() 负责清理"

#: 2cfac1b024fe48c29233072e50095733 477b616b7cd6458ea862d7de8189580e
#: 51781618e34e4be4b099978b4f753374 6dd53e08a719488f8d4837b36809741c
#: b9d0420ced164e719dfdfe5363528b0f of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:33
#: tooluniverse.smcp.SMCP.close:37 tooluniverse.smcp.SMCP.close:47
msgid "```"
msgstr ""
"```\n"
"上下文：文档\n"
"```"

#: 05c4317c14654bac9360fb57cd9c33ce 6dbb956752124cba8b7e5e4eb4a37440 of
#: tooluniverse.smcp.SMCP.close:39
msgid "**Manual Cleanup:** ```python server = SMCP(\"My Server\") try:"
msgstr "**手动清理：** ```python server = SMCP(\"My Server\") try:"

#: 233d289f1ccd46329ff40a013793ddfb b5639ee86455437a9db93555e6900023 of
#: tooluniverse.smcp.SMCP.close:43
msgid "# Custom server logic here pass"
msgstr ""
"# 在此处编写自定义服务器逻辑  \n"
"pass"

#: 0425ffe233b14858b9b42c5d77caf3b7 388c378eee704f878fe6d1c50d93f891 of
#: tooluniverse.smcp.SMCP.close:45
msgid "finally:"
msgstr "最后："

#: 4b477dd1f60d4c1bacc4e70ee12b479e e39088c93222433fbb7b94725c0532db of
#: tooluniverse.smcp.SMCP.close:46
msgid "await server.close()  # Explicit cleanup"
msgstr "await server.close()  # 显式清理"

#: 56d1475ed4904bfba32f1a94d89537be 70368a2e50e44595bb3c8d369ea21b92 of
#: tooluniverse.smcp.SMCP.close:49
msgid ""
"**Context Manager Pattern:** ```python async with SMCP(\"My Server\") as "
"server:"
msgstr ""
"**上下文管理器模式：**  \n"
"```python  \n"
"async with SMCP(\"My Server\") as server:  \n"
"```"

#: 8fef696e4c4f4534bd5f2ca8c2bbc6bc d985a051017247d5b7bd2d05f7695b64 of
#: tooluniverse.smcp.SMCP.close:52
msgid "# Server operations pass"
msgstr "# 服务器操作通过"

#: c0eedde5632a4ba2aa4a6782920e4832 f2c8579b79154319b764545a08e01628 of
#: tooluniverse.smcp.SMCP.close:54
msgid "# Cleanup happens automatically ```"
msgstr "# 清理会自动执行 ```"

#: dbba0d38f2964c20866a44efdff42aa2 eef482adf80e4cdebdc62abbf0c1544e of
#: tooluniverse.smcp.SMCP.close:58
msgid "Performance Considerations:"
msgstr "性能注意事项："

#: 98efdeec68db431182a3907efe2a2a2c caf728e41f2d4507b0b044258c5f1e6b of
#: tooluniverse.smcp.SMCP.close:59
msgid "Cleanup operations are typically fast (< 1 second)"
msgstr "清理操作通常非常快速（< 1 秒）"

#: 2a5c0a13b1294618af0f6f5c3120426c 5e57ac2f7e184c49b2f5f51b1aab409d of
#: tooluniverse.smcp.SMCP.close:60
msgid "Thread pool shutdown may take longer if tasks are running"
msgstr "如果任务正在运行，线程池关闭可能需要更长时间"

#: 0d5b73f32c1b4f51a81502972744b1e4 66c6ce05a4ab4deea6332f7f7db6e74d of
#: tooluniverse.smcp.SMCP.close:61
msgid "Network connections are closed immediately"
msgstr "网络连接会被立即关闭"

#: 3f47070228d14103a1477ea14b1c2141 74f949867dcf400cae590389dcb8dd58 of
#: tooluniverse.smcp.SMCP.close:62
msgid "Memory cleanup depends on garbage collection"
msgstr "内存清理依赖于垃圾回收"

#: 73fd0740c2fa41a18a086e6a48eaf70f a227b352733947b6b23f27f3537b6e41 of
#: tooluniverse.smcp.SMCP.close:65
msgid "Error Recovery:"
msgstr "错误恢复："

#: 0a843b2a35d94d6e8522d9d72f27410a 384f9abe01b44624a02a141979a24e76 of
#: tooluniverse.smcp.SMCP.close:66
msgid "Individual cleanup failures don't stop the overall process"
msgstr "单个清理失败不会中断整个流程"

#: 556f76e462bc43b8b03ea06645dd267b 56789dd69a6847eaaf0235be174dcb24 of
#: tooluniverse.smcp.SMCP.close:67
msgid "Critical errors are logged but don't raise exceptions"
msgstr "关键错误会被记录，但不会引发异常"

#: 6062220e9f454204a8d0ab4c2810861e c717ba1a3cce4df2b97ec426692e2116 of
#: tooluniverse.smcp.SMCP.close:68
msgid "Cleanup is idempotent - safe to call multiple times"
msgstr "清理操作是幂等的——可以安全地多次调用"

#: 3e5bb7c71966409b97d20ed080014417 644b88abe5334a75913b9d54cbf71964 of
#: tooluniverse.smcp.SMCP.close:69
msgid "System resources are guaranteed to be released"
msgstr "系统资源保证会被释放"

#: 4e44f94f56884780989f729f7828f934 ed2c98ab8c9948a9b28426b77adede8b of
#: tooluniverse.smcp.SMCP.close:73
msgid "This method is called automatically by run_simple() on shutdown"
msgstr "此方法在关闭时由 run_simple() 自动调用。"

#: 2dbbd5b8445b43f0a9a50d738e80cc40 7718dbf0108d4b4497f4fad343b522b0 of
#: tooluniverse.smcp.SMCP.close:74
msgid "Can be called manually for custom server lifecycle management"
msgstr "可手动调用以实现自定义服务器生命周期管理"

#: 1e75880940024548bc4724e10f8c3664 b42d88523cf14edbb7f3263ebba949a5 of
#: tooluniverse.smcp.SMCP.close:75
msgid "Async method to properly handle async resource cleanup"
msgstr "用于正确处理异步资源清理的异步方法"

#: c4ed00c0a97144deadd18900f17bc4c3 e5d9eb55501c4448ab5ce2ec63a20bf5 of
#: tooluniverse.smcp.SMCP.close:76
msgid "Safe to call even if server hasn't been fully initialized"
msgstr "即使服务器尚未完全初始化，也可以安全调用"

#: 9eed25fd87994b0abe1c092aff231250 c520ba41fe944799b178b300b655f7e7 of
#: tooluniverse.smcp.SMCP.run:1
msgid "Override run method to display ToolUniverse banner after FastMCP banner."
msgstr "重写运行方法以在FastMCP横幅之后显示ToolUniverse横幅。"

#: 1b45d8156792493a818e1c5758e1b277 64042743dfa643e48a3238f4d06d8299 of
#: tooluniverse.smcp.SMCP.run:3
msgid ""
"This method intercepts the parent's run() call to inject our custom "
"banner immediately after FastMCP displays its startup banner."
msgstr "此方法拦截父类的 run() 调用，以便在 FastMCP 显示其启动横幅后立即注入我们的自定义横幅。"

#: 5819a482f5254d61bcfe590ad293b6a6 82371c691e144a0da4edae79071ef9e5 of
#: tooluniverse.smcp.SMCP.run_simple:1
msgid "Start the SMCP server with simplified configuration and automatic setup."
msgstr "使用简化配置和自动设置启动SMCP服务器。"

#: 40eb4de8eea747668b8b4c1921b7d471 cb9b5db553b440ef95a628aa703dec56 of
#: tooluniverse.smcp.SMCP.run_simple:3
msgid ""
"This method provides a convenient way to launch the SMCP server with "
"sensible defaults for different deployment scenarios. It handles "
"transport configuration, logging setup, and graceful shutdown "
"automatically."
msgstr "此方法为不同的部署场景提供了一种便捷的方式来启动SMCP服务器，并设置合理的默认值。它会自动处理传输配置、日志设置以及优雅的关闭操作。"

#: 24a669cfa018432e9442bb8aa052b395 7c25f8897b9c40d18f185e38953b791b of
#: tooluniverse.smcp.SMCP.run_simple:9
msgid "transport"
msgstr ""

#: 484206fbd1f4436195e83d2dbe1ac078 ca8da67ae9594044b34cc2f389cee6b4 of
#: tooluniverse.smcp.SMCP.run_simple:-1
#, python-brace-format
msgid "{\"stdio\", \"http\", \"sse\"}, default \"http\""
msgstr ""

#: d76629eabd6d4f70a64c0554d6d9a30f ef47ae3f41d34471be0c020ce07b6e1c of
#: tooluniverse.smcp.SMCP.run_simple:10
msgid "Communication transport protocol:"
msgstr "通信传输协议："

#: 106a6026020b4943a4122858a19d2fc1 997d523649f1425b81033a92319c3d72 of
#: tooluniverse.smcp.SMCP.run_simple:12
msgid ""
"\"stdio\": Standard input/output communication * Best for: Command-line "
"tools, subprocess integration * Pros: Low overhead, simple integration * "
"Cons: Single client, no network access"
msgstr ""
"\"stdio\"：标准输入/输出通信  \n"
"* 最适合：命令行工具、子进程集成  \n"
"* 优点：开销低，集成简单  \n"
"* 缺点：单客户端，不支持网络访问"

#: 30a77dcd79254900b778816d74e7d171 a3e084e3752b46cb850a708dd957fdcc of
#: tooluniverse.smcp.SMCP.run_simple:17
msgid ""
"\"http\": HTTP-based communication (streamable-http) * Best for: Web "
"applications, REST API integration * Pros: Wide compatibility, stateless,"
" scalable * Cons: Higher overhead than stdio"
msgstr ""
"\"http\"：基于HTTP的通信（streamable-http）  \n"
"* 最适用于：Web应用程序、REST API集成  \n"
"* 优点：兼容性广、无状态、可扩展  \n"
"* 缺点：相比stdio开销更高"

#: 32e8fcd6b1734f358b7f73cec9041543 89c603c65177407e8cc0af45f2512097 of
#: tooluniverse.smcp.SMCP.run_simple:22
msgid ""
"\"sse\": Server-Sent Events over HTTP * Best for: Real-time applications,"
" streaming responses * Pros: Real-time communication, web-compatible * "
"Cons: Browser limitations, more complex"
msgstr ""
"\"sse\": 基于HTTP的服务器发送事件  \n"
"* 最适用于：实时应用程序，流式响应  \n"
"* 优点：实时通信，兼容Web  \n"
"* 缺点：浏览器限制，较复杂"

#: 4ba61c15d8a441fba716db9a70bc7d44 e17489fbd74d44bab52dbe9425a00f89 of
#: tooluniverse.smcp.SMCP.run_simple:27
msgid "host"
msgstr ""

#: a020dd836d4e40a1b589f364a86f1977 c4b39c83f76042e99cf5416ac3202b4d of
#: tooluniverse.smcp.SMCP.run_simple:-1
msgid "str, default \"0.0.0.0\""
msgstr ""

#: 2067f605586f48de87e74ae4c57951f6 dce63fb012a045f4a380712b80db5329 of
#: tooluniverse.smcp.SMCP.run_simple:28
msgid ""
"Server bind address for HTTP/SSE transports: - \"0.0.0.0\": Listen on all"
" network interfaces (default) - \"127.0.0.1\": localhost only (more "
"secure) - Specific IP: Bind to particular interface"
msgstr ""
"HTTP/SSE 传输的服务器绑定地址：  \n"
"- \"0.0.0.0\"：监听所有网络接口（默认）  \n"
"- \"127.0.0.1\"：仅限本地主机（更安全）  \n"
"- 指定 IP：绑定到特定接口"

#: cfa4dfc48b9141859636475aec3124de ec25e0a57d57488cb867f9061543dcb0 of
#: tooluniverse.smcp.SMCP.run_simple:33
msgid "port"
msgstr ""

#: 5b6f937264634b449ebb09dd0748a5ac 8a2ef7a987ba44a889b704ea6bfc512b of
#: tooluniverse.smcp.SMCP.run_simple:-1
msgid "int, default 7000"
msgstr ""

#: 40c477e2d9414bd39ab45ddf16babfe6 691c0a9397cd4812b46506925b67f743 of
#: tooluniverse.smcp.SMCP.run_simple:34
msgid ""
"Server port for HTTP/SSE transports. Choose ports: - 7000-7999: "
"Recommended range for SMCP servers - Above 1024: No root privileges "
"required - Check availability: Ensure port isn't already in use"
msgstr ""
"用于HTTP/SSE传输的服务器端口。请选择以下端口范围：  \n"
"- 7000-7999：推荐用于SMCP服务器的端口范围  \n"
"- 1024以上：无需root权限  \n"
"- 检查可用性：确保端口未被占用"

#: 51768328fad64768893af113ad279bb6 913f1e3d80af44cda417748bd6c9a561 of
#: tooluniverse.smcp.SMCP.run_simple:40
msgid ""
"Additional arguments passed to FastMCP's run() method: - debug (bool): "
"Enable debug logging - access_log (bool): Log client requests - workers "
"(int): Number of worker processes (HTTP only)"
msgstr ""
"传递给 FastMCP 的 run() 方法的附加参数：  \n"
"- debug (bool)：启用调试日志  \n"
"- access_log (bool)：记录客户端请求日志  \n"
"- workers (int)：工作进程数量（仅适用于 HTTP）"

#: 64510028f30b4a848f1c5c767afcec10 cb52710426b2429eb20b3345f6c3438d of
#: tooluniverse.smcp.SMCP.run_simple:46
#, fuzzy
msgid "Server Startup Process:"
msgstr "服务器启动过程："

#: 813333736edc47d7bd33f8baa965eb34 d917ea663deb4fffb8676d14f2e2e7d1 of
#: tooluniverse.smcp.SMCP.run_simple:47
msgid "**Initialization Summary**: Displays server configuration and capabilities"
msgstr ""

#: 20980c2b22a54f71b0a9bac1b1df60a7 340ca2ad7f0d4e6aa90db97853fcbb11 of
#: tooluniverse.smcp.SMCP.run_simple:48
msgid "**Transport Setup**: Configures selected communication method"
msgstr ""

#: 0c6054233b1f424ba0c644cced4338da cb7f840578bc414a95048d3e676c2462 of
#: tooluniverse.smcp.SMCP.run_simple:49
msgid "**Service Start**: Begins listening for client connections"
msgstr ""

#: 9f4d9452ae3c4c93b8df080dc1f7c296 f8a9c7974f72473da1fcf2356e0223f8 of
#: tooluniverse.smcp.SMCP.run_simple:50
msgid "**Graceful Shutdown**: Handles interrupts and cleanup"
msgstr ""

#: 2216f2b4793c4e00b85e57dbe99a941d f37c6ae729164e2ebb0ed43f5aed0f4a of
#: tooluniverse.smcp.SMCP.run_simple:53
msgid "Deployment Scenarios:"
msgstr ""

#: 2ac59488a14e4a1bac20b72a43b95162 b02f93fa23184600ad37103ce125da25 of
#: tooluniverse.smcp.SMCP.run_simple:55
msgid ""
"Development & Testing: ```python server = SMCP(name=\"Dev Server\") "
"server.run_simple(transport=\"stdio\")  # For CLI testing ```"
msgstr ""

#: a4d962a9fa214fa893324ac84366948e fc6d9f3f725146afaef6adfbd4821ac3 of
#: tooluniverse.smcp.SMCP.run_simple:61
msgid ""
"Local Web Service: ```python server = SMCP(name=\"Local API\") "
"server.run_simple(transport=\"http\", host=\"127.0.0.1\", port=8000) ```"
msgstr ""

#: 05ba1005223a40e1a39db1293724b675 6ef301d94299465e96a7604a91f58d51 of
#: tooluniverse.smcp.SMCP.run_simple:67
msgid "Production Service: ```python server = SMCP("
msgstr ""

#: 05c194dacaf7411d9cdee59abafb1d0e bebe32c0a1a949558c303d0c9bf8957a of
#: tooluniverse.smcp.SMCP.run_simple:70
msgid ""
"name=\"Production SMCP\", tool_categories=[\"ChEMBL\", \"uniprot\", "
"\"opentarget\"], max_workers=20"
msgstr ""
"name=\"生产 SMCP\", tool_categories=[\"ChEMBL\", \"uniprot\", "
"\"opentarget\"], max_workers=20"

#: aa72c06255d947218168fa66acbcd831 d10c419a95e74beea0dd3c8d7fb6782f
#: d8c25d7c40ed4db281a7ec5fbc509ac8 of tooluniverse.smcp:24
#: tooluniverse.smcp.SMCP.run_simple:73
#, fuzzy
msgid ") server.run_simple("
msgstr ":py:class:`列表`"

#: 42a7ccbad0864132b4ed04eab37e26a5 95ab956d52c948a09d2c6c1d59d358d4 of
#: tooluniverse.smcp.SMCP.run_simple:75
msgid "transport=\"http\", host=\"0.0.0.0\", port=7000, workers=4"
msgstr "transport=\"http\"，host=\"0.0.0.0\"，port=7000，workers=4"

#: 579cdff5dd664eb7b8103928f1a085fc c85343a58f34495a9fe4090e8e07fe87 of
#: tooluniverse.smcp.SMCP.run_simple:82
msgid ""
"Real-time Applications: ```python server = SMCP(name=\"Streaming API\") "
"server.run_simple(transport=\"sse\", port=7001) ```"
msgstr ""

#: 34573890fffc47a4be934bdfc213ae84 d1155d0049c94110b2348d1d6e70b355 of
#: tooluniverse.smcp.SMCP.run_simple:89
msgid "Error Handling:"
msgstr ""
"错误处理：\n"
"\n"
"上下文：文档"

#: 1cf3d71744ce4c708b1e7c1bc164e888 33ab12905d43429793008794d3d66532 of
#: tooluniverse.smcp.SMCP.run_simple:90
msgid "**KeyboardInterrupt**: Graceful shutdown on Ctrl+C"
msgstr ""

#: 6395ef36d1084551bdc9e6d3352d713d 9089cc8bfc2546b1a32b60557abf1224 of
#: tooluniverse.smcp.SMCP.run_simple:91
msgid "**Port in Use**: Clear error message with suggestions"
msgstr ""

#: 3012e5f02b614caab9e4b63d0e38d06f 6342f66023a943f0b0eb502e88c4446c of
#: tooluniverse.smcp.SMCP.run_simple:92
msgid "**Transport Errors**: Detailed debugging information"
msgstr ""

#: 2c6e6994f038400cbf0d93bce0b890f4 a25b060f08384381af53ea9223713605 of
#: tooluniverse.smcp.SMCP.run_simple:93
msgid "**Cleanup**: Automatic resource cleanup on exit"
msgstr ""

#: c4173d3f7a4a432da7c008796c7e19d1 fd6df23cf96343658bd1bc3e9e5e21a4 of
#: tooluniverse.smcp.SMCP.run_simple:96
#, fuzzy
msgid "Logging Output:"
msgstr "日志输出："

#: 664682b1fc20459981c82e1fa770d358 6e3fe453357e4c8289ce55e841c3d3b9 of
#: tooluniverse.smcp.SMCP.run_simple:97
msgid ""
"Provides informative startup messages: ``` 🚀 Starting SMCP server 'My "
"Server'... 📊 Loaded 356 tools from ToolUniverse 🔍 Search enabled: True 🌐 "
"Server running on http://0.0.0.0:7000 ```"
msgstr ""

#: 1a7f0c0a336f4c3b96769a95b4b2fc2e b30ec769f64e40308047594608835a25 of
#: tooluniverse.smcp.SMCP.run_simple:106
msgid "Security Considerations:"
msgstr "安全注意事项："

#: 79786cc72acd470995e16a4cebedf84e fc22ee1b4f4449c2a8ded10cf1be9eb8 of
#: tooluniverse.smcp.SMCP.run_simple:107
msgid "Use host=\"127.0.0.1\" for local-only access"
msgstr ""

#: 59537e01b5864b098735f767a52d487c 782ca55a188a45fea3e8c0f604d33b87 of
#: tooluniverse.smcp.SMCP.run_simple:108
msgid "Configure firewall rules for production deployment"
msgstr ""

#: 22c99111f5424a14bba54fd6bcca2690 68ec069c91254a1486949f6010a525d7 of
#: tooluniverse.smcp.SMCP.run_simple:109
msgid "Consider HTTPS termination with reverse proxy"
msgstr ""

#: 1f59fa47bb6d476b832e460ed060a84c 7f25c1d8b20744ad9a98976bf2b93d41 of
#: tooluniverse.smcp.SMCP.run_simple:110
msgid "Validate all client inputs through MCP protocol"
msgstr ""

#: 6ede4fe9d3ea462cbd2a4707f2d66ada b311997adf684c4b932116413339de1b of
#: tooluniverse.smcp.SMCP.run_simple:113
#, fuzzy
msgid "Performance Notes:"
msgstr "性能注意事项："

#: 08670729c3f047f3b551995e45b07885 0ae4856bffd44d95a0cd33b3607c2d5e of
#: tooluniverse.smcp.SMCP.run_simple:114
msgid "HTTP transport supports multiple concurrent clients"
msgstr ""

#: 2a87cc1b568f40cd8948459724036edf 748ed1ce081346569cb96a5cb1fdbc68 of
#: tooluniverse.smcp.SMCP.run_simple:115
msgid "stdio transport is single-client but lower latency"
msgstr ""

#: b2423113ea704721bf295831b45468c2 f60a2b48565640a5a451c4f775df75c4 of
#: tooluniverse.smcp.SMCP.run_simple:116
msgid "SSE transport enables real-time bidirectional communication"
msgstr ""

#: b0afd8a86ace41f0b14fc2cbf0e2ae45 cfa64d6dd876420786ae9f66900d3495 of
#: tooluniverse.smcp.SMCP.run_simple:117
#, fuzzy
msgid "Thread pool size affects concurrent tool execution capacity"
msgstr "用于并发工具执行的可配置线程池"

#: 55c9147ddf434161b0ecf9b8dab1566a e81716c3772f41b4a5131a640cf18a5b of
#: tooluniverse.smcp.create_smcp_server:1
msgid "Create a configured SMCP server with common defaults and best practices."
msgstr "创建一个配置了常用默认值和最佳实践的SMCP服务器。"

#: 2ffdb8cfe62f4ec7994c5a11df6534d5 5611222db635476086bb1cc034bf88c7 of
#: tooluniverse.smcp.create_smcp_server:3
msgid ""
"This convenience function simplifies SMCP server creation by providing "
"sensible defaults for common use cases while still allowing full "
"customization through additional parameters."
msgstr "此便捷函数通过提供适用于常见用例的合理默认值简化了SMCP服务器的创建，同时仍然允许通过附加参数进行完全自定义。"

#: 434ae7510e6c4aa3814f5854c7f26c3a 7b9be116d557455db3e544ff22329759 of
#: tooluniverse.smcp.create_smcp_server:-1
msgid "str, default \"SMCP Server\""
msgstr ""

#: 85f6f7583f464150b88b68e86c315166 e30b93f945854320b203170d60f07f90 of
#: tooluniverse.smcp.create_smcp_server:10
msgid ""
"Human-readable server name used in logs and server identification. Choose"
" descriptive names like: - \"Scientific Research API\" - \"Drug Discovery"
" Server\" - \"Proteomics Analysis Service\""
msgstr ""
"用于日志记录和服务器标识的人类可读服务器名称。请选择具有描述性的名称，例如：  \n"
"- \"科学研究 API\"  \n"
"- \"药物发现服务器\"  \n"
"- \"蛋白质组学分析服务\""

#: 18b99fed05d347db99a6436f101fa067 f8a319f79867468683de56d2a6ba6a85 of
#: tooluniverse.smcp.create_smcp_server:17
msgid ""
"Specific ToolUniverse categories to load. If None, loads all available "
"tools (350+ tools). Common category combinations:"
msgstr "要加载的特定 ToolUniverse 分类。如果为 None，则加载所有可用工具（350+ 工具）。常见的分类组合："

#: 860bfc88bbbf4aa3b59d96c75fd64354 e2264b69058a4cf38ada7b15bbbe3886 of
#: tooluniverse.smcp.create_smcp_server:20
msgid ""
"Scientific Research: [\"ChEMBL\", \"uniprot\", \"opentarget\", "
"\"pubchem\", \"hpa\"]"
msgstr "科学研究：[\"ChEMBL\", \"uniprot\", \"opentarget\", \"pubchem\", \"hpa\"]"

#: 3073ae05089f4c809b81f5d69ff69545 5d278e8614934785938b3c6046a66b64 of
#: tooluniverse.smcp.create_smcp_server:23
msgid ""
"Drug Discovery: [\"ChEMBL\", \"fda_drug_label\", \"clinical_trials\", "
"\"pubchem\"]"
msgstr "药物发现：[\"ChEMBL\", \"fda_drug_label\", \"clinical_trials\", \"pubchem\"]"

#: 9a25b253940b4641b97cf78b1e94053c ee264424ace54138adf9044effe8bc01 of
#: tooluniverse.smcp.create_smcp_server:26
msgid ""
"Literature Analysis: [\"EuropePMC\", \"semantic_scholar\", \"pubtator\", "
"\"agents\"]"
msgstr "文献分析：[\"EuropePMC\", \"semantic_scholar\", \"pubtator\", \"agents\"]"

#: 1e3af4d3b3624a89b16e578aa48c62ca 60494ba1aa5d4a17b75dcd14b7f0727e of
#: tooluniverse.smcp.create_smcp_server:29
msgid "Minimal Setup: [\"tool_finder_llm\", \"special_tools\"]"
msgstr "最小设置：[\"tool_finder_llm\", \"special_tools\"]"

#: 464dd5a84f6b4a70b198c03f5d3ad484 6d7914ee4e11487594368bb97ffb5171 of
#: tooluniverse.smcp.create_smcp_server:33
msgid ""
"Enable AI-powered tool discovery via tools/find method. Recommended to "
"keep enabled unless you have specific performance requirements or want to"
" minimize dependencies."
msgstr "通过 tools/find 方法启用 AI 驱动的工具发现功能。建议保持启用状态，除非您有特定的性能要求或希望尽量减少依赖项。"

#: 8238ef4ab0584278b2036fb2ea6ed3c4 f1c6410d194a4011865a0951792374a7 of
#: tooluniverse.smcp.create_smcp_server:38
msgid "Additional SMCP configuration options:"
msgstr "其他 SMCP 配置选项："

#: 33cd744f86e24c9abc3126b35ffc8824 74802a2312a2440c8d61d5eb5fb53a5a of
#: tooluniverse.smcp.create_smcp_server:40
msgid "tooluniverse_config: Pre-configured ToolUniverse instance"
msgstr "tooluniverse_config：预配置的 ToolUniverse 实例"

#: 81b0e86c5eac4338ae9fbf7ff9ef7cc6 f140e943190f4158a66d08cedecf0e55 of
#: tooluniverse.smcp.create_smcp_server:41
msgid "auto_expose_tools (bool, default True): Auto-expose ToolUniverse tools"
msgstr "auto_expose_tools（布尔值，默认值为 True）：自动公开 ToolUniverse 工具"

#: 602ec5a3891e4e18a1cb94131e492b3f 9aa6e9e407da4239a1fc38dacd8f4a46 of
#: tooluniverse.smcp.create_smcp_server:42
msgid "max_workers (int, default 5): Thread pool size for tool execution"
msgstr "max_workers（整数，默认值为 5）：用于工具执行的线程池大小"

#: dee376409fa641ffb5b8cc9d6392055a f89fa19662904be886dd5e3d197e9a00 of
#: tooluniverse.smcp.create_smcp_server:43
msgid "Any FastMCP server options (debug, logging, etc.)"
msgstr "任何 FastMCP 服务器选项（调试、日志记录等）"

#: 1b5ec70a0eac4150842c369f8596617e 598a08073af142d2894a694dbb19e706 of
#: tooluniverse.smcp.create_smcp_server:47
msgid "SMCP"
msgstr ""

#: 0684aedb114b411f9bdff431ad56d576 194a0b09401c495698a8f896d55d2891 of
#: tooluniverse.smcp.create_smcp_server:48
#, fuzzy
msgid "Fully configured SMCP server instance ready to run."
msgstr "完全配置的SMCP服务器实例，已准备好运行。"

#: 0d75021ac72e4866ad260111e3277619 7dc748ee7b6f43c49bfe7df46f9ae7c9 of
#: tooluniverse.smcp.create_smcp_server:53
msgid ""
"Quick Start (all tools): ```python server = create_smcp_server(\"Research"
" Server\") server.run_simple() ```"
msgstr ""

#: 3eef84bc563b46c49ebe901078ada13c 7a385b6ffdf047f2866429ccf274d554 of
#: tooluniverse.smcp.create_smcp_server:59
msgid "Focused Server (specific domains): ```python server = create_smcp_server("
msgstr ""

#: 45bb2dd5bf84429ebb9543c402902339 aa6c9940b4e94076b751a3b99eb9cbf0 of
#: tooluniverse.smcp.create_smcp_server:62
#, fuzzy
msgid ""
"name=\"Drug Discovery API\", tool_categories=[\"ChEMBL\", "
"\"fda_drug_label\", \"clinical_trials\"], max_workers=10"
msgstr ""
"name=\"药物发现API\", tool_categories=[\"ChEMBL\", \"fda药品标签\", \"临床试验\"], "
"max_workers=10"

#: 36a5dcdb96714390b6eead7207aa3a82 f9d56dff5fc3421ebeb83ead7cb1a9bf of
#: tooluniverse.smcp.create_smcp_server:65
#, fuzzy
msgid ") server.run_simple(port=8000) ```"
msgstr "``` ) server.run_simple(port=8000) ```"

#: 2f2c5ec30ebf4e8cb92f48a02801d141 77717b4f33ab4b52927dbf757fd4d39e of
#: tooluniverse.smcp.create_smcp_server:69
msgid "Custom Configuration: ```python server = create_smcp_server("
msgstr ""

#: ebcaaab3df794537a269dc19ef6e426a f25d51e54528408bbf9c6017c95e4317 of
#: tooluniverse.smcp.create_smcp_server:72
#, fuzzy
msgid ""
"name=\"High-Performance Server\", search_enabled=True, max_workers=20, "
"debug=True"
msgstr "name=\"高性能服务器\", search_enabled=True, max_workers=20, debug=True"

#: 088fedfa921e46888caa4efcb80b7229 77d8d4ccf37f4679bcb7486e1c410ad1 of
#: tooluniverse.smcp.create_smcp_server:76
#, fuzzy
msgid ") server.run_simple(transport=\"http\", host=\"0.0.0.0\", port=7000) ```"
msgstr "```server.run_simple(transport=\"http\", host=\"0.0.0.0\", port=7000)```"

#: 820831e6d02c4227b7d4c46afc239489 f68d9be9ea8a401498d617f2b68d0895 of
#: tooluniverse.smcp.create_smcp_server:80
msgid ""
"Pre-configured ToolUniverse: ```python tu = ToolUniverse() "
"tu.load_tools(tool_type=[\"uniprot\", \"ChEMBL\"]) server = "
"create_smcp_server("
msgstr ""

#: 74f97d60263c4646bfd25a4e759efeba ff144138431e49caa9ffeae7177452b5 of
#: tooluniverse.smcp.create_smcp_server:85
#, fuzzy
msgid "name=\"Protein-Drug Server\", tooluniverse_config=tu, search_enabled=True"
msgstr "name=\"蛋白质-药物服务器\", tooluniverse_config=tu, search_enabled=True"

#: 2a28efeb393b4f1aa2eaff9f8f73f2fa 2a8ca96c85104859aa196b85858c050f of
#: tooluniverse.smcp.create_smcp_server:92
#, fuzzy
msgid "Benefits of Using This Function:"
msgstr "使用此功能的优势："

#: 153901fcf7f74e049f9165d461bfaede 2d081b2a211748129ab77c96d2174bab of
#: tooluniverse.smcp.create_smcp_server:94
#, fuzzy
msgid "**Simplified Setup**: Reduces boilerplate code for common configurations"
msgstr "**简化设置**：减少常见配置的样板代码"

#: 911d17048218422abb268c590a362fce fccb5ff213ce4bb3a1852907667c316c of
#: tooluniverse.smcp.create_smcp_server:95
#, fuzzy
msgid "**Best Practices**: Applies recommended settings automatically"
msgstr "**最佳实践**：自动应用推荐设置"

#: 333ace2cfe1644ccb8e4638d1e3189f6 394fb44edc114461b7a6304d2357833b of
#: tooluniverse.smcp.create_smcp_server:96
#, fuzzy
msgid "**Consistent Naming**: Encourages good server naming conventions"
msgstr "**一致性命名**：鼓励采用良好的服务器命名规范"

#: 61accd32315c4a15a46e68159379630c bfe15acbe105407f8a821841e41168d2 of
#: tooluniverse.smcp.create_smcp_server:97
#, fuzzy
msgid "**Future-Proof**: Will include new recommended defaults in future versions"
msgstr "**面向未来**：将在未来版本中包含新的推荐默认设置"

#: e887cacd8e1d42ec9fa4ae7dc961bc3a ee1b3161a2224d748ba994a3b0c41e1a of
#: tooluniverse.smcp.create_smcp_server:98
#, fuzzy
msgid "**Documentation**: Provides clear examples and guidance"
msgstr "**文档**：提供清晰的示例和指导"

#: 28a3dfff1649440d8fc12f8cff73c888 838251984b654e8495ffedec6adc6d02 of
#: tooluniverse.smcp.create_smcp_server:101
#, fuzzy
msgid "Equivalent Manual Configuration:"
msgstr "等效手动配置："

#: 87b90d159f4d45d79f3fffa800e2c24f c1d1b05106a64d62bc77f778d0411e37 of
#: tooluniverse.smcp.create_smcp_server:102
#, fuzzy
msgid "This function is equivalent to: ```python server = SMCP("
msgstr "此函数等同于：```python server = SMCP("

#: 0fb5bf6b6b3445daa8888d9ec4cce6bd 8fe2579abe0e4cd692d6ec7a79472192 of
#: tooluniverse.smcp.create_smcp_server:105
#, fuzzy
msgid ""
"name=name, tool_categories=tool_categories, "
"search_enabled=search_enabled, auto_expose_tools=True, max_workers=5, "
"**kwargs"
msgstr ""
"name=名称, tool_categories=工具类别, search_enabled=启用搜索, "
"auto_expose_tools=自动公开工具, max_workers=5, **kwargs"

#: 18ee42f381b8416ba3069f280262c491 2150b58e0296474f97f693984d32d914 of
#: tooluniverse.smcp.create_smcp_server:115
#, fuzzy
msgid "When to Use Manual Configuration:"
msgstr "何时使用手动配置："

#: 041f5776258a41d28908d0213b547266 4386de98c65b442a95e65aaab6b0229b of
#: tooluniverse.smcp.create_smcp_server:116
#, fuzzy
msgid "Need precise control over all initialization parameters"
msgstr "需要精确控制所有初始化参数"

#: 4a74f53f255d4cce8e7dbd135f618e6c 4f65797c935349e6b17d6fd3fd4aa067 of
#: tooluniverse.smcp.create_smcp_server:117
#, fuzzy
msgid "Using custom ToolUniverse configurations"
msgstr "使用自定义的 ToolUniverse 配置"

#: 51eb267d5a634fe0adfcb31e7e0909bd 55d869d307834a3ea4bb394bfbad5650 of
#: tooluniverse.smcp.create_smcp_server:118
#, fuzzy
msgid "Implementing custom MCP methods or tools"
msgstr "实施自定义MCP方法或工具"

#: 4d95c3232cdd43c0905dd16e28ef8cda 6d3d7fef812b46b187afc7afb9998d69 of
#: tooluniverse.smcp.create_smcp_server:119
#, fuzzy
msgid "Advanced deployment scenarios with specific requirements"
msgstr "具有特定需求的高级部署场景"

#: a86b5fc7c6b543319b6cfd4e621d1843 baa6c04049b84cf5a3d033152b54f68f of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool:1
msgid ""
"A tool for interacting with the USPTO Open Data Portal API to search for "
"and retrieve patent information. The run method dynamically constructs "
"API requests based on the provided tool configuration."
msgstr "用于与USPTO开放数据门户API交互的工具，可用于搜索和检索专利信息。运行方法会根据提供的工具配置动态构建API请求。"

#: 5aae330681f34b1b88a87ec42752525e d3f9c89b885d4e0886e1b6c85b786306 of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.__init__:1
msgid "Initializes the USPTOOpenDataPortalTool."
msgstr "初始化 USPTOOpenDataPortalTool。"

#: 093b85e114de493ca13b39274ecd9b67 2ba21aca6e974e6389c01ddca5b731a6 of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.__init__:3
msgid "The configuration for the specific tool being run."
msgstr "正在运行的特定工具的配置。"

#: 1612706d555e42e2bef9ebf8ba3f2549 5701e73ab941440bbc5f6316608f86c0 of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.__init__:4
msgid "Your USPTO Open Data Portal API key."
msgstr "您的USPTO开放数据门户API密钥。"

#: 07c115d6ca5b48b096586f75d516642c 32f28d0ee55842e2892f4f47c551979f of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.__init__:5
msgid "The base URL for the USPTO API."
msgstr "USPTO API 的基础 URL。"

#: 41182cceba9444d392f1643022258490 437525272cda4b6992ca92c87b3451d0 of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.assign_by_path:1
msgid "Create nested dicts for a dot‑path and set the final key to value."
msgstr "为点路径创建嵌套字典，并将最终键设置为指定值。"

#: c4368dfcffcd4c2a8105eeda380e3101 eb4aed93d61f4ddbb7079e7ac94ec7fe of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.get_by_path:1
msgid "Safely navigate nested dicts by a list of keys."
msgstr "通过键列表安全地导航嵌套字典。"

#: 08c489e5b9fe417e8907184610145edf 636db5a7f24f4ee599576e0550b17ec2 of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.run:1
msgid ""
"Runs the specified tool by constructing and executing an API call based "
"on the tool's configuration."
msgstr "根据工具的配置，构建并执行API调用以运行指定的工具。"

#: 22cd1c51088945db9ab0e9de429fb8f3 e75a68ac34ba4dde97dfa529b88a9a9d of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.run:3
msgid ""
"A dictionary of arguments for the tool, matching the parameters in the "
"tool definition."
msgstr "与工具定义中的参数相对应的工具参数字典。"

#: 2541162c33d04652929e1d8ccf1e7c0f 550b792a3b244f0eb67b5a92569715af of
#: tooluniverse.uspto_tool.USPTOOpenDataPortalTool.run:6
msgid ""
"The result of the API call, either as a dictionary (for JSON) or a string"
" (for CSV)."
msgstr "API 调用的结果，可以是字典（用于 JSON）或字符串（用于 CSV）。"

#: 0d7147fd87784b72909dc10d029adbf9 b488a63a152141bfa6fbf5acae3b49f7 of
#: tooluniverse.xml_tool.XMLDatasetTool:1
msgid ""
"Tool to search and filter XML datasets that are organized as a collection"
" of searchable records (e.g., dataset of medical subjects or drug "
"descriptions). Supports user-friendly queries without requiring XPath "
"knowledge."
msgstr "用于搜索和筛选以可搜索记录集合形式组织的XML数据集（例如，医学主题或药物描述的数据集）的工具。支持用户友好的查询，无需掌握XPath知识。"

#: 897caf6b755e4ba7920b455a542125ff dd58c6a3ea4848889c3f9fc444c2e378 of
#: tooluniverse.xml_tool.XMLDatasetTool.get_dataset_info:1
msgid "Get comprehensive information about the loaded XML dataset."
msgstr "获取有关已加载 XML 数据集的全面信息。"

#: 73eecb3d1f294084a14ddfe0e03d6b76 f253d8660f114767aef23661b04e9785 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword:1
msgid ""
"Advanced keyword-based tool finder that uses sophisticated text "
"processing and TF-IDF scoring."
msgstr "高级基于关键词的工具查找器，采用复杂的文本处理技术和TF-IDF评分算法。"

#: 328e2ef91e5b4a99a29b0749adab97c4 cfe2a59ad94e4a23a48bf9e91676dbb4 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword:3
msgid ""
"This class implements natural language processing techniques for tool "
"discovery including: - Tokenization and normalization - Stop word removal"
" - Basic stemming - TF-IDF relevance scoring - Semantic phrase matching"
msgstr ""
"该类实现了用于工具发现的自然语言处理技术，包括：  \n"
"- 分词和规范化  \n"
"- 停用词移除  \n"
"- 基本词干提取  \n"
"- TF-IDF 相关性评分  \n"
"- 语义短语匹配"

#: a69ae7e815254cdeade415c2d0297e9b f9a62eb9af164a19b1378536e9f29c31 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword:10
msgid ""
"The search operates by parsing user queries to extract key terms, "
"processing them through NLP pipelines, and matching against pre-built "
"indices of tool metadata for efficient and relevant tool discovery."
msgstr "搜索通过解析用户查询以提取关键术语，将其通过自然语言处理（NLP）管道进行处理，并与预先构建的工具元数据索引进行匹配，从而实现高效且相关的工具发现。"

#: 0e6864e03ece4158840d93d5a2474289 8c8cf58e818446a99c07666c15c8677b of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.__init__:1
msgid "Initialize the Advanced Keyword-based Tool Finder."
msgstr "初始化高级基于关键字的工具查找器。"

#: 5f64ecb00ae44c4c8ff3e4865af0ef81 65e6cc01f5294408b5221fd6cd708fc1
#: c8d87e0503564d29a6e2fa4e79c46100 cdc0e1989f3a4178915d59990c03995a of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.__init__:3
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.__init__:3
msgid "Configuration dictionary for the tool"
msgstr "工具的配置字典"

#: 3186cbffd6b94de6b0d30b79589ac2f0 4307de24f4bd4a979d89b042998b29c6
#: 4ac285e679ad45029d45fc22731c392c a0a63f944031413080f12d8bb09accc7 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.__init__:5
#: tooluniverse.tool_finder_llm.ToolFinderLLM.__init__:5
msgid "Reference to the ToolUniverse instance containing all tools"
msgstr "引用包含所有工具的 ToolUniverse 实例"

#: 41883d93f2d24f5fb471d1a0d17c585c 6efe3e3201564e0d91663db44762c97b
#: b97ddc4fc67e4535ac19054e75cffa6e c12950a2ab7447b8ac0ba4f4f4eb0815
#: d960cba6c569458a83a5ffa5e932221d f6da6753f9584038a235ca4f8b1d8b8a of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:1
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:1
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:1
msgid "Find relevant tools based on a message or pre-selected tool names."
msgstr "根据消息或预先选择的工具名称查找相关工具。"

#: 2d1bed0508644c40b09a0c40b698c7e5 e5068481ec9246cd8d76bfafd180edb5 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:3
msgid ""
"This method matches the interface of other tool finders to ensure "
"seamless replacement. It uses keyword-based search instead of embedding "
"similarity."
msgstr "此方法与其他工具查找器的接口保持一致，以确保无缝替换。它使用基于关键字的搜索，而非嵌入相似性搜索。"

#: 0b7705e90b83493dbe4a9774deb9a77f 361d9be2133b4f03ace2c5d8b7ad00cc
#: 3e381301d9bd473bb3eaecc6a6ca676d 78d4975e91164961ac45d2e0fdefbe77
#: 822b3667769b4108bf3df97a856369e6 870a9bf1edb64b9d94d074ed8bb24046 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:7
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:6
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:6
msgid "Query message to find tools for. Required if picked_tool_names is None."
msgstr "查询消息以查找工具。如果 picked_tool_names 为 None，则此项为必填。"

#: 1ca850534be34a518d39948f1df0a325 242c28a0e6744f23bfd5cfa4868719c7
#: 300b2796c6b341128ded550eb41415d7 4f3a3c370fc648229483ad4b59092bd2
#: 691c32049e5e4287a848b11bbee329de 99134f31396f4f568b6412dba21c97f2 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:9
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:8
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:8
msgid "Pre-selected tool names to process. Required if message is None."
msgstr "预先选择的工具名称以进行处理。如果消息为 None，则此项为必填。"

#: 2cdb9e2f4973400a975dc4f19bb2ebe2 36cb9f39215f46ec8d7410acca29f2fe
#: 6f5c709a97844b7e8a6acb135f544506 7083a419747b4d589ae108d4ce538216
#: 9da0fde9d737416abe178c8e6fd8f7fc c36a29a0c5424f57bfcadfa06ce1300d of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:11
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:10
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:10
msgid "Number of tools to return after filtering. Defaults to 5."
msgstr "筛选后返回的工具数量。默认值为5。"

#: 0284d5e79be3459eb2b0963fe6d3699b 26fc1ad2731641348644ff0594dc4281
#: 70d112ae240740ae99aef0ee996aea0a 7c3a5be196c74e349d12a215468b04a9
#: 7d809925c2ab422bbe561dcf7c2e5aec c35e16dbfc7442bab478d700230ea0c1 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:13
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:12
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:12
msgid "If True, returns both prompts and tool names. Defaults to False."
msgstr "如果为 True，则返回提示和工具名称。默认为 False。"

#: 600016226fff414bb56c0515afcd0d62 fa24daaeb0a24d8aab4a80d8f10502b2 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:14
msgid "List of tool categories to filter by."
msgstr "工具类别筛选列表"

#: 2e673c8093114933822612f3ed135d58 32631d9821744b168fdcb96e57a00e64
#: 9ce77995021f403c9e8e623c073fa3c2 a8be00510176441ca91c775e1e445262
#: dd44e2e576da41f780473b34c4fed8bd ee28806f9de64662b9f67a72221fb42f of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:19
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:18
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:14
msgid "str or tuple:"
msgstr ""

#: 261c5a97ccd444beab1a47a9c9189bdc 37dcbe1bba0443adaf88d29b97bc2485
#: 5aa4ab5879d64dfab7d59b64ff28c8fa 6d19c31042b64fc8af9860a1c873a0ab
#: 76bc1d3e0cb14ea98f8b3a52056822fb 8a571e5cff7e497db1d999223a68c7ac
#: b1eca607b87c471190cabdfa0df95e74 df7f18b9ad0b4441ad33c3cfa60ac896 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:20
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:19
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:15
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:22
msgid "If return_call_result is False: Tool prompts as a formatted string"
msgstr "如果 return_call_result 为 False：工具将以格式化字符串的形式提示"

#: 2b3c68cda6334c019d7aaa18d44937c6 669dc96a0dd142bf9cc973c29954071a
#: 6bec3c8b2abf489eb13363578f276d2e 93c87c511bdc47ee8ec42567a738ccfe
#: 93d204c98bf340b2ad792550ab473322 973a572049204206a7752d100e6ddbb3
#: c655b7054f644a31bb8718ed9590ff07 f689d53e0b36414aa605ff04a1147b4e of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:21
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:20
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:16
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:23
msgid "If return_call_result is True: Tuple of (tool_prompts, tool_names)"
msgstr "如果 return_call_result 为 True：返回 (tool_prompts, tool_names) 的元组"

#: 003a5430b2fa41b097a90aa15de22fe4 0395ec78a67347e5a91b415b292d20b3
#: 09f14e7d81ac4970b7ccd445b7e0e59c 454029176b974a0f93f8324d3b0fe2dd
#: 766da0322d3d4511b7da818a37ac5b15 9c605dc1ef764ca49f3dd56bf729649e of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:23
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.find_tools:22
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:25
msgid "If both message and picked_tool_names are None"
msgstr "如果 message 和 picked_tool_names 都为 None"

#: d701f909cfcf4d63a8e91344e7bd819d ea3f2d48d4b04f0c952e22b64e595f42 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:1
msgid ""
"Find tools using advanced keyword-based search with NLP processing and "
"TF-IDF scoring."
msgstr "使用基于高级关键词的搜索功能，结合NLP处理和TF-IDF评分来查找工具。"

#: 01a430e7ec9b4746bdf28de767abb241 66f8e94e015944bd802702bdd172ade0 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:3
msgid ""
"This method provides a unified interface compatible with other tool "
"finders."
msgstr "此方法提供了与其他工具查找器兼容的统一接口。"

#: 1e99d16095ae4cc082b35243448bad28 ba0447513bfe4624a1d95055f6b7a876 of
#: tooluniverse.tool_finder_keyword.ToolFinderKeyword.run:5
msgid ""
"Dictionary containing: - description (str): Search query string (unified "
"parameter name) - categories (list, optional): List of categories to "
"filter by - limit (int, optional): Maximum number of results to return "
"(default: 10) - picked_tool_names (list, optional): Pre-selected tool "
"names to process - return_call_result (bool, optional): Whether to return"
" both prompts and names. Defaults to False."
msgstr ""
"字典包含：  \n"
"- description（字符串）：搜索查询字符串（统一参数名称）  \n"
"- categories（列表，可选）：用于筛选的类别列表  \n"
"- limit（整数，可选）：返回结果的最大数量（默认值：10）  \n"
"- picked_tool_names（列表，可选）：预选的工具名称列表  \n"
"- return_call_result（布尔值，可选）：是否同时返回提示和名称。默认值为 False。"

#: 0d73f0e5185748ef846cf529d758c58a 85121ef1820b4da7b795fd80acdc0fad of
#: tooluniverse.tool_finder_llm.ToolFinderLLM:1
msgid ""
"LLM-based tool finder that uses natural language processing to select "
"relevant tools."
msgstr "基于LLM的工具查找器，利用自然语言处理技术选择相关工具。"

#: c9216210643e4aaf9bc1268e5ce2db59 dfa781acdafa465b88c606b8b54e2f23 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM:3
msgid ""
"This class leverages AgenticTool's LLM capabilities to analyze tool "
"descriptions and match them with user queries. It's optimized for minimal"
" context window cost by only sending essential information (tool name and"
" description) to the LLM, providing an intelligent alternative to "
"embedding-based similarity search."
msgstr "此类利用AgenticTool的LLM功能来分析工具描述并将其与用户查询匹配。通过仅向LLM发送必要信息（工具名称和描述），优化了上下文窗口成本，提供了一种智能的替代方案，以替代基于嵌入的相似性搜索。"

#: 6361dda70a094073af3ca45972726c47 c8e0fb82db334e68b4e527f72e1bf8b8 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM:8
msgid ""
"Cost optimizations: - Only includes tool name and description in LLM "
"prompt - Uses compact formatting to minimize token usage - Excludes "
"unnecessary tool metadata and parameters - Implements caching to avoid "
"repeated tool processing"
msgstr ""
"成本优化：  \n"
"- 在LLM提示中仅包含工具名称和描述  \n"
"- 使用紧凑格式以最小化Token使用量  \n"
"- 排除不必要的工具元数据和参数  \n"
"- 实现缓存以避免重复的工具处理"

#: 3bfbe20198b442eaa8e6184536e9e5f4 88aad327fd0b45f2a0194e77757d7d7c of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.__init__:1
msgid "Initialize the LLM-based Tool Finder."
msgstr "初始化基于LLM的工具查找器。"

#: 4235d28bc06e4bf094072e4374c7e7be aed5878fac834c809e6b8b9ae566d063 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.__init__:3
msgid "Configuration dictionary containing LLM settings and prompts"
msgstr "包含LLM设置和提示的配置字典"

#: 25b025777d984b06b768b89d2c92896a d4198a32f1d64b049531531a09c89d5a of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.clear_cache:1
msgid "Clear the tool cache to force refresh on next access."
msgstr "清除工具缓存以强制在下次访问时刷新。"

#: 66dd24236f8e439ca5071f9d76633ec7 b103fd43879547b28390bb2f1da9670f of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:3
msgid ""
"This method matches the interface of the original ToolFinderEmbedding to "
"ensure seamless replacement. It uses LLM-based selection instead of "
"embedding similarity."
msgstr "此方法与原始的ToolFinderEmbedding接口保持一致，以确保无缝替换。它使用基于LLM的选择方法，而非嵌入相似性。"

#: 4947ef6d11c04133a1765b3ed791b725 f4fec827c8f041178eccdfeb13ee5f14 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:14
msgid "List of tool categories to filter by. Applied before LLM selection."
msgstr "工具类别筛选列表。在选择LLM之前应用。"

#: 31aa7cadd9e4429f9b376032459961b1 32aca339af0d43bcbb31e560fb27c037 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:16
msgid ""
"If True, returns only a list of tool specifications. Overrides other "
"return options."
msgstr "如果为 True，则仅返回工具规格列表。此选项会覆盖其他返回选项。"

#: 8b5276beda904a758879c3db34f873d1 b06c74d1baf24db6bad3c4a61ce9af9a of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:20
msgid "str, tuple, or list:"
msgstr ""

#: 05e4ed3680544a38874014bfb6c71fb0 b3ee0ff6f2e3421da23577f6b823ceed of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools:21
msgid "If return_list_only is True: List of tool specifications"
msgstr "如果 return_list_only 为 True：工具规格列表"

#: 22550c4cf1334d0b925c9437d9bdee5a 59132bc4122c4c86a748e357b6d43e01 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_legacy:1
msgid "Legacy method for finding tools with different parameter names."
msgstr "用于查找具有不同参数名称的工具的旧方法。"

#: 4edb2660684244988cec7c17a66c5647 ce2bb72fbf0f4ffdb8bc40b5ebed9752 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_legacy:3
msgid ""
"This provides backward compatibility for any code that might use 'query' "
"instead of 'description'."
msgstr "这为可能使用“query”而非“description”的任何代码提供了向后兼容性。"

#: 070b5bb945604bdeb537f3622482aaa5 26414f7f4e1044159c003dc9da028885 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:1
msgid "Find relevant tools using LLM-based selection."
msgstr "使用基于LLM的选择功能查找相关工具。"

#: 572a5206dddd444b98ec2d716ef2f773 64ecae7fa7ca48a3b7b75b4f92da602b of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:3
msgid "User query describing needed functionality"
msgstr "用户查询描述所需功能"

#: 1a488552b31045b0bcd25ded9672b197 aadff482d3a945e9a1adccc9ff30c2d7 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:5
msgid "Maximum number of tools to return"
msgstr "返回的工具最大数量"

#: bea352a7722441f1a34933c59f950ad8 f9bca35f252548aaa78ad4ec0df3cb96 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:7
msgid "Whether to include selection reasoning"
msgstr "是否包含选择理由"

#: b9511bd974e740599b9a67611384796c c798d5f284a8458d82d8f69c342c0a71 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:9
msgid "List of tool categories to filter by"
msgstr "工具类别筛选列表"

#: 3a2844e19d9941f5ae43be1f2016a12e 79186db7f4254eabbd3b794fb0b140cb of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.find_tools_llm:13
#, fuzzy
msgid "dict: Dictionary containing selected tools and metadata"
msgstr "包含所选工具和元数据的字典"

#: ccd1a0ddaa1441d8b0fb9f58c9092c6c e9f481bd59644670b99fb4115eeaac26 of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.get_tool_stats:1
msgid "Get statistics about available tools."
msgstr "获取可用工具的统计信息。"

#: 1ebbcaf02d5c463cb47271b46d95ab87 2e4ba5345a044914af45391c6c44bbe7
#: 6f92dd174a004948b73cd5c96e37f549 fd902a6edaf24d22b9629d4956c6f684 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.run:1
#: tooluniverse.tool_finder_llm.ToolFinderLLM.run:1
msgid ""
"Run the tool finder with given arguments following the standard tool "
"interface."
msgstr "根据标准工具接口，使用给定的参数运行工具查找器。"

#: 0a05926fe5f1478f8ca1900f28272e9e 9cf5cb82767a498dadb91cbfe0e4f62c of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.run:3
msgid ""
"This method now returns JSON format by default to ensure consistency with"
" other search tools and simplify integration with SMCP."
msgstr "此方法现在默认返回JSON格式，以确保与其他搜索工具的一致性并简化与SMCP的集成。"

#: 0ccf9547ef394554808fde2d2f16f076 2e190985d7704095bd7b93a5e6531dde of
#: tooluniverse.tool_finder_llm.ToolFinderLLM.run:6
msgid ""
"Dictionary containing: - description (str, optional): Query message to "
"find tools for (maps to 'message') - limit (int, optional): Number of "
"tools to return (maps to 'rag_num'). Defaults to 5. - picked_tool_names "
"(list, optional): Pre-selected tool names to process - return_call_result"
" (bool, optional): Whether to return both prompts and names. Defaults to "
"False. - return_format (str, optional): 'json' (default) or 'legacy' for "
"old format - return_list_only (bool, optional): Whether to return only "
"tool specifications as a list - categories (list, optional): List of tool"
" categories to filter by"
msgstr ""
"包含以下内容的字典：  \n"
"- **description**（字符串，可选）：用于查询工具的消息（对应“message”）  \n"
"- **limit**（整数，可选）：返回的工具数量（对应“rag_num”）。默认为5。  \n"
"- **picked_tool_names**（列表，可选）：预先选择要处理的工具名称  \n"
"- **return_call_result**（布尔值，可选）：是否同时返回提示和名称。默认为False。  \n"
"- **return_format**（字符串，可选）：返回格式为“json”（默认）或“legacy”（旧格式）  \n"
"- **return_list_only**（布尔值，可选）：是否仅以列表形式返回工具规格  \n"
"- **categories**（列表，可选）：用于筛选的工具类别列表"

#: 3221bcd8f9fb405caee70348b8328d72 c659eda6e1044459acb664a74c191274 of
#: tooluniverse.url_tool.URLHTMLTagTool:1
#, python-brace-format
msgid ""
"Fetches a webpage and extracts the content of a specified HTML tag. "
"Expects: {\"url\": \"https://...\"} The tag to extract is specified in "
"the tool's configuration. The tag to extract is specified in the tool's "
"configuration. Optional: {\"timeout\": <seconds>} (default 20) Returns: "
"{\"content\": \"<extracted content>\"} or {\"error\": \"...\"}"
msgstr ""
"获取网页并提取指定HTML标签的内容。  \n"
"预期输入：{\"url\": \"https://...\"}  \n"
"需提取的标签在工具配置中指定。  \n"
"可选参数：{\"timeout\": <秒>}（默认值为20）  \n"
"返回值：{\"content\": \"<提取的内容>\"} 或 {\"error\": \"...\"}"

#: 10cb66c3550e44e19d9386704a33cfb0 8f45446af9754b6081441339d61d1a30 of
#: tooluniverse.url_tool.URLToPDFTextTool:1
#, python-brace-format
msgid ""
"Loads a webpage (with JavaScript), exports it as a PDF, and extracts "
"text. Expects: {\"url\": \"https://...\"} Optional: {\"timeout\": "
"<seconds>} (default 30) Returns: {\"text\": \"<extracted text>\"} or "
"{\"error\": \"...\"}"
msgstr ""
"加载网页（包含 JavaScript），将其导出为 PDF，并提取文本。  \n"
"期望输入：{\"url\": \"https://...\"}  \n"
"可选参数：{\"timeout\": <秒>}（默认值为 30）  \n"
"返回值：{\"text\": \"<提取的文本>\"} 或 {\"error\": \"...\"}"

#: 08056c609a244693ad10bcaec6eaff0b 0c5f248e86534909a6da3d66099db430
#: 0eb0bbdd058d443caf05aadc90bc7965 123d984a18c34314848519ec5152b0fb
#: 151e07781ac24e3387772383279c6abf 1e5152364fa54147a3d56ce9eea40ed4
#: 32fe181227b2475ca3eddcda4300234f 3db39e2028f449e28f55d63124839d3c
#: 3dfc6493e99340c4abc64ffee59c4045 5b1420e3d1a241e2829d2ee97f25cd6a
#: 738d4cbf97294bcdb8d93fb55c690f19 779e82cf41b5430aa819ad40adf0aacb
#: 7ad8b12c3a2e4bf29b7a8e5d3d5bfdf5 7ca07869f9264ee78ecb33858dfa6485
#: 92925770bbbf43a8ba4088123055715d 98aa9c8cd0714526be55f4253cf1a254
#: b0ffe7ec00254de5aed60ba3f87b6c71 b9379fd4424c489fab477eb17ac2717a
#: bd02ffccbc0a4f0d97468b1f15840f27 c2482bd00ab84b499881cb2bcaf7916f
#: d39f861d7517411aa851cee5faad812e d8d831edb184489e91308af42121827d
#: df3ea6b2f06b448bbb8118b7184b1b3b ea0918ca726c4341bae66a73496c4a41 of
#: tooluniverse.gwas_tool.GWASAssociationByID:1
#: tooluniverse.gwas_tool.GWASAssociationSearch:1
#: tooluniverse.gwas_tool.GWASAssociationsForSNP:1
#: tooluniverse.gwas_tool.GWASAssociationsForStudy:1
#: tooluniverse.gwas_tool.GWASAssociationsForTrait:1
#: tooluniverse.gwas_tool.GWASSNPByID:1 tooluniverse.gwas_tool.GWASSNPSearch:1
#: tooluniverse.gwas_tool.GWASSNPsForGene:1
#: tooluniverse.gwas_tool.GWASStudiesForTrait:1
#: tooluniverse.gwas_tool.GWASStudyByID:1
#: tooluniverse.gwas_tool.GWASStudySearch:1
#: tooluniverse.gwas_tool.GWASVariantsForTrait:1
msgid "Bases: :py:class:`~tooluniverse.gwas_tool.GWASRESTTool`"
msgstr "基础类：:py:class:`~tooluniverse.gwas_tool.GWASRESTTool`"

#: 077ea7e7242149a09653487537b9f434 e8e01928a8db4648b0db7eaf04f70237 of
#: tooluniverse.gwas_tool.GWASAssociationSearch:1
msgid "Search for GWAS associations by various criteria."
msgstr "根据各种条件搜索GWAS关联。"

#: 0a2f8537669849a8bd84591afb8b65f2 2ac08ba5628e46fa8e588d2eb18395c2 of
#: tooluniverse.gwas_tool.GWASAssociationSearch.run:1
msgid "Search for associations with optional filters."
msgstr "使用可选筛选条件搜索关联。"

#: bca80aed23f54807874f5e05c718f1c0 e514a9d3b7d14dfba3cf4d62408bea00 of
#: tooluniverse.gwas_tool.GWASStudySearch:1
msgid "Search for GWAS studies by various criteria."
msgstr "根据各种条件搜索GWAS研究。"

#: 50857c7f4e1d428480af39f193749946 f2aaba12d96148e88f5d051e15c8e2fd of
#: tooluniverse.gwas_tool.GWASStudySearch.run:1
msgid "Search for studies with optional filters."
msgstr "使用可选筛选条件搜索研究。"

#: 12acdd28bf8440cc974c926d1ccaa03a 7a7592e079d745c09e0d8bb5a5165fb7 of
#: tooluniverse.gwas_tool.GWASSNPSearch:1
msgid "Search for GWAS single nucleotide polymorphisms (SNPs)."
msgstr "搜索 GWAS 单核苷酸多态性（SNPs）。"

#: 406b2f3379e142cab7645aa1f505505b e8654d5bf2fa4a28a66e38f13a20fdea of
#: tooluniverse.gwas_tool.GWASSNPSearch.run:1
msgid "Search for SNPs with optional filters."
msgstr "使用可选筛选条件搜索SNP。"

#: 8416d7cba9dd4593b6d69cd8d43dc7ea 8de6c96a2fb44ea19934395fd130e9c2 of
#: tooluniverse.gwas_tool.GWASAssociationByID:1
msgid "Get a specific GWAS association by its ID."
msgstr "通过其ID获取特定的GWAS关联。"

#: 1b83e580551e480e9cd802a834dde276 4d3b56dd14724e88861de1880950f7fb of
#: tooluniverse.gwas_tool.GWASAssociationByID.run:1
msgid "Get association by ID."
msgstr "通过ID获取关联。"

#: 3c6fd39944014ebcab7596564a37fd53 4099c2af36ee4e23ada8f16c4ae16d9f of
#: tooluniverse.gwas_tool.GWASStudyByID:1
msgid "Get a specific GWAS study by its ID."
msgstr "通过其ID获取特定的GWAS研究。"

#: b96432c066d04f8caa00eef1240e63ea be4edf4c93b347e299b5278ec43b50ea of
#: tooluniverse.gwas_tool.GWASStudyByID.run:1
msgid "Get study by ID."
msgstr "通过ID获取研究。"

#: 45c175fc1a4d46828123d614a162f06d e3e6db120828422da96e522cee2a596d of
#: tooluniverse.gwas_tool.GWASSNPByID:1
msgid "Get a specific GWAS SNP by its rs ID."
msgstr "通过其 rs ID 获取特定的 GWAS SNP。"

#: 558c15097f534ec4b80f85048631cf60 9d8cfc1f4b1f4bd890c1d3572179ad81 of
#: tooluniverse.gwas_tool.GWASSNPByID.run:1
msgid "Get SNP by rs ID."
msgstr "通过 rs ID 获取 SNP。"

#: 8b65a302178541bd851ceb7633675b9a e33f5ffa6d1443e590f89062ebc098c7 of
#: tooluniverse.gwas_tool.GWASVariantsForTrait:1
msgid "Get all variants associated with a specific trait."
msgstr "获取与特定特性关联的所有变体。"

#: 52edba48584f4cbca747e3656d61072c 9f0387ecbe15421b96ce16572e3990e0 of
#: tooluniverse.gwas_tool.GWASVariantsForTrait.run:1
msgid "Get variants for a trait with pagination support."
msgstr "获取具有分页支持的特征变体。"

#: 5133da8b21b94836a8fd489b77185525 be3990b7ccd44b678a19eb468ec36e21 of
#: tooluniverse.gwas_tool.GWASAssociationsForTrait:1
msgid "Get all associations for a specific trait, sorted by p-value."
msgstr "获取特定性状的所有关联，并按p值排序。"

#: 159c9c891d604b009ab8916b7a42a427 35b442dbfa0e4a8381728c37c03950ab of
#: tooluniverse.gwas_tool.GWASAssociationsForTrait.run:1
msgid "Get associations for a trait, sorted by significance."
msgstr "获取某个特征的关联，并按重要性排序。"

#: 3272604dfafb42a58388fd7e040a9c90 6243202eab1045e7b85f53d5d62b19ab of
#: tooluniverse.gwas_tool.GWASAssociationsForSNP:1
msgid "Get all associations for a specific SNP."
msgstr "获取特定SNP的所有关联。"

#: 12839082a5464809833355e1423a022b 4f7e02beac0f403b83eb30af9e256e72 of
#: tooluniverse.gwas_tool.GWASAssociationsForSNP.run:1
msgid "Get associations for a SNP."
msgstr "获取单核苷酸多态性（SNP）的关联数据。"

#: af418c9b19e941aa9928f401650aaa4b fbcbb8afd4bd48639a75b0f6f0390d2b of
#: tooluniverse.gwas_tool.GWASStudiesForTrait:1
msgid "Get studies for a specific trait with optional filters."
msgstr "获取针对特定特征的研究，并可选择使用筛选器。"

#: 2dc3af924aa5429e98130d44fe576d87 90e2bb91906e4537b09a6fb43b7e72b3 of
#: tooluniverse.gwas_tool.GWASStudiesForTrait.run:1
msgid "Get studies for a trait with optional filters."
msgstr "获取具有可选筛选条件的性状研究。"

#: 0f31480a2e934bab824a72845a3650b1 841260e456694be9a59563fb05508709 of
#: tooluniverse.gwas_tool.GWASSNPsForGene:1
msgid "Get SNPs mapped to a specific gene."
msgstr "获取映射到特定基因的SNP。"

#: 33bbff84443a44edbe9bdabb0289f0ce 8e5e3c74f2d5451297ec2607ff3eafe9 of
#: tooluniverse.gwas_tool.GWASSNPsForGene.run:1
msgid "Get SNPs for a gene."
msgstr "获取基因的SNPs。"

#: 21d0b60b58dd40a9a8adeb3b225b0fba 3c9a877eeb0b47d39e240a8419b71645 of
#: tooluniverse.gwas_tool.GWASAssociationsForStudy:1
msgid "Get all associations for a specific study."
msgstr "获取特定研究的所有关联。"

#: 4925bd68c8144955ae26e1f5aaae2d14 b19c449c690e42c6ada51335eb95ca03 of
#: tooluniverse.gwas_tool.GWASAssociationsForStudy.run:1
msgid "Get associations for a study."
msgstr "获取研究的关联。"

#: 0015ba11bfd74bb89727d3c7b58386f7 2692d315b53642f0ae9e2670730893b4
#: 2b03c54f0c3d46f6aa314ee1ac410e0f c117d9cb3dc546f5a90f28f035489c99 of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool:1
#: tooluniverse.mcp_client_tool.MCPClientTool:1
msgid ""
"Bases: :py:class:`~tooluniverse.base_tool.BaseTool`, "
":py:class:`~tooluniverse.mcp_client_tool.BaseMCPClient`"
msgstr "基础类：:py:class:`~tooluniverse.base_tool.BaseTool`，:py:class:`~tooluniverse.mcp_client_tool.BaseMCPClient`"

#: 7e8ab5d6781a432b8fd04ffc7068dc23 9559ab56407944818a557c97c5aa60d1 of
#: tooluniverse.mcp_client_tool.MCPClientTool:1
msgid ""
"A tool that acts as an MCP client to connect to existing MCP servers. "
"Supports both HTTP and WebSocket transports."
msgstr "一种用作MCP客户端以连接现有MCP服务器的工具。支持HTTP和WebSocket传输。"

#: 18faabe18dab4b2fa8267bd169bbb268 6e96b62f224541eba489afcb761d0e71 of
#: tooluniverse.mcp_client_tool.MCPClientTool.call_tool:1
msgid "Call a tool on the MCP server"
msgstr "在MCP服务器上调用工具"

#: 0ff99f7d1637478fa8ecfc8466fec0b8 b4d7bc6edaa1488685de8bb02f0b7ef6 of
#: tooluniverse.mcp_client_tool.MCPClientTool.get_prompt:1
msgid "Get a prompt from the MCP server"
msgstr "从MCP服务器获取提示"

#: 417c8ef0fe79411b93f7b94cc95a5243 afdc4eaacf1d433db8bbb2c54c555a3f of
#: tooluniverse.mcp_client_tool.MCPClientTool.list_prompts:1
msgid "List available prompts from the MCP server"
msgstr "从 MCP 服务器列出可用的提示"

#: 388eceabc28840f680f6816bdf099650 b38a7783173b4859b3217c32678e5868 of
#: tooluniverse.mcp_client_tool.MCPClientTool.list_resources:1
msgid "List available resources from the MCP server"
msgstr "从MCP服务器列出可用资源"

#: 1120054464ca40e899e7e8b3ae17df81 46284d23dd854684a3e9de7cd2f8cf67 of
#: tooluniverse.mcp_client_tool.MCPClientTool.list_tools:1
msgid "List available tools from the MCP server"
msgstr "从MCP服务器列出可用工具"

#: 34b40fa8de184cd8bf42964fc69bfbf6 dfedb516c473403b8dfad5f9e5b24afa of
#: tooluniverse.mcp_client_tool.MCPClientTool.read_resource:1
msgid "Read a resource from the MCP server"
msgstr "从MCP服务器读取资源"

#: 04cd9afcd4704b1491651afbd00032ec 0f6c44656d734f1987a109b7a5a03ad8 of
#: tooluniverse.mcp_client_tool.MCPClientTool.run:1
msgid ""
"Main run method for the tool. Supports different operations based on the "
"'operation' argument."
msgstr "工具的主运行方法。根据“operation”参数支持不同的操作。"

#: 5993ca6fcac54ff3866dee9b4166cdd2 c0f22b7d7ea5471196e606893a709dea of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool:1
msgid ""
"An advanced MCP tool that automatically discovers and loads all tools "
"from an MCP server. It can register discovered tools as individual "
"ToolUniverse tools for seamless usage."
msgstr "一种先进的MCP工具，可自动从MCP服务器中发现并加载所有工具。它能够将发现的工具注册为独立的ToolUniverse工具，以实现无缝使用。"

#: 0bfb195442d0409fb2f0d9f500600e5a 6be31b8f36c94a16944142c886342d7b of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.__del__:1
msgid "Cleanup when object is destroyed"
msgstr "对象销毁时的清理"

#: 1de7ccfabd574dc6a8d73e51a1b4c4e2 d99fffbe1b54484d9d42f224198726ae of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.auto_load_and_register:1
msgid "Automatically discover, load and register all MCP tools"
msgstr "自动发现、加载并注册所有MCP工具"

#: 55fc332553c14813aa90cd580b7ab537 dbd56691d33e49509b1d9d91d833e39e of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.call_tool:1
msgid "Directly call an MCP tool by name"
msgstr "直接通过名称调用MCP工具"

#: 6062f6c4b6bd4e4ba60aa9a147d9621f 6fa8fd3b826e4cefa2b7b5474c92b723 of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.discover_tools:1
msgid "Discover all available tools from the MCP server"
msgstr "从MCP服务器中发现所有可用工具"

#: 59f5ea0afb5049da890ea4d1c82ab858 eb38a0f0f82f4848ba09de8f79ea0f05 of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.generate_proxy_tool_configs:1
msgid "Generate proxy tool configurations for discovered tools"
msgstr "为已发现的工具生成代理工具配置"

#: 1af9ae35ce684f0785d4f61f8ab6e0fe 49b3f1481fc8469bb56c75cacd62c779 of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.register_tools_in_engine:1
msgid "Register discovered tools directly in the ToolUniverse engine"
msgstr "直接在 ToolUniverse 引擎中注册已发现的工具"

#: 776d2e8acf56442ea0c08c62a41316c0 8a9d2d61ffc4414980ed894d0d9fc3f9 of
#: tooluniverse.mcp_client_tool.MCPAutoLoaderTool.run:1
msgid "Main run method for the auto-loader tool"
msgstr "自动加载工具的主运行方法"

#: 48e79dc4996e46a98582bcc541f93998 d14556f424c54e18b152e592a166f541 of
#: tooluniverse.admetai_tool.ADMETAITool:1
msgid ""
"Tool to predict ADMET properties for a given SMILES string using the "
"admet-ai Python package."
msgstr "用于预测给定SMILES字符串的ADMET属性的工具，基于admet-ai Python包。"

#: 163010255ef749bfb416650824af0dd9 3e963cfa77ea41ce8078ca2b12e0ed87 of
#: tooluniverse.admetai_tool.ADMETAITool.run:1
msgid "Predicts ADMET properties for a given SMILES string."
msgstr "预测给定SMILES字符串的ADMET属性。"

#: 4faa8b0268b5457a99d6620185388a3d 656f9458c80e45588abedd68e8544aa5 of
#: tooluniverse.admetai_tool.ADMETAITool.run:3
msgid "The SMILES string(s) of the molecule(s)."
msgstr "分子的SMILES字符串。"

#: 9114bde3c8da4034bce04988725d3b84 eaee6728bcde4094815ffff3bdca336f of
#: tooluniverse.admetai_tool.ADMETAITool.run:6
msgid ""
"A dictionary mapping each SMILES string to a subdictionary of selected "
"ADMET properties and their predicted values."
msgstr "一个字典，将每个SMILES字符串映射到一个子字典，其中包含选定的ADMET属性及其预测值。"

#: 1b0164e50eea40909e18d18721ca25d7 d491eb6a21204224b7984407247a7b78 of
#: tooluniverse.embedding_database.EmbeddingDatabase:1
msgid ""
"Unified embedding database tool supporting multiple operations: - "
"create_from_docs: Create new database from documents - add_docs: Add "
"documents to existing database - search: Search for similar documents - "
"load_database: Load existing database from path"
msgstr ""
"统一嵌入式数据库工具，支持多种操作：  \n"
"- **create_from_docs**：从文档创建新数据库  \n"
"- **add_docs**：向现有数据库添加文档  \n"
"- **search**：搜索相似文档  \n"
"- **load_database**：从路径加载现有数据库"

#: 098e4bea06e94cd99a3e8a145a94317d 3662f2c619864d20bfc5341e78f54c3b
#: ce87fa218fc64a5386d21c13567a58ed e757e0854f444c9881a942d88c40804a of
#: tooluniverse.embedding_database.EmbeddingDatabase.run:1
#: tooluniverse.embedding_sync.EmbeddingSync.run:1
msgid "Main entry point for the tool"
msgstr "工具的主入口"

#: 8705da45fec940d093c8d55950eba255 a18d5e72cb364aea9bb7f67d2c0be2e2 of
#: tooluniverse.embedding_sync.EmbeddingSync:1
msgid ""
"Sync embedding databases with HuggingFace Hub. Supports uploading local "
"databases and downloading shared databases."
msgstr "将嵌入式数据库与 HuggingFace Hub 同步。支持上传本地数据库和下载共享数据库。"

#: 03e1492330384b739eabdf98711623d1 b9dc26ee72a848b995a4e39a3126d2d7 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:1
msgid ""
"A tool finder model that uses RAG (Retrieval-Augmented Generation) to "
"find relevant tools based on user queries using semantic similarity "
"search."
msgstr "一种工具查找模型，使用RAG（检索增强生成）通过语义相似性搜索，根据用户查询查找相关工具。"

#: 379a2088cc3b45b59518bcd56cf709e2 a40a38acf04d4b3996e88922163bb4cb of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:4
msgid ""
"This class leverages sentence transformers to encode tool descriptions "
"and find the most relevant tools for a given query through embedding-"
"based similarity matching."
msgstr "该类利用句子转换器对工具描述进行编码，并通过基于嵌入的相似性匹配，为给定的查询找到最相关的工具。"

#: 79d8fc2fcdc44f3998e572fa8e822b81 f6b53909f06b4600bc02e43993f93fe7 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:9
msgid "Name of the sentence transformer model for embeddings"
msgstr "嵌入句子转换器模型的名称"

#: 04e0685c24544240a66639314d41c22a 1a56cce84fd4405198e27659fd01660f
#: 27967d4215e24999a1605a30345a4bd8 6c845fa8f0914e2c91a3a32b2e39c51a
#: 73a2e220cc6040f4879dfd49215aa69c 763141620b79411791adcc8168d25199
#: 80a617d337fc4e1bbe7d51789c60819d d80123bb8ede42bf9ad139e23e2d69f9
#: e339eb3afa5c46f5bc5b817cf32c369b of tooluniverse.exceptions.ToolError:7
#: tooluniverse.output_hook.HookManager:37
#: tooluniverse.output_hook.OutputHook:21
#: tooluniverse.output_hook.SummarizationHook:19
#: tooluniverse.output_hook.SummarizationHook:31
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:11
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:35
msgid ":py:class:`str`"
msgstr ""

#: 1c36e20777264eb184148e4940bf58d6 b00612ba0b6d45b69b72d1a68482c0c8 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:15
msgid "The loaded sentence transformer model"
msgstr "加载的句子转换器模型"

#: 3e0cde3e38c04483996a11bf7c9f8d2e 70cd78b28917409f86f5413d5eba2c5b of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:17
msgid ":py:class:`SentenceTransformer`"
msgstr ":py:class:`句子转换器`"

#: 43766ffad1c8477e93541be158e6a992 9595dc8a016841fdb5a6e81d2155bcae of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:21
msgid "Cached embeddings of tool descriptions"
msgstr "工具描述的缓存嵌入"

#: 19b773340fa5455fa5194196c6669d78 ab353e0f2d4b4192b82091d58fe543da of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:23
msgid ":py:class:`torch.Tensor`"
msgstr ""

#: 6a2ae12c206f4f6280bd8c2df9ab2f17 6ed404b1193c4f80a8dad8370d5137d5 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:27
msgid "List of available tool names"
msgstr "可用工具名称列表"

#: 2fc2026a69234a4ebade03139b522858 a027307ed8974634bfcdcb12d0369239 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:33
msgid "Path to cached tool embeddings file"
msgstr "缓存工具嵌入文件的路径"

#: 068ed43cc31146ce85d9083977377762 64092f7ab73947d593397d69e6a7e883 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:39
msgid "List of special tools to exclude from results"
msgstr "排除结果的特殊工具列表"

#: e9c41d4085344b14a1b6a0a64a78ed59 fd7ef09f46a54b65ab75ed0336aca498 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding:45
msgid "Reference to the tool universe containing all tools"
msgstr "参考包含所有工具的工具库"

#: 3a1e9d118a9d4124862c06530f259fce cf6ace1302a34762ae5d04338f8661a0 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.__init__:1
msgid "Initialize the ToolFinderEmbedding with configuration and RAG model."
msgstr "使用配置和RAG模型初始化ToolFinderEmbedding。"

#: 7bc503fdcc1745008a837f5916cf0bcc 7dfb1d2537784dfba66f964755378f3a of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:3
msgid ""
"This method either uses RAG inference to find tools based on a message or"
" processes a list of pre-selected tool names. It filters out special "
"tools and returns tool prompts suitable for use in agent workflows."
msgstr "此方法通过RAG推理根据消息查找工具，或处理预先选择的工具名称列表。它会过滤掉特殊工具，并返回适用于代理工作流程的工具提示。"

#: 6c100236021049e0a6d3bbe4413ba605 b6b17a9a03f3407ea6ec42b4ba281f64 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.find_tools:15
msgid ""
"List of tool categories to filter by. Currently not implemented for "
"embedding-based search."
msgstr "工具类别筛选列表。目前尚未针对基于嵌入的搜索实现。"

#: 79f9b5ceacd745c5b8abb73f3f4803ed e6e5e3eaead14580b3a6ad8584860cee of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_rag_model:1
msgid "Load the sentence transformer model for RAG-based tool retrieval."
msgstr "加载用于基于RAG的工具检索的句子转换器模型。"

#: 39b2a520d18a475b86ca032f4041c33d 80eebfb1f36c4eb4bbfb25cc705ab239 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_rag_model:3
msgid ""
"Configures the model with appropriate sequence length and tokenizer "
"settings for optimal performance in tool description encoding."
msgstr "将模型配置为适当的序列长度和分词器设置，以优化工具描述编码的性能。"

#: 2ecfa9ba826a45919ba6b57b39b9949c aa332dfdfcf04bb1adc5507f3db4afb7 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:1
msgid "Load or generate embeddings for tool descriptions from the tool universe."
msgstr "从工具库中加载或生成工具描述的嵌入数据。"

#: 1985ca46d9904e0b878cc540329d8ab4 d75ba04d0444456c9ef5e38ac0ac0304 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:3
msgid ""
"This method either loads cached embeddings from disk or generates new "
"ones by encoding all tool descriptions. Embeddings are cached to disk for"
" faster subsequent loads. Memory is properly cleaned up after embedding "
"generation to avoid OOM issues."
msgstr "此方法会从磁盘加载缓存的嵌入向量，或者通过编码所有工具描述生成新的嵌入向量。嵌入向量会被缓存到磁盘，以加快后续加载速度。在生成嵌入向量后，会适当清理内存以避免出现内存溢出（OOM）问题。"

#: 46971a9700ae4aa382865dd94dcc4b2b 6218a0006b834a72a18c9670e0ea53c0 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:7
msgid "ToolUniverse instance containing all available tools"
msgstr "ToolUniverse 实例，包含所有可用工具"

#: 185e01d2d2df47d68b396f36b37993bb 9c41127ef35b4958a0df48eddd66fe0f of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:8
msgid "Specific tool names to include"
msgstr "特定工具名称包括"

#: 017951050f7b47e3960ab21dddf70699 576c280af37f459fa7572c301fdf948f of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:10
msgid "Tool names to exclude"
msgstr "要排除的工具名称"

#: 31cfd2ecda904250a5a30004358f5689 bbf018a349ce4807b4cd8cb653020cb1 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:12
msgid "Tool categories to include"
msgstr "工具类别包括"

#: 0ede52dfb399486b878e9c174e977ec1 398a3aa256f74c1abb92a799748f8203 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.load_tool_desc_embedding:14
msgid "Tool categories to exclude"
msgstr "要排除的工具类别"

#: 5b760f0398b640d0897e5aca11d41e22 b7ef646fc6fd4b7a85a2ac8601088c9b of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:1
msgid "Perform RAG inference to find the most relevant tools for a given query."
msgstr "执行 RAG 推理以查找与给定查询最相关的工具。"

#: 2d33df3a47e447d69c345bab8f619ec6 2e01cf88dddc48508213e85c78c45bec of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:3
msgid ""
"Uses semantic similarity between the query embedding and pre-computed "
"tool embeddings to identify the most relevant tools."
msgstr "利用查询嵌入与预先计算的工具嵌入之间的语义相似性来识别最相关的工具。"

#: 2d213d9653da44a68a9caa77ef7fb3cb 8f95181ab5a7431bba73cd6bfa6ada14 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:6
msgid "User query or description of desired functionality"
msgstr "用户查询或所需功能的描述"

#: 556b67a9667b402e930bf62938f13fd4 f491652c314d48508aeb2439258cfb15 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:8
msgid "Number of top tools to return. Defaults to 5."
msgstr "返回的顶级工具数量。默认为5。"

#: 57eefe7c9a7f4feaabe292ba410af852 ef742cd1af9247beab3c15b7a6c34969 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:12
#, fuzzy
msgid "list: List of top-k tool names ranked by relevance to the query"
msgstr "与查询相关性排名前k的工具名称列表"

#: 58e2587fdfc745119317f02c3f0685d6 d66a79d4b0d6485ca931b2a109245011 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.rag_infer:14
msgid "If tool_desc_embedding is not loaded"
msgstr "如果未加载 tool_desc_embedding"

#: 7d336b791d5448dda93abb199e167385 b712d912aba44594a05fd703f78643db of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.run:3
msgid ""
"This is the main entry point for using ToolFinderEmbedding as a standard "
"tool. It extracts parameters from the arguments dictionary and delegates "
"to find_tools()."
msgstr "这是使用ToolFinderEmbedding作为标准工具的主要入口。它从参数字典中提取参数，并委托给find_tools()函数处理。"

#: 6366e08a9242484fbd9c8da55f714df4 df82921e66d843c581d08771e8f05082 of
#: tooluniverse.tool_finder_embedding.ToolFinderEmbedding.run:6
msgid ""
"Dictionary containing: - description (str, optional): Query message to "
"find tools for (maps to 'message') - limit (int, optional): Number of "
"tools to return (maps to 'rag_num'). Defaults to 5. - picked_tool_names "
"(list, optional): Pre-selected tool names to process - return_call_result"
" (bool, optional): Whether to return both prompts and names. Defaults to "
"False. - categories (list, optional): List of tool categories to filter "
"by"
msgstr ""
"包含以下内容的字典：  \n"
"- **description**（字符串，可选）：查询消息，用于查找工具（对应“message”）  \n"
"- **limit**（整数，可选）：返回的工具数量（对应“rag_num”）。默认为 5。  \n"
"- **picked_tool_names**（列表，可选）：预先选择的工具名称，用于处理  \n"
"- **return_call_result**（布尔值，可选）：是否同时返回提示和名称。默认为 False。  \n"
"- **categories**（列表，可选）：用于筛选的工具类别列表"

#: 6782e5c8766c4c448c81f570cef381c9 bcca71f76f3a43cd8304c9dc99b7397a of
#: tooluniverse.alphafold_tool.AlphaFoldRESTTool:1
msgid ""
"AlphaFold Protein Structure Database API tool. Generic wrapper for "
"AlphaFold API endpoints defined in alphafold_tools.json."
msgstr ""
"AlphaFold蛋白质结构数据库API工具。用于AlphaFold "
"API端点的通用封装，端点定义在alphafold_tools.json文件中。"

#: 20636da990ea453e8a2ea44ff37af2c7 eeb264c32d394ec285a05b8085557b1b of
#: tooluniverse.alphafold_tool.AlphaFoldRESTTool.run:1
msgid "Execute the tool with provided arguments."
msgstr "使用提供的参数执行工具。"

#: 1ab969afe3414f759b37b65f4afa20de 1cfa9918a12e4046b2513545b8d2369a
#: 70649d61b885414092d72d0515a71745 8caf1eeb0f734dd4a1f09c8a31afb95e
#: 96108dec7f774706a17c105a0057eaea b433eb3cee0e4b4096fba6ad375ffd45 of
#: tooluniverse.odphp_tool.ODPHPItemList:1
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder:1
#: tooluniverse.odphp_tool.ODPHPTopicSearch:1
msgid "Bases: :py:class:`~tooluniverse.odphp_tool.ODPHPRESTTool`"
msgstr "基础类：:py:class:`~tooluniverse.odphp_tool.ODPHPRESTTool`"

#: 6b7ca183229043c7a9fda04c6b2ba871 e63654baac94476399843304b1721f3a of
#: tooluniverse.odphp_tool.ODPHPMyHealthfinder:1
msgid "Search for demographic-specific health recommendations (MyHealthfinder)."
msgstr "搜索特定人群的健康建议（MyHealthfinder）。"

#: 9fcf99049a0a40d6ab2b6085a2b7a478 d415b9daa9b14b748435c093b0b68f4f of
#: tooluniverse.odphp_tool.ODPHPItemList:1
msgid "Retrieve list of topics or categories."
msgstr "检索主题或类别列表。"

#: 53cc3a13adfb445e90aa0abcb8886628 f3a5d3f5a1524c8d8efbaf46e23921c5 of
#: tooluniverse.odphp_tool.ODPHPTopicSearch:1
msgid "Search for health topics by ID, category, or keyword."
msgstr "通过 ID、类别或关键词搜索健康主题。"

#: 03793d36ef17423a99a822797469f918 0b5353ba0df6418eae6d99f86b2b9aa6 of
#: tooluniverse.odphp_tool.ODPHPOutlinkFetch:1
msgid ""
"Fetch article pages referenced by AccessibleVersion / RelatedItems.Url "
"and return readable text. - HTML: extracts main/article/body text; strips"
" nav/aside/footer/script/style. - PDF or non-HTML: returns metadata + URL"
" so the agent can surface it."
msgstr ""
"根据AccessibleVersion / RelatedItems.Url获取引用的文章页面，并返回可读文本。  \n"
"- "
"HTML：提取主要内容/文章/正文文本；移除导航栏（nav）、侧边栏（aside）、页脚（footer）、脚本（script）和样式（style）。"
"  \n"
"- PDF或非HTML：返回元数据和URL，以便代理能够显示相关内容。"

#: 8525a3cf847f403891a6cfbbdb10ba2c b15040dd7ac649ffa2c84cf1214ebf3b of
#: tooluniverse.cellosaurus_tool.CellosaurusSearchTool:1
msgid "Tool to search Cellosaurus cell lines using the official API."
msgstr "使用官方API搜索Cellosaurus细胞系的工具。"

#: 92cd3f73a3b341e9b3d01417c0986129 c6d861ad60e947b9a5dc85143b5c2221 of
#: tooluniverse.cellosaurus_tool.CellosaurusQueryConverterTool:1
msgid ""
"Tool to convert natural language queries to Solr syntax for Cellosaurus "
"API."
msgstr "用于将自然语言查询转换为适用于Cellosaurus API的Solr语法的工具。"

#: ee34eb74612a45d8b1d09e6bed9e588f fe3414ffae5345738b682b0dfb5beb92 of
#: tooluniverse.cellosaurus_tool.CellosaurusGetCellLineInfoTool:1
msgid ""
"Tool to get detailed information about a specific cell line using its "
"accession number."
msgstr "用于通过细胞系的登录号获取详细信息的工具。"

#: 3782e1e19825406da4b71b753ecc193c ee719786e8d24361ad6820340c4ba62c of
#: tooluniverse.arxiv_tool.ArXivTool:1
msgid "Search arXiv for papers by keyword using the public arXiv API."
msgstr "使用公共 arXiv API 按关键词搜索 arXiv 论文。"

#: 3c8a5a91aec84baea00603ad8b4f46dd 8a1609b099494d5ab165d086b9aa172d of
#: tooluniverse.crossref_tool.CrossrefTool:1
msgid "Search Crossref Works API for articles by keyword."
msgstr "通过关键词搜索 Crossref Works API 中的文章。"

#: c3039bd1dee1403ebf8f632d0ab49296 fc86046b0ae94b0288a0a7f6568ac7c0 of
#: tooluniverse.dblp_tool.DBLPTool:1
msgid "Search DBLP Computer Science Bibliography for publications."
msgstr "在 DBLP 计算机科学文献库中搜索出版物。"

#: c6acdefd53554c56bcf433a986346e6e ff1c1171677348f0882919f73d8939dd of
#: tooluniverse.pubmed_tool.PubMedTool:1
msgid ""
"Search PubMed using NCBI E-utilities (esearch + esummary) and return "
"articles."
msgstr "使用NCBI E-utilities（esearch + esummary）搜索PubMed并返回文章。"

#: 7b5c5b40af5745e2ba19c514414d9f9f d9d2ed9aff42470d97b05a22ac3645d4 of
#: tooluniverse.doaj_tool.DOAJTool:1
msgid "Search DOAJ (Directory of Open Access Journals) articles and journals."
msgstr "搜索 DOAJ（开放获取期刊目录）中的文章和期刊。"

#: 5ec149c8357a4151a376b0fe79d44f42 68f9d63b338645f798d417843cde2aef
#: 6e23c79f2c774bcebd9f6f46407808ea 84b758bb7628432da3713ab2b250b6f5
#: 96c239eb9f2c48048068ac9474a310c3 e1508d4165da48f389004ad264d6e8db
#: f54d1a96a79c4b02ab23e63389a0342e fbed18ca229141c4b25685b3551bebaa of
#: tooluniverse.doaj_tool.DOAJTool:3
#: tooluniverse.fatcat_tool.FatcatScholarTool:3
#: tooluniverse.openaire_tool.OpenAIRETool:3
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool:3
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool:3
#: tooluniverse.zenodo_tool.ZenodoTool:3
msgid "Parameters (arguments):"
msgstr "参数（参数）："

#: 4eb4263c91fd44ed887dcb7925971d48 5e2176d078ee41ed988e3fdb69860dba of
#: tooluniverse.doaj_tool.DOAJTool:4
msgid ""
"query (str): Query string (Lucene syntax supported by DOAJ) max_results "
"(int): Max number of results (default 10, max 100) type (str): "
"\"articles\" or \"journals\" (default: \"articles\")"
msgstr ""
"query (str): 查询字符串（支持 DOAJ 的 Lucene 语法）  \n"
"max_results (int): 最大结果数（默认值为 10，最大值为 100）  \n"
"type (str): \"articles\" 或 \"journals\"（默认值：\"articles\"）"

#: 838534b339d840b282ee29313a53da34 9fd52b23c2894a639272a31a9a55efed of
#: tooluniverse.unpaywall_tool.UnpaywallTool:1
msgid ""
"Query Unpaywall by DOI to check open-access status and OA locations. "
"Requires a contact email."
msgstr "通过 DOI 查询 Unpaywall 以检查开放获取状态和开放获取位置。需要提供联系邮箱。"

#: 0dfc658908ad4d84acfa465fff24ca24 5cb3e5af8fa34ed0a96cb998fed32fb4 of
#: tooluniverse.biorxiv_tool.BioRxivTool:1
msgid "Search bioRxiv preprints using bioRxiv's API (same interface as medRxiv)."
msgstr "使用bioRxiv的API（与medRxiv接口相同）搜索bioRxiv预印本"

#: 166de6eeb16346ce8b1fe2ddc476c18b 2a8f7f48eede4927b5415c0102b4eeed
#: 6685d63746644578a887ce3b480a99d2 be2866343e8d4a489bac491eec80e1e3 of
#: tooluniverse.biorxiv_tool.BioRxivTool:3
#: tooluniverse.medrxiv_tool.MedRxivTool:3
msgid "Search term"
msgstr "搜索词"

#: 6ee6757e242e404fa1565cf97a275321 d3799a05244f4ba490e5c6e75571cb83
#: e3a761d4821540aebffe7edee8b14d53 e8e5ff107d1746568f7d9aa1566e9ca4 of
#: tooluniverse.biorxiv_tool.BioRxivTool:5
#: tooluniverse.medrxiv_tool.MedRxivTool:5
msgid "Max results to return (default 10, max 200)"
msgstr "返回的最大结果数（默认值为10，最大值为200）"

#: 4394e6ab2700425ea103196ad134c30c 55129dac56404812808151476d5fdeba of
#: tooluniverse.medrxiv_tool.MedRxivTool:1
msgid "Search medRxiv preprints using medRxiv's API (same interface as bioRxiv)."
msgstr "使用 medRxiv 的 API（与 bioRxiv 接口相同）搜索 medRxiv 预印本"

#: ae090e5ec9884e34912b399356ec6bcb d60439197f3645d38ac1b7d89c9e6dd4 of
#: tooluniverse.hal_tool.HALTool:1
msgid "Search the French HAL open archive via its public API."
msgstr "通过其公共 API 搜索法国 HAL 开放存档。"

#: a2577ab03f674111b008bf90c12b7eb8 ca532512acb14cb1819879ac14cafa7e of
#: tooluniverse.hal_tool.HALTool:3
msgid "Search term (Lucene syntax)"
msgstr "搜索词（Lucene 语法）"

#: 06d23883d9bb4729a77945103b3c8d8e b47fc4b2c7794f7e922fa20c2919e135 of
#: tooluniverse.hal_tool.HALTool:5
msgid "Max results to return (default 10, max 100)"
msgstr "返回的最大结果数（默认值为10，最大值为100）"

#: b2510b1da46747aba988f3fbbc0b3ed7 d1b513f00e2047f6871c7af7fe1c979a of
#: tooluniverse.core_tool.CoreTool:1
msgid "Tool for searching CORE open access academic papers."
msgstr "用于搜索CORE开放获取学术论文的工具。"

#: cf2c3688457e4f1db144c9f36d5554f4 e18e07f89e774a0095e6188b52b7eb21 of
#: tooluniverse.core_tool.CoreTool.run:1
msgid "Execute the CORE search."
msgstr "执行 CORE 搜索。"

#: 3e4adee4a21a49558c3fe73650e26ec2 406bc61619f44ee1805c3e29490e26c0
#: efd7a69bf5894f8bad92b1a4051f26c8 fe9349f79f394a779cfc678d89e1ec3f of
#: tooluniverse.core_tool.CoreTool.run:3 tooluniverse.pmc_tool.PMCTool.run:3
msgid "Dictionary containing search parameters"
msgstr "包含搜索参数的字典"

#: 7c6d99ec593349a290586b5caccb36e5 8d45ceb5ec1f41c1a0f9f5e96cf930ba
#: a1cbfaa467f540129c7f5d1929d97a3e c187fbe4a90443ab824d0c47014204b4 of
#: tooluniverse.core_tool.CoreTool.run:6 tooluniverse.pmc_tool.PMCTool.run:6
msgid "List of paper dictionaries"
msgstr "纸质词典列表"

#: 584920d7b161436d8477d6e91f380e2e 8500e0ab085848dca5f19ca1642c62de of
#: tooluniverse.pmc_tool.PMCTool:1
msgid "Tool for searching PMC full-text biomedical literature."
msgstr "用于搜索PMC全文生物医学文献的工具。"

#: 7d29044933584b9e8dce412e46e0e508 9b91952eedd8404c98e637279b2c2336 of
#: tooluniverse.pmc_tool.PMCTool.run:1
msgid "Execute the PMC search."
msgstr "执行PMC搜索。"

#: 0ab450fcb7a04d5b8418f8ed93b1f9c3 7d9437eaa50a49d1b542d60dd885bc96 of
#: tooluniverse.zenodo_tool.ZenodoTool:1
msgid "Search Zenodo records with optional community filter."
msgstr "使用可选的社区筛选器搜索Zenodo记录。"

#: ae39e7551c9145d4a5dd3487e578a5ff aeeb1978b1b6456d9aaee758c97d520f of
#: tooluniverse.zenodo_tool.ZenodoTool:4
msgid ""
"query (str): Free text query max_results (int): Max results (default 10, "
"max 200) community (str): Optional community slug to filter"
msgstr ""
"query (str): 自由文本查询  \n"
"max_results (int): 最大结果数（默认值为10，最大值为200）  \n"
"community (str): 可选的社区标识符，用于筛选"

#: ../../api/tooluniverse.rst:10 4448bbc6ec834b8d9ed43843f49dc439
msgid "Subpackages"
msgstr "子包"

#: ../../api/tooluniverse.rst:22 ceca9b0ae1ab403c92d982458264463d
msgid "Submodules"
msgstr "子模块"

#: ../../api/tooluniverse.rst:25 9780510ba0ce4e26b1f153cb7687eaf3
msgid "tooluniverse.admetai\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:33 86fd22ab4bb849a7ac410f10bf17f7c6
msgid "tooluniverse.agentic\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:41 f8d4d8f0dc4f4a06800104d31b735c85
msgid "tooluniverse.alphafold\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:49 523bf132561a4e4799dc7d12b743bf09
msgid "tooluniverse.arxiv\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:57 60b035f2631a4b93b86b8537868e853a
msgid "tooluniverse.base\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:65 76f5434953ea4146835d314cf5a176d3
msgid "tooluniverse.biogrid\\_tool module"
msgstr ""

#: 19e2c9b781df42d6b7bbc938a2a2a6e5 of tooluniverse.biogrid_tool:1
msgid "BioGRID Database REST API Tool"
msgstr ""

#: 443264632a544ae79292e19ed865db91 of tooluniverse.biogrid_tool:3
msgid ""
"This tool provides access to protein and genetic interaction data from "
"the BioGRID database. BioGRID is a comprehensive database of physical and"
" genetic interactions."
msgstr ""

#: 5c4055c6c99a4930be34536f3f7d5139 of
#: tooluniverse.biogrid_tool.BioGRIDRESTTool:1
#, fuzzy
msgid ""
"BioGRID Database REST API tool. Generic wrapper for BioGRID API endpoints"
" defined in ppi_tools.json."
msgstr ""
"AlphaFold蛋白质结构数据库API工具。用于AlphaFold "
"API端点的通用封装，端点定义在alphafold_tools.json文件中。"

#: 28530856d22b4162a3094218d4ac8d3c 58ea24173ac04c1a809877314298923c
#: 634f9721e8cd4290810f41159ff0387a ce4e4f02a6e1447b8b376695ffbfc74b of
#: tooluniverse.biogrid_tool.BioGRIDRESTTool.run:1
#: tooluniverse.geo_tool.GEORESTTool.run:1
#: tooluniverse.gwas_tool.GWASRESTTool.run:1
#: tooluniverse.string_tool.STRINGRESTTool.run:1
#, fuzzy
msgid "Execute the tool with given arguments."
msgstr "使用提供的参数执行工具。"

#: ../../api/tooluniverse.rst:73 0fbdb206f0af416fbb21537498810f24
msgid "tooluniverse.biorxiv\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:81 7b77c977b00342fcb08239ebe4c4a8cf
msgid "tooluniverse.boltz\\_tool module"
msgstr ""

#: ecf8da21ebf741baad774c32dec9143d of
#: tooluniverse.boltz_tool.Boltz2DockingTool:1
msgid ""
"Tool to perform protein-ligand docking and affinity prediction using the "
"local Boltz-2 model. This tool constructs a YAML input file, runs the "
"`boltz predict` command, and parses the output to return the predicted "
"structure and affinity."
msgstr ""

#: 8011eae5b0504117b45109991f206362 of
#: tooluniverse.boltz_tool.Boltz2DockingTool.__init__:1
msgid ""
"Initializes the BoltzDockingTool. Checks if the 'boltz' command is "
"available in the system's PATH."
msgstr ""

#: 72233eaaeeca4c5b9a51eb49920374e9 of
#: tooluniverse.boltz_tool.Boltz2DockingTool.run:1
#, fuzzy
msgid "Executes the Boltz prediction."
msgstr "执行该工具。"

#: 5a90641a5b3b49e1a8292d94d180e548 of
#: tooluniverse.boltz_tool.Boltz2DockingTool.run:3
msgid ""
"A dictionary containing the necessary inputs. - protein_sequence (str): "
"The amino acid sequence of the protein. - ligands (list[dict]): A list of"
" ligands, each with a 'smiles' or 'ccd' key. - constraints (list[dict], "
"optional): Covalent bonds or other constraints. - templates (list[dict], "
"optional): Structural templates. - other optional boltz CLI flags (e.g., "
"'recycling_steps')."
msgstr ""

#: 0a6890b8217046fc8003c71551037488 of
#: tooluniverse.boltz_tool.Boltz2DockingTool.run:10
msgid "The maximum time in seconds to wait for the Boltz command to complete."
msgstr ""

#: 04ff47da44a2434f97f11ac808b9ea71 of
#: tooluniverse.boltz_tool.Boltz2DockingTool.run:14
msgid ""
"dict: A dictionary containing the path to the predicted structure and "
"affinity data, or an error."
msgstr ""

#: ../../api/tooluniverse.rst:89 c4c37f3587624081b44c9255feaec2b0
msgid "tooluniverse.build\\_optimizer module"
msgstr ""

#: ad4018f4fed14919b9671e5d235d5526 of tooluniverse.build_optimizer:1
msgid "Build optimization utilities for ToolUniverse tools."
msgstr ""

#: ca4c7d991e754d2089fee319997faf92 of
#: tooluniverse.build_optimizer.calculate_tool_hash:1
#, fuzzy
msgid "Calculate a hash for tool configuration to detect changes."
msgstr "准备一份工具配置清单以便快速使用。"

#: a9c4e208aa34402eaa97e6d043b47bc7 of
#: tooluniverse.build_optimizer.load_metadata:1
#, fuzzy
msgid "Load tool metadata from file."
msgstr "从文件加载的工具名称列表"

#: e0e687494963412d9bc151bfa03d58e5 of
#: tooluniverse.build_optimizer.save_metadata:1
#, fuzzy
msgid "Save tool metadata to file."
msgstr "工具名称筛选列表。"

#: 64edd12286914fbea61c123b73c26156 of
#: tooluniverse.build_optimizer.cleanup_orphaned_files:1
msgid "Remove files for tools that no longer exist."
msgstr ""

#: e69400cb72a44e6a887ca9ee0d640def of
#: tooluniverse.build_optimizer.get_changed_tools:1
msgid "Get lists of new, changed, and unchanged tools."
msgstr ""

#: ../../api/tooluniverse.rst:97 b3b88da10657443b94b9eadedfd5d26c
msgid "tooluniverse.cellosaurus\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:105 c8b1a61c7c73405ea7411bd3cfc8a46d
msgid "tooluniverse.chem\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:113 877606cf44064ba8a76b73b7ea235835
msgid "tooluniverse.clinvar\\_tool module"
msgstr ""

#: bbf3b453547943eda7713adfc672f9dd of tooluniverse.clinvar_tool.ClinVarTool:1
msgid ""
"Local tool wrapper for ClinVar via NCBI E-utilities. Uses esearch + "
"esummary to fetch variant records."
msgstr ""

#: ../../api/tooluniverse.rst:121 889faf4b8ec64986973a665820951be3
msgid "tooluniverse.compose\\_tool module"
msgstr ""

#: ce22b1dd8072441cb03fe6e58189e1b3 of tooluniverse.compose_tool:1
#, fuzzy
msgid ""
"ComposeTool - A tool that composes other tools using custom code logic. "
"Supports intelligent dependency management with automatic tool loading."
msgstr "一个灵活的工具，可通过自定义代码逻辑组合其他工具。支持内联的composition_code和外部Python文件。具有智能依赖管理功能，可自动加载工具。"

#: ../../api/tooluniverse.rst:129 672136c41ac14eeab3d7c16410c5565c
msgid "tooluniverse.core\\_tool module"
msgstr ""

#: 092a04bcdc144d6db2fd2db2e92e6147 of tooluniverse.core_tool:1
#, fuzzy
msgid "CORE API Tool for searching open access academic papers."
msgstr "用于搜索CORE开放获取学术论文的工具。"

#: d91abdcb202e4081a861ac020ec058d4 of tooluniverse.core_tool:3
msgid ""
"CORE is the world's largest collection of open access research papers. "
"This tool provides access to over 200 million open access papers from "
"repositories and journals worldwide."
msgstr ""

#: ../../api/tooluniverse.rst:137 2aa65f7e42c5425ca32a82170ee8ea83
msgid "tooluniverse.crossref\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:145 adacb60d24c54a2fb7095264152a3c25
msgid "tooluniverse.ctg\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:153 e4e5642c4fd246668c67235c66cbfe40
msgid "tooluniverse.custom\\_tool module"
msgstr ""

#: 5724d07fc5cb4b65823df6302ed041f5 of tooluniverse.custom_tool:1
msgid ""
"CustomTool implementation for ToolUniverse Handles execution of "
"dynamically generated tools with external code files"
msgstr ""

#: 93f31d29313545cbb250a8702649dd66 of tooluniverse.custom_tool.CustomTool:1
msgid "CustomTool class for executing dynamically generated tools"
msgstr ""

#: baafff06e4a145d092be8c79bd5e6c4f of
#: tooluniverse.custom_tool.CustomTool.run:1
#, fuzzy
msgid "Execute the custom tool"
msgstr "执行该工具。"

#: 4d0768c5bc9249feb5eeb936bfaff6b6 of
#: tooluniverse.custom_tool.CustomTool.run:3
#, fuzzy
msgid "Input arguments for the tool"
msgstr "组成的输入参数"

#: 71881239d2ea4d8abb14251ef1e0368d of
#: tooluniverse.custom_tool.CustomTool.run:6
#, fuzzy
msgid "Dict containing the result of tool execution"
msgstr "工具执行结果"

#: ../../api/tooluniverse.rst:161 9db3d34e62ed4ba0a1497d6300109da9
msgid "tooluniverse.dailymed\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:169 c5667fb541314faa8885b68267b0111b
msgid "tooluniverse.dataset\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:177 0f6f1baf82b845bfb1936eb35ef09b84
msgid "tooluniverse.dblp\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:185 47026174fe3049b48443f34338a7e0df
msgid "tooluniverse.dbsnp\\_tool module"
msgstr ""

#: 57ae436b78d8404c949bb61c8f547bb3 of tooluniverse.dbsnp_tool.DbSnpTool:1
msgid ""
"Local tool wrapper for dbSNP via NCBI Variation Services. Fetches variant"
" by rsID using the refsnp endpoint."
msgstr ""

#: ../../api/tooluniverse.rst:193 c736fbfc54894fb59b2e472dd29f71cc
msgid "tooluniverse.default\\_config module"
msgstr ""

#: 6274ad4163c7400fa16d101f8ce0b34f of tooluniverse.default_config:1
#, fuzzy
msgid "Default tool configuration files mapping."
msgstr "从配置文件加载默认设置"

#: d95ee1f8b79e4164a032930240f5bf68 of tooluniverse.default_config:3
msgid ""
"This module contains the default mapping of tool categories to their JSON"
" configuration files. It's separated from __init__.py to avoid circular "
"imports."
msgstr ""

#: 6d393c509c7e40129407626e0097f79e of
#: tooluniverse.default_config.get_default_hook_config:1
#, fuzzy
msgid "Get default hook configuration."
msgstr "生成的钩子配置"

#: 298b865817a9448085eddfd7296e901f of
#: tooluniverse.default_config.get_default_hook_config:4
#, fuzzy
msgid "dict: Default hook configuration with basic settings"
msgstr "将默认配置应用于工具配置"

#: ../../api/tooluniverse.rst:201 1f553baa77714199bc8cd28b8bb10b12
msgid "tooluniverse.doaj\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:209 db094b95224347a89a6dfdba6c50c869
#, fuzzy
msgid "tooluniverse.doctor module"
msgstr "tooluniverse 软件包"

#: 8376029fef1542e89031bbcdd83da3eb of tooluniverse.doctor:1
#, fuzzy
msgid "ToolUniverse health checker."
msgstr "tooluniverse 软件包"

#: ../../api/tooluniverse.rst:217 f1d5f84c51114c3ab7f40a5d83b15136
msgid "tooluniverse.efo\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:225 636f8d3c9cc2406fb488e38b905794f8
msgid "tooluniverse.embedding\\_database module"
msgstr ""

#: 54dcdcb6a7f74a1785b494d220ed7633 of tooluniverse.embedding_database:1
#, fuzzy
msgid "Embedding Database Tool for ToolUniverse"
msgstr "从文档创建新的嵌入式数据库"

#: 1f4c96b218c6400e9a4c332d0c5d1b23 of tooluniverse.embedding_database:3
msgid ""
"A unified tool for managing embedding databases with FAISS vector search "
"and SQLite metadata storage. Supports creating databases from documents, "
"adding documents, searching, and loading existing databases. Uses "
"OpenAI's embedding models for text-to-vector conversion, with support for"
" Azure OpenAI."
msgstr ""

#: ../../api/tooluniverse.rst:233 f347b83b21a044fab5aaa084161590cf
msgid "tooluniverse.embedding\\_sync module"
msgstr ""

#: 2559f4edc1474835bca51500c330d8e5 of tooluniverse.embedding_sync:1
msgid "Embedding Sync Tool for ToolUniverse"
msgstr ""

#: b51a5e3cd21f49b08208d18a776cf642 of tooluniverse.embedding_sync:3
#, fuzzy
msgid ""
"Synchronize embedding databases with HuggingFace Hub for sharing and "
"collaboration. Supports uploading local databases to HuggingFace and "
"downloading databases from HuggingFace."
msgstr "将嵌入式数据库与 HuggingFace Hub 同步。支持上传本地数据库和下载共享数据库。"

#: ../../api/tooluniverse.rst:241 ab30f3bb94c04abd9d3ac3c8b6722503
#, fuzzy
msgid "tooluniverse.enrichr\\_tool module"
msgstr "ToolUniverse 或 dict，可选"

#: 6baa418056604fdca6cbd2547294b254 of tooluniverse.enrichr_tool.EnrichrTool:1
msgid "Tool to perform gene enrichment analysis using Enrichr."
msgstr ""

#: 0247eed15790420eaae3541b06af6743 of
#: tooluniverse.enrichr_tool.EnrichrTool.get_official_gene_name:1
msgid ""
"Retrieve the official gene symbol for a given gene name or synonym using "
"the MyGene.info API."
msgstr ""

#: 7901f8b9a1ac4c90900d23a84e30f672 b065e532a4dc400380975b55c490adaa of
#: tooluniverse.enrichr_tool.EnrichrTool.get_official_gene_name:4
#: tooluniverse.humanbase_tool.HumanBaseTool.get_official_gene_name:4
msgid "gene_name (str): The gene name or synonym to query."
msgstr ""

#: 0021b25a4224413b80e521b089ba04d7 of
#: tooluniverse.enrichr_tool.EnrichrTool.get_official_gene_name:7
msgid "str: The official gene symbol if found; otherwise, raises an Exception."
msgstr ""

#: 4cb00520f30b40a784f78a472b5df69f of
#: tooluniverse.enrichr_tool.EnrichrTool.submit_gene_list:1
msgid "Submit the gene list to Enrichr and return the user list ID."
msgstr ""

#: 6b758d015e054621abbb145ba40c1f1f of
#: tooluniverse.enrichr_tool.EnrichrTool.submit_gene_list:4
msgid "gene_list (str): Newline-separated string of gene names."
msgstr ""

#: 248cbcbdf1ed4b70ad6f99900e33bb22 of
#: tooluniverse.enrichr_tool.EnrichrTool.submit_gene_list:7
msgid "str: The user list ID from Enrichr."
msgstr ""

#: 56c627d2cddc4583bd97deff8b5ce998 of
#: tooluniverse.enrichr_tool.EnrichrTool.get_enrichment_results:1
msgid "Fetch enrichment results for a specific library."
msgstr ""

#: 1c8dfd2440c24efea927eb24f669661e of
#: tooluniverse.enrichr_tool.EnrichrTool.get_enrichment_results:4
msgid ""
"user_list_id (str): The user list ID from Enrichr. library (str): The "
"name of the enrichment library."
msgstr ""

#: 11cd8651504c470eb19d0cc7876c7c5e of
#: tooluniverse.enrichr_tool.EnrichrTool.get_enrichment_results:8
#, fuzzy
msgid "dict: The enrichment results."
msgstr "函数调用字符串或需验证的数据。"

#: ec7ad3bad14643c9ad05a2f017439de5 of
#: tooluniverse.enrichr_tool.EnrichrTool.build_graph:1
msgid "Initialize and build the graph with gene nodes and enriched terms."
msgstr ""

#: ad859e743ad045bf9948760284e61ba8 of
#: tooluniverse.enrichr_tool.EnrichrTool.build_graph:4
msgid ""
"genes (list): List of gene names. enrichment_results (dict): Dictionary "
"of enrichment results by library."
msgstr ""

#: 5c3eac58c6cb44d3b4cb711c10a23175 of
#: tooluniverse.enrichr_tool.EnrichrTool.build_graph:8
msgid "networkx.Graph: The constructed graph."
msgstr ""

#: 4488f31e90e54fcda2cc153d00f5e1d1 of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_by_weight:1
msgid "Find and rank paths between source and target based on total edge weight."
msgstr ""

#: 6ad66b5e1f4f440fb06ead3919379944 of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_by_weight:4
msgid ""
"G (networkx.Graph): The graph to search. source (str): The source node. "
"target (str): The target node."
msgstr ""

#: d255d9f749bc4bd081bee4a167d8ec5e of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_by_weight:9
msgid "list: List of tuples (path, weight) sorted by weight descending."
msgstr ""

#: 8c713c0582cb44cda9dbd60a469cca5f of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_to_term:1
msgid ""
"Find and rank paths from each gene to a specified term based on total "
"edge weight."
msgstr ""

#: b8d85f96dcf44a78a511a02d31638b6d of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_to_term:4
msgid ""
"G (networkx.Graph): The graph to search. gene (str): The source gene. "
"term (str): The target term."
msgstr ""

#: 8a01d893827546739f23eacdab895abb of
#: tooluniverse.enrichr_tool.EnrichrTool.rank_paths_to_term:9
msgid ""
"list or None: List of tuples (path, weight) sorted by weight descending, "
"or None if no paths."
msgstr ""

#: 70713fa90e1f41a597aad8c651c46678 of
#: tooluniverse.enrichr_tool.EnrichrTool.enrichr_api:1
msgid "Main API function to perform gene enrichment analysis."
msgstr ""

#: ef4e84282d1c4e37912385902dc103ab of
#: tooluniverse.enrichr_tool.EnrichrTool.enrichr_api:4
#, fuzzy
msgid ""
"genes (list): List of gene names. libs (list): List of enrichment "
"libraries to use."
msgstr "包含的类别列表。"

#: 16ee3d844a5943b7b0373d05ab3d0c90 of
#: tooluniverse.enrichr_tool.EnrichrTool.enrichr_api:8
#, fuzzy
msgid "tuple: (connected_path, connections) dictionaries."
msgstr "工具词典列表"

#: ../../api/tooluniverse.rst:249 73397d799be0467a8010d57eed9425fe
msgid "tooluniverse.ensembl\\_tool module"
msgstr ""

#: d83aef3c37b642acadcbf387008fb458 of tooluniverse.ensembl_tool.EnsemblTool:1
msgid ""
"Local tool wrapper for Ensembl REST API lookups. Supports symbol→gene "
"lookup (xrefs/symbol) then lookup/id to fetch metadata."
msgstr ""

#: ../../api/tooluniverse.rst:257 5df336e6205b4b6e8f422212338df22e
msgid "tooluniverse.europe\\_pmc\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:265 8bb24f81ad9b4e059a4e9fc4290cd4d7
#, fuzzy
msgid "tooluniverse.exceptions module"
msgstr "ToolUniverse 或 dict，可选"

#: f752404b563c45138d0892f2606b28ec of tooluniverse.exceptions:1
#, fuzzy
msgid "ToolUniverse Exception Classes"
msgstr "ToolUniverse 或 dict，可选"

#: 1748db0b146f489eb10f3da35c31fb5b of tooluniverse.exceptions:3
msgid ""
"Structured exceptions for tool execution errors with actionable recovery "
"guidance."
msgstr ""

#: 209c424d78104449bffdac900266de10 86da780ab41545409339b31f58cbe4fe of
#: tooluniverse.exceptions.ToolError:1
#: tooluniverse.toolspace_validator.ValidationError:1
#, fuzzy
msgid "Bases: :py:class:`Exception`"
msgstr "基类：:py:class:`object`"

#: ebf2863ed9a34dd78fe84d03b26ee20f of tooluniverse.exceptions.ToolError:1
msgid "Base exception for all tool-related errors."
msgstr ""

#: b68637be10294bc89c47fe362abdae1c of tooluniverse.exceptions.ToolError:5
msgid "Type of error for classification"
msgstr ""

#: d7b1cce4ac85496c837effe71218348d of tooluniverse.exceptions.ToolError:11
#, fuzzy
msgid "Whether the operation can be retried"
msgstr "是否已执行参数验证"

#: 02ea923fc51e4966aef416eb5e5a7eb7 0790ce1029574e3e9a59fa92228596e5
#: 484e15f6ef8b4f4f919b50f6a8373112 of tooluniverse.exceptions.ToolError:13
#: tooluniverse.output_hook.HookManager:31
#: tooluniverse.output_hook.OutputHook:27
#, fuzzy
msgid ":py:class:`bool`"
msgstr ":py:class:`列表`"

#: 66e02df41eaa40bd96d91a6e7e9a7ba2 of tooluniverse.exceptions.ToolError:17
msgid "Actionable steps to resolve the error"
msgstr ""

#: 029602caf114410caa0e28e7c5d39aaa 854b6ced20844fa2b8d3a7c8fb8f94fa of
#: tooluniverse.exceptions.ToolError:23
#: tooluniverse.utils.format_error_response:10
msgid "Additional context about the error"
msgstr ""

#: 6f607f3791694b7fadb1abc82dbe8019 of
#: tooluniverse.exceptions.ToolError.to_dict:1
#, fuzzy
msgid "Convert exception to structured dictionary format."
msgstr "将原始异常分类为结构化的 ToolError。"

#: 04f0fbe735fb4a548f1235cd53e732e1 1b1c31c7d4c64bbc84c768c70aaa7631
#: 2ed1a81c284a4634a26bd56dd2912dd4 735ad58428db4dbebe6215cf3fc441e1
#: a330c5eded874425b58fb5568ffe3c29 c1c1a97ccc9d4131bb33077002fefb97
#: df654e15f61a443c8230a3191b424757 of tooluniverse.exceptions.ToolAuthError:1
#: tooluniverse.exceptions.ToolConfigError:1
#: tooluniverse.exceptions.ToolDependencyError:1
#: tooluniverse.exceptions.ToolRateLimitError:1
#: tooluniverse.exceptions.ToolServerError:1
#: tooluniverse.exceptions.ToolUnavailableError:1
#: tooluniverse.exceptions.ToolValidationError:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.exceptions.ToolError`"
msgstr "基础类：:py:class:`~tooluniverse.base_tool.BaseTool`"

#: e70fef3627ff41ea8df31c93de9aa964 of tooluniverse.exceptions.ToolAuthError:1
msgid ""
"Authentication or authorization error (missing/invalid API key, "
"permissions)."
msgstr ""

#: 9c8ad22063b84c0c93cb81b39be02405 of
#: tooluniverse.exceptions.ToolUnavailableError:1
msgid ""
"Tool or service is unavailable (network issues, service down, tool not "
"found)."
msgstr ""

#: 673f3d00fa944056ac6ed0b6e1466668 of
#: tooluniverse.exceptions.ToolRateLimitError:1
msgid "Rate limit or quota exceeded."
msgstr ""

#: 9bf24b930f7348ce9cbc39c2d5798092 of
#: tooluniverse.exceptions.ToolValidationError:1
msgid "Parameter validation failed (invalid parameters, schema mismatch)."
msgstr ""

#: aa0b59d89086458c82094f87cd6f2c25 of
#: tooluniverse.exceptions.ToolConfigError:1
msgid "Tool configuration error (missing config, invalid setup)."
msgstr ""

#: b104ed9c2dbb441ebbdf083ce036ae2a of
#: tooluniverse.exceptions.ToolDependencyError:1
msgid "Missing or incompatible dependencies."
msgstr ""

#: a5c8528027f146d8bf36eb1384421672 of
#: tooluniverse.exceptions.ToolServerError:1
msgid "Server-side error (5xx responses, unexpected failures)."
msgstr ""

#: ../../api/tooluniverse.rst:273 1b9f1c8ecc234c87a543d6e50edd8cd8
#, fuzzy
msgid "tooluniverse.execute\\_function module"
msgstr ""
"execute_tooluniverse_function:  \n"
"执行_tooluniverse_函数"

#: 8d1c50c15ec4443ba822a85ca55264c5 of tooluniverse.execute_function:1
#, fuzzy
msgid "ToolUniverse Function Execution Module"
msgstr "execute_tooluniverse_function 提供直接的工具访问"

#: b288fdfcb87a4570a004a37a856e6b99 of tooluniverse.execute_function:3
msgid ""
"This module provides the core ToolUniverse class for managing and "
"executing various scientific and data tools. It supports loading tools "
"from JSON configurations, organizing them by categories, validating "
"function calls, and executing tools with proper error handling and "
"caching."
msgstr ""

#: e59da38e608a43b4b9c8d787e1610d96 of tooluniverse.execute_function:7
msgid ""
"The module includes support for: - GraphQL tools (OpenTarget, OpenTarget "
"Genetics) - RESTful API tools (Monarch, ChEMBL, PubChem, etc.) - FDA drug"
" labeling and adverse event tools - Clinical trials tools - Literature "
"search tools (EuropePMC, Semantic Scholar, PubTator) - Biological "
"databases (HPA, Reactome, UniProt) - MCP (Model Context Protocol) clients"
" and auto-loaders - Enrichment analysis tools - Package management tools"
msgstr ""

#: a7297e24306441399550c6816e4c28c3 of tooluniverse.execute_function:18
#, fuzzy
msgid "Classes:"
msgstr "提升："

#: b9ade45b0df444228ab9de0b8877b1ce of tooluniverse.execute_function:19
msgid "ToolUniverse: Main class for tool management and execution"
msgstr ""

#: d4b50406e0d4496a9c8062b4fbfc06a2 of tooluniverse.execute_function:21
msgid "Constants:"
msgstr ""

#: 484be20f5e614e62b8284baceedad58e of tooluniverse.execute_function:22
msgid ""
"default_tool_files: Default mapping of tool categories to JSON file paths"
" tool_type_mappings: Mapping of tool type strings to their implementation"
" classes"
msgstr ""

#: 33ad921e618348a8a79d294f95f6e4f1 of
#: tooluniverse.execute_function.ToolCallable:1
msgid ""
"A callable wrapper for a tool that validates kwargs and calls "
"run_one_function."
msgstr ""

#: 9f20bf9223f54802a6c7ff997b3091c5 of
#: tooluniverse.execute_function.ToolCallable:3
msgid ""
"This class provides the dynamic function interface for tools, allowing "
"them to be called like regular Python functions with keyword arguments."
msgstr ""

#: 7598d2e14dcc4d68962f48700073049c of
#: tooluniverse.execute_function.ToolCallable.__call__:1
#, fuzzy
msgid "Execute the tool with the provided keyword arguments."
msgstr "使用提供的参数执行工具。"

#: 1f06cd0ae421427fa5653526958d4456 of
#: tooluniverse.execute_function.ToolCallable.__call__:3
#, fuzzy
msgid "Optional callback for streaming responses"
msgstr "用于流式输出的回调函数"

#: 6a5404d738204e7f8b16e48bb50e826c of
#: tooluniverse.execute_function.ToolCallable.__call__:4
#, fuzzy
msgid "Whether to use result caching"
msgstr "是否启用输出钩子。默认为 False。"

#: e13b0fdce0d044c19090c74beb443f24 of
#: tooluniverse.execute_function.ToolCallable.__call__:5
#, fuzzy
msgid "Whether to validate parameters against schema"
msgstr "是否启用详细输出。默认值为 True。"

#: 20ed991bdc044356b24327278febbb64 of
#: tooluniverse.execute_function.ToolCallable.__call__:8
#, fuzzy
msgid "Tool execution result"
msgstr "# 工具执行逻辑"

#: 968639e9e1b145918d432b1aa12bbbe5 of
#: tooluniverse.execute_function.ToolNamespace:1
msgid "Dynamic namespace for accessing tools as callable functions."
msgstr ""

#: b4c672c405bf4dfa9bf54c998b7a130d of
#: tooluniverse.execute_function.ToolNamespace:3
msgid ""
"This class provides the `tu.tools.tool_name(**kwargs)` interface, "
"dynamically creating ToolCallable instances for each available tool."
msgstr ""

#: 39a936f0fe7e4782a3e7858cf67ae445 of
#: tooluniverse.execute_function.ToolNamespace.__getattr__:1
msgid "Return a ToolCallable for the requested tool name."
msgstr ""

#: f77d0fb4f338447082febc954e7049ae of
#: tooluniverse.execute_function.ToolNamespace.__len__:1
#, fuzzy
msgid "Return the number of available tools."
msgstr "获取可用工具的统计信息。"

#: 8484115ee0de4c87b8e21fde0121d8bc of
#: tooluniverse.execute_function.ToolNamespace.__iter__:1
#, fuzzy
msgid "Iterate over tool names."
msgstr "可用工具名称列表"

#: 18fe823f237c442395018e6eb6a9ab85 of
#: tooluniverse.execute_function.ToolNamespace.__contains__:1
#, fuzzy
msgid "Check if a tool exists."
msgstr "检查数据库是否存在"

#: 4d9ef671b0c940fda692f22ce87aa8fa of
#: tooluniverse.execute_function.ToolNamespace.refresh:1
#, fuzzy
msgid "Refresh tool discovery (re-discover MCP/remote tools)."
msgstr "刷新工具发现（重新发现 MCP/远程工具，重新加载配置）。"

#: ../../api/tooluniverse.rst:281 b65530c0197e4f1781f4b3cb33163f4f
msgid "tooluniverse.extended\\_hooks module"
msgstr ""

#: d242e4e07bd64b97b5185c0ffd90e008 of tooluniverse.extended_hooks:1
#, fuzzy
msgid "Extended Hook Types for ToolUniverse"
msgstr "从 ToolUniverse 获取有效的工具类别。"

#: dd6a1ce0486842a792dabf2e8bfe13cb of tooluniverse.extended_hooks:3
msgid ""
"This module demonstrates how to extend the hook system with additional "
"hook types beyond summarization. It shows the pattern for creating new "
"hook types while maintaining compatibility with the existing system."
msgstr ""

#: 0e1dd67fb2024661ae386bc7c72be3be 5b6e8883ef814855bf923545ab5213a6
#: 80cfd41f22004b46a84d80e10bf25d20 995a30212b0d4bf79d37dbd70cd24728
#: 9ad36bdcb20c48d49e54c91dc8edbf6c ff58a4c52b864405b56c98fe8f2c0d88 of
#: tooluniverse.extended_hooks.FilteringHook:1
#: tooluniverse.extended_hooks.FormattingHook:1
#: tooluniverse.extended_hooks.LoggingHook:1
#: tooluniverse.extended_hooks.ValidationHook:1
#: tooluniverse.output_hook.FileSaveHook:1
#: tooluniverse.output_hook.SummarizationHook:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.output_hook.OutputHook`"
msgstr "基础类：:py:class:`~tooluniverse.restful_tool.RESTfulTool`"

#: e8031801f66a422ba15ed644430ea860 of
#: tooluniverse.extended_hooks.FilteringHook:1
msgid "Hook for filtering sensitive or unwanted content from tool outputs."
msgstr ""

#: bf79158e76d64fe397fadfdae5a14f1d of
#: tooluniverse.extended_hooks.FilteringHook:3
msgid ""
"This hook can be used to: - Remove sensitive information (emails, phones,"
" SSNs) - Filter inappropriate content - Sanitize data before display"
msgstr ""

#: 40f88861103b404fabac4794fbe23a1c of
#: tooluniverse.extended_hooks.FilteringHook:8
#, fuzzy
msgid "Hook configuration containing filter settings"
msgstr "包含LLM设置和提示的配置字典"

#: 84d26ba9cffc475baea077b543f2ec7b of
#: tooluniverse.extended_hooks.FilteringHook:10
msgid "Optional ToolUniverse instance (not used for filtering)"
msgstr ""

#: 7cad854bdddf4bd48953bd96a255f30a of
#: tooluniverse.extended_hooks.FilteringHook.__init__:1
#, fuzzy
msgid "Initialize the filtering hook with configuration."
msgstr "使用配置和RAG模型初始化ToolFinderEmbedding。"

#: 0f1fd64360a748689718d3c1cfd21001 24226e957bd846afbdb28460bbbd8952
#: 3e9dee0838054f719a7a1f347bab1ed4 8407c843cc784daca10608cddb729fca
#: 970a6cf6c89e492088d9a5b3fd5d1900 c50ad3e1974e49bfa2a20498cd132769 of
#: tooluniverse.extended_hooks.FilteringHook.__init__:3
#: tooluniverse.extended_hooks.FormattingHook.__init__:3
#: tooluniverse.extended_hooks.LoggingHook.__init__:3
#: tooluniverse.extended_hooks.ValidationHook.__init__:3
#: tooluniverse.output_hook.OutputHook:13
#: tooluniverse.output_hook.SummarizationHook.__init__:3
#, fuzzy
msgid "Hook configuration"
msgstr "工具配置"

#: 2b4b049e71c54d959576dbc4bfb7f954 3e63f8d7e21140faaed48cc33354b090
#: c2429458740c49e78d2c9f4da632d51a ec6cd201988e487ea19e8dc0a911e9b0 of
#: tooluniverse.extended_hooks.FilteringHook.__init__:5
#: tooluniverse.extended_hooks.FormattingHook.__init__:5
#: tooluniverse.extended_hooks.LoggingHook.__init__:5
#: tooluniverse.extended_hooks.ValidationHook.__init__:5
#, fuzzy
msgid "ToolUniverse instance (optional, not used)"
msgstr "ToolUniverse 或 dict，可选"

#: 96fcc17e0b67415796a97ecbcff61d57 of
#: tooluniverse.extended_hooks.FilteringHook.process:1
#, fuzzy
msgid "Apply filtering to the tool output."
msgstr "将默认配置应用于工具配置"

#: ceeb004a0cf9491e9a94f6d4974c9051 of
#: tooluniverse.extended_hooks.FilteringHook.process:3
#, fuzzy
msgid "The tool output to filter"
msgstr "输出文件路径"

#: 1b7c1a33bb294a8c8a87c39ba6013435 259e3604b57d4be5be6020995570d9ad
#: 2628490c14c24bdb9b989e1caead5908 37a63b28781b40539518842106654e3c
#: 60bc266f198f4da4a0e858109bc9b94e 791a1b5eecd948849bc35ac4182d4df9
#: 79d92e886a2d4791b1cd9b7fe61de99b 9d2d7271c76f424ca872e236ad082bf0
#: b4528901e948452bb0bbc9d5e7dc7954 f562a3074a05498492afa6206860ce90 of
#: tooluniverse.extended_hooks.FilteringHook.process:5
#: tooluniverse.extended_hooks.FormattingHook.process:5
#: tooluniverse.extended_hooks.LoggingHook.process:5
#: tooluniverse.extended_hooks.ValidationHook.process:5
#: tooluniverse.output_hook.FileSaveHook.process:5
#: tooluniverse.output_hook.HookManager.apply_hooks:9
#: tooluniverse.output_hook.HookRule.evaluate:5
#: tooluniverse.output_hook.OutputHook.process:8
#: tooluniverse.output_hook.OutputHook.should_trigger:5
#: tooluniverse.output_hook.SummarizationHook.process:10
#, fuzzy
msgid "Name of the tool that produced the output"
msgstr "评分工具名称"

#: 01ea33c853ca466e96f06242ea791953 4072c362d1c24b0fbb52ad4ca79bd43e
#: 4eca5b47328f41a1b2364357edaf7483 6099ddabdb06491fb87849ccc7e2cd1f
#: 60e8cb39677f442b868480b65e654176 678b4f810e3a43079c0aec027ddce1c8
#: 70a19730f8514a90b5df337399e5cf48 75f869267a514b9ba02fab743d426f7e
#: 90f5b6c97dc54bf497e03c2dfd11e833 f867837fafb945cdbb69d2b323175d17 of
#: tooluniverse.extended_hooks.FilteringHook.process:7
#: tooluniverse.extended_hooks.FormattingHook.process:7
#: tooluniverse.extended_hooks.LoggingHook.process:7
#: tooluniverse.extended_hooks.ValidationHook.process:7
#: tooluniverse.output_hook.FileSaveHook.process:7
#: tooluniverse.output_hook.HookManager.apply_hooks:11
#: tooluniverse.output_hook.HookRule.evaluate:7
#: tooluniverse.output_hook.OutputHook.process:10
#: tooluniverse.output_hook.OutputHook.should_trigger:7
#: tooluniverse.output_hook.SummarizationHook.process:12
#, fuzzy
msgid "Arguments passed to the tool"
msgstr "传递给工具的参数"

#: 057bd37f3b73434b9dec65081840a2a8 19829ff039bb4320bb87973310c84918
#: 44ed02aad73547c79005205bc348c571 87ea7c5329854ae79e08b866febaa076
#: 8f9ba40000d84e2ea5bf402e7ab84cab a4349be63b8845e3849b38f33b4f3498
#: afeb11f2a6894f52842b9ce4ce60e8c9 bf0d77f391a146a5ae6549acdf0d2fb5
#: e7dadab0db594c539a9305f389ba5436 of
#: tooluniverse.extended_hooks.FilteringHook.process:9
#: tooluniverse.extended_hooks.FormattingHook.process:9
#: tooluniverse.extended_hooks.LoggingHook.process:9
#: tooluniverse.extended_hooks.ValidationHook.process:9
#: tooluniverse.output_hook.HookManager.apply_hooks:13
#: tooluniverse.output_hook.HookRule.evaluate:9
#: tooluniverse.output_hook.OutputHook.process:12
#: tooluniverse.output_hook.OutputHook.should_trigger:9
#: tooluniverse.output_hook.SummarizationHook.process:14
#, fuzzy
msgid "Additional context information"
msgstr "附加配置选项："

#: 536ac98d48484558b77e9931676c7cc9 of
#: tooluniverse.extended_hooks.FilteringHook.process:13
msgid "Any: The filtered output, or original output if filtering fails"
msgstr ""

#: 814a60c22e6249ef986ab432c6d7b649 of
#: tooluniverse.extended_hooks.FormattingHook:1
msgid "Hook for formatting and beautifying tool outputs."
msgstr ""

#: 3e1ad8a640cd4406a87f5d2ad0486173 of
#: tooluniverse.extended_hooks.FormattingHook:3
msgid ""
"This hook can be used to: - Pretty-print JSON/XML outputs - Format text "
"with proper indentation - Standardize output formats"
msgstr ""

#: f313117338654f308ca68b3bf8e85d54 of
#: tooluniverse.extended_hooks.FormattingHook:8
#, fuzzy
msgid "Hook configuration containing formatting settings"
msgstr "包含LLM设置和提示的配置字典"

#: 27cdd431e1e349e5beb6fa36f353b95a of
#: tooluniverse.extended_hooks.FormattingHook:10
msgid "Optional ToolUniverse instance (not used for formatting)"
msgstr ""

#: 29c7caa34bc74027a78e57236ef66eba of
#: tooluniverse.extended_hooks.FormattingHook.__init__:1
#, fuzzy
msgid "Initialize the formatting hook with configuration."
msgstr "使用配置初始化 OpenAI 客户端"

#: 950e1fab118d42a2832312be777f07ca of
#: tooluniverse.extended_hooks.FormattingHook.process:1
#, fuzzy
msgid "Apply formatting to the tool output."
msgstr "将默认配置应用于工具配置"

#: 93a816e44b29491c8198d4640655503d of
#: tooluniverse.extended_hooks.FormattingHook.process:3
msgid "The tool output to format"
msgstr ""

#: cda1d273b5ae415086efec4dbe15a882 of
#: tooluniverse.extended_hooks.FormattingHook.process:13
msgid "Any: The formatted output, or original output if formatting fails"
msgstr ""

#: 413e644b18bd486e83b9de63bad75e38 of
#: tooluniverse.extended_hooks.ValidationHook:1
msgid "Hook for validating tool outputs against schemas or rules."
msgstr ""

#: afe80b462604412db05ceb101e8f2611 of
#: tooluniverse.extended_hooks.ValidationHook:3
msgid ""
"This hook can be used to: - Validate JSON against schemas - Check "
"required fields - Ensure data quality"
msgstr ""

#: 9b779d1cc9cd4b288a766dcdcca265fe of
#: tooluniverse.extended_hooks.ValidationHook:8
#, fuzzy
msgid "Hook configuration containing validation settings"
msgstr "包含LLM设置和提示的配置字典"

#: 4a50e59b094d48269f0c140fd83c5e4f of
#: tooluniverse.extended_hooks.ValidationHook:10
msgid "Optional ToolUniverse instance (not used for validation)"
msgstr ""

#: 821427a6d59d491e913f62cfe6f51d5e of
#: tooluniverse.extended_hooks.ValidationHook.__init__:1
#, fuzzy
msgid "Initialize the validation hook with configuration."
msgstr "使用配置初始化 OpenAI 客户端"

#: 4e25872a593443b5a5a1683b6bc010d7 of
#: tooluniverse.extended_hooks.ValidationHook.process:1
#, fuzzy
msgid "Apply validation to the tool output."
msgstr "将默认配置应用于工具配置"

#: 699cfc32878a4861aa8a5afe297b3008 of
#: tooluniverse.extended_hooks.ValidationHook.process:3
#, fuzzy
msgid "The tool output to validate"
msgstr "要注册的工具类"

#: d38d695f071a49a380bd7e9d5a133b57 of
#: tooluniverse.extended_hooks.ValidationHook.process:13
msgid "Any: The validated output, or original output if validation fails"
msgstr ""

#: bf573ed6194848c4b2f799a73096bb56 of
#: tooluniverse.extended_hooks.LoggingHook:1
msgid "Hook for logging tool outputs and execution details."
msgstr ""

#: 2acbb402f1e34307a5e6be8e62480244 of
#: tooluniverse.extended_hooks.LoggingHook:3
msgid ""
"This hook can be used to: - Log all tool outputs - Track execution "
"metrics - Audit tool usage"
msgstr ""

#: 6d2c6597461b4392acea20176f1cf2fe of
#: tooluniverse.extended_hooks.LoggingHook:8
#, fuzzy
msgid "Hook configuration containing logging settings"
msgstr "包含LLM设置和提示的配置字典"

#: 57e72f7296554647aa9b01cf77bdfa16 of
#: tooluniverse.extended_hooks.LoggingHook:10
msgid "Optional ToolUniverse instance (not used for logging)"
msgstr ""

#: 69cf7a9c46884533b2d53931f6d877f5 of
#: tooluniverse.extended_hooks.LoggingHook.__init__:1
#, fuzzy
msgid "Initialize the logging hook with configuration."
msgstr "使用配置初始化 OpenAI 客户端"

#: 097082c5afc9485788dfb616105d6fbf of
#: tooluniverse.extended_hooks.LoggingHook.process:1
#, fuzzy
msgid "Log the tool output and execution details."
msgstr "高效的工具查找与执行"

#: 150721682760441fa0cfca2ea2a5e692 of
#: tooluniverse.extended_hooks.LoggingHook.process:3
#, fuzzy
msgid "The tool output to log"
msgstr "输出文件路径"

#: ab23ca470938417e8e096ead189def4e of
#: tooluniverse.extended_hooks.LoggingHook.process:13
msgid "Any: The original output (logging doesn't modify the output)"
msgstr ""

#: ../../api/tooluniverse.rst:289 5b0e5c5699bf4f028d05344b79eb67bd
msgid "tooluniverse.fatcat\\_tool module"
msgstr ""

#: c1909201454d47e88d0522843f56b5f3 of
#: tooluniverse.fatcat_tool.FatcatScholarTool:1
msgid "Search Internet Archive Scholar via Fatcat releases search."
msgstr ""

#: 9a05268362b74cc7bf6ff1d9bc36ae62 of
#: tooluniverse.fatcat_tool.FatcatScholarTool:4
#, fuzzy
msgid ""
"query (str): Query string max_results (int): Max results (default 10, max"
" 100)"
msgstr ""
"query (str): 自由文本查询  \n"
"max_results (int): 最大结果数（默认值为10，最大值为200）  \n"
"community (str): 可选的社区标识符，用于筛选"

#: ../../api/tooluniverse.rst:297 20e9347aa8df412ba37c1c500877c1d1
msgid "tooluniverse.gene\\_ontology\\_tool module"
msgstr ""

#: 1e2445a53abd472683cca6d2fc1a5be4 of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool:1
msgid ""
"A general-purpose tool for calling the Gene Ontology (GO) API. It is "
"configured via a dictionary that defines the specific API endpoint."
msgstr ""

#: fd50b85eea9f4eeebd68306bec056768 of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.__init__:1
#, fuzzy
msgid "Initializes the tool with a configuration."
msgstr "初始化 ToolUniverse 并加载工具文件配置。"

#: 3c45a6dcc2ae418fb8a196bbcfd75435 of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.__init__:3
#, fuzzy
msgid "A dictionary containing 'fields' with an 'endpoint'."
msgstr "包含函数名称和参数的字典。"

#: 3d8fae68508e4c05bd55578e32c0980c of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.run:1
msgid "Executes the API call and returns the data."
msgstr ""

#: a0f5f48cd1c348d2a141c05a8826a620 of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.run:3
#, fuzzy
msgid "Parameters for the API call."
msgstr "与工具定义中的参数相对应的工具参数字典。"

#: c7b068f9b63c4913a7f413819c8d44ba of
#: tooluniverse.gene_ontology_tool.GeneOntologyTool.run:7
#, fuzzy
msgid "Any: The JSON data from the API or an error dictionary."
msgstr "API 返回的 JSON 响应作为字典，"

#: ../../api/tooluniverse.rst:305 92e9233714df452781908e8faf2d30a2
msgid "tooluniverse.generate\\_tools module"
msgstr ""

#: 7a45cc601a2b4902b0b5a98c53ff9d44 of tooluniverse.generate_tools:1
msgid "Minimal tools generator - one tool, one file."
msgstr ""

#: ce704ed028814a9a88ec299d82dfebb4 of
#: tooluniverse.generate_tools.json_type_to_python:1
msgid "Convert JSON type to Python type."
msgstr ""

#: 7a1c375055eb4df4b446fac9c161882d of
#: tooluniverse.generate_tools.generate_tool_file:1
#, fuzzy
msgid "Generate one file for one tool."
msgstr "为此工具调用生成缓存键。"

#: d66aa2086e664e9580b37ff45a0b41c7 of
#: tooluniverse.generate_tools.generate_init:1
msgid "Generate __init__.py with all imports."
msgstr ""

#: e90714a7e08048f48f1b34ea91e94044 of tooluniverse.generate_tools.main:1
msgid "Generate tools and format the generated files if enabled."
msgstr ""

#: fff80d75c4b24bfc8a65f3b0ea8fbd89 of tooluniverse.generate_tools.main:3
msgid ""
"If format_enabled is None, decide based on TOOLUNIVERSE_SKIP_FORMAT env "
"var (skip when set to \"1\")."
msgstr ""

#: ../../api/tooluniverse.rst:313 8db489605f254964b5a5f9ddb334708b
msgid "tooluniverse.genomics\\_gene\\_search\\_tool module"
msgstr ""

#: 8d22e82b484e4ecab4a9b7f1a7fa155a of
#: tooluniverse.genomics_gene_search_tool.GWASGeneSearch:1
msgid ""
"Local tool wrapper for GWAS Catalog REST API. Searches associations by "
"gene name."
msgstr ""

#: ../../api/tooluniverse.rst:321 3824e16629b04b48a9e21bb6aa858e3c
msgid "tooluniverse.geo\\_tool module"
msgstr ""

#: b1c30d97d1e4467c89e7b9f664cd06a6 of tooluniverse.geo_tool:1
#, fuzzy
msgid "GEO Database REST API Tool"
msgstr "获取数据库信息"

#: 819f9f5faed84b05a2cda7815ee2f398 of tooluniverse.geo_tool:3
msgid ""
"This tool provides access to gene expression data from the GEO database. "
"GEO is a public repository that archives and freely distributes "
"microarray, next-generation sequencing, and other forms of high-"
"throughput functional genomics data."
msgstr ""

#: e9d706154de8408182f613e912763b73 of tooluniverse.geo_tool.GEORESTTool:1
#, fuzzy
msgid ""
"GEO Database REST API tool. Generic wrapper for GEO API endpoints defined"
" in expression_tools.json."
msgstr ""
"AlphaFold蛋白质结构数据库API工具。用于AlphaFold "
"API端点的通用封装，端点定义在alphafold_tools.json文件中。"

#: ../../api/tooluniverse.rst:329 cf6d5535dff84448b3c9f7a0efd011b5
msgid "tooluniverse.gnomad\\_tool module"
msgstr ""

#: 5347d4fce83343e7ba2d4f56f8bfe9c7 of tooluniverse.gnomad_tool.GnomadTool:1
msgid ""
"Local tool wrapper for gnomAD GraphQL API. Queries variant information "
"including allele frequencies."
msgstr ""

#: ../../api/tooluniverse.rst:337 51a3268af9164d77a81d4bfe3aec2023
msgid "tooluniverse.graphql\\_tool module"
msgstr ""

#: 576ca183f2f74ed2b6f44498f2dec771 of
#: tooluniverse.graphql_tool.remove_none_and_empty_values:1
msgid "Remove all key-value pairs where the value is None or an empty list"
msgstr ""

#: ../../api/tooluniverse.rst:345 cb5a4642dbdf4c09835dc3256c1abe78
msgid "tooluniverse.gwas\\_tool module"
msgstr ""

#: c41e548564214fcdbb235d4578703204 of tooluniverse.gwas_tool.GWASRESTTool:1
msgid "Base class for GWAS Catalog REST API tools."
msgstr ""

#: ../../api/tooluniverse.rst:353 c7f214c2a3d84bd2983fdd47a62d38f3
msgid "tooluniverse.hal\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:361 3d79c790816244e89ba353e043ac8dbb
#, fuzzy
msgid "tooluniverse.hpa\\_tool module"
msgstr "tooluniverse 软件包"

#: 3ef4551d09414c4db69850af7b7d9c68 of tooluniverse.hpa_tool.HPASearchApiTool:1
msgid ""
"Base class for interacting with HPA's search_download.php API. Uses HPA's"
" search and download API to get protein expression data."
msgstr ""

#: dd9360c6f70a4366acc59ec4c675576c of tooluniverse.hpa_tool.HPAJsonApiTool:1
#, python-brace-format
msgid ""
"Base class for interacting with HPA's /{ensembl_id}.json API. More "
"efficient for getting comprehensive gene data."
msgstr ""

#: 417d6a42a9bf4c8b945a0a99e554dd3d of tooluniverse.hpa_tool.HPAXmlApiTool:1
#, python-brace-format
msgid ""
"Base class for interacting with HPA's /{ensembl_id}.xml API. Optimized "
"for comprehensive XML data extraction."
msgstr ""

#: 4499f5da26c44b28a1ab40fc8e2b3586 of
#: tooluniverse.hpa_tool.HPAGetRnaExpressionBySourceTool:1
msgid ""
"Get RNA expression for a gene from specific biological sources using "
"optimized columns parameter. This tool directly leverages the "
"comprehensive columns table for efficient queries."
msgstr ""

#: 6a36420bb7634bb1babde59b66ccad4f of
#: tooluniverse.hpa_tool.HPAGetSubcellularLocationTool:1
msgid ""
"Get annotated subcellular locations for a protein using optimized columns"
" parameter. Uses scml (main location) and scal (additional location) "
"columns for efficient queries."
msgstr ""

#: 22fa07d9c0f847879b40464a08932cc6 of
#: tooluniverse.hpa_tool.HPASearchGenesTool:1
msgid ""
"Search for matching genes by gene name, keywords, or cell line names and "
"return Ensembl ID list. This is the entry tool for many query workflows."
msgstr ""

#: 172e1c268f2c44fb9053bd1d733069b7 of
#: tooluniverse.hpa_tool.HPAGetComparativeExpressionTool:1
msgid ""
"Compare gene expression levels in specific cell lines and healthy "
"tissues. Get expression data for comparison by gene name and cell line "
"name."
msgstr ""

#: 165896de9f28491c98f75a413e2c2c8f of
#: tooluniverse.hpa_tool.HPAGetDiseaseExpressionTool:1
msgid ""
"Get expression data for a gene in specific diseases and tissues. Get "
"related expression information by gene name, tissue type, and disease "
"name."
msgstr ""

#: e6ca62347f44424ebd0001364187c5fe of
#: tooluniverse.hpa_tool.HPAGetBiologicalProcessTool:1
msgid ""
"Get biological process information related to a gene. Get specific "
"biological processes a gene is involved in by gene name."
msgstr ""

#: 38941e905aab4a62a7cb42755b93fc37 of
#: tooluniverse.hpa_tool.HPAGetCancerPrognosticsTool:1
msgid ""
"Get prognostic value of a gene across various cancers. Uses the efficient"
" JSON API to retrieve cancer prognostic data."
msgstr ""

#: 3eac9f8891ec46a887afca1b1d5c0f96 of
#: tooluniverse.hpa_tool.HPAGetProteinInteractionsTool:1
msgid ""
"Get protein-protein interaction partners for a gene. Uses search API to "
"retrieve interaction data."
msgstr ""

#: 090e93e78f18459a80f3195ca996fb78 of
#: tooluniverse.hpa_tool.HPAGetRnaExpressionByTissueTool:1
msgid ""
"Query RNA expression levels for a gene in specific tissues. More precise "
"than general tissue expression queries."
msgstr ""

#: 81845a8903f04fe7bd16b1a886eba34f of
#: tooluniverse.hpa_tool.HPAGetContextualBiologicalProcessTool:1
msgid ""
"Analyze a gene's biological processes in the context of specific tissue "
"or cell line. Enhanced with intelligent context validation and "
"recommendation."
msgstr ""

#: 6ae90f596e4d4eea9c7ae69ba9bc8721 of
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.hpa_tool.HPAXmlApiTool`"
msgstr "基础：:py:class:`~tooluniverse.hpa_tool.HPAJsonApiTool`"

#: 325d0ab535304fe9b5f547f846e842fa of
#: tooluniverse.hpa_tool.HPAGetGenePageDetailsTool:1
msgid ""
"Get detailed information about a gene page, including images, protein "
"expression, antibody data, etc. Get the most comprehensive data by "
"parsing HPA's single gene XML endpoint. Enhanced version with improved "
"image extraction and comprehensive data parsing based on optimization "
"plan."
msgstr ""

#: ../../api/tooluniverse.rst:369 a6b8a587452243d0abc12e29a7fc0e32
msgid "tooluniverse.humanbase\\_tool module"
msgstr ""

#: 5303d2de201c4d389a4c91952218693a of
#: tooluniverse.humanbase_tool.HumanBaseTool:1
msgid ""
"Tool to retrieve protein-protein interactions and biological processes "
"from HumanBase."
msgstr ""

#: b07e739f27434d5a8718d698521ece72 of
#: tooluniverse.humanbase_tool.HumanBaseTool.get_official_gene_name:1
msgid "Retrieve the official gene symbol (same as EnrichrTool method)"
msgstr ""

#: f9687ce4c335418e8e882eef18565c2a of
#: tooluniverse.humanbase_tool.HumanBaseTool.get_official_gene_name:7
msgid "str: The official gene symbol."
msgstr ""

#: d366076bc8ca4e7bbf1988a15c6d4d51 of
#: tooluniverse.humanbase_tool.HumanBaseTool.get_entrez_ids:1
msgid "Convert gene names to Entrez IDs using NCBI Entrez API."
msgstr ""

#: 17f859b157274bda8494e121db1dd5e7 of
#: tooluniverse.humanbase_tool.HumanBaseTool.get_entrez_ids:4
#, fuzzy
msgid "gene_names (list): List of gene names to convert."
msgstr "工具名称筛选列表。"

#: dd27e2684c574c44b10eded63aa8c1a9 of
#: tooluniverse.humanbase_tool.HumanBaseTool.get_entrez_ids:7
#, fuzzy
msgid "list: List of Entrez IDs corresponding to the gene names."
msgstr "指定名称的工具配置列表。"

#: d96c43d978474bb196e9161cb2c62f91 of
#: tooluniverse.humanbase_tool.HumanBaseTool.humanbase_ppi_retrieve:1
msgid ""
"Retrieve protein-protein interactions and biological processes from "
"HumanBase."
msgstr ""

#: ed3926205cbf4e329a7d0d5c06f8406f of
#: tooluniverse.humanbase_tool.HumanBaseTool.humanbase_ppi_retrieve:4
msgid ""
"genes (list): List of gene names to analyze. tissue (str): Tissue type "
"for tissue-specific interactions. max_node (int): Maximum number of nodes"
" to retrieve. interaction (str): Specific interaction type to filter by."
msgstr ""

#: 6c79c21ed7a74376b800db784d132838 of
#: tooluniverse.humanbase_tool.HumanBaseTool.humanbase_ppi_retrieve:10
msgid "tuple: (NetworkX Graph of interactions, list of biological processes)"
msgstr ""

#: ../../api/tooluniverse.rst:377 b0f8a8284980455f85dd0b943156192e
msgid "tooluniverse.llm\\_clients module"
msgstr ""

#: 515950a26aa840e784730bbe4682e15e 95bf3c383d96438e8a48fdac27ffc541
#: b0132ded338441e5ae649dfb6b91dc21 of
#: tooluniverse.llm_clients.AzureOpenAIClient.infer_stream:1
#: tooluniverse.llm_clients.BaseLLMClient.infer_stream:1
#: tooluniverse.llm_clients.GeminiClient.infer_stream:1
msgid "Default streaming implementation falls back to regular inference."
msgstr ""

#: 69cd9b0d91b349f4a37c23c430f20899 8e0b0e9c2cb2407bbe38117a191da749
#: ea0177cda6f943b88a8f03fd9458617b f0c0c7c042d34af3a64aa08ca11d2167 of
#: tooluniverse.llm_clients.AzureOpenAIClient:1
#: tooluniverse.llm_clients.GeminiClient:1
#: tooluniverse.llm_clients.OpenRouterClient:1
#: tooluniverse.llm_clients.VLLMClient:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.llm_clients.BaseLLMClient`"
msgstr "基础类：:py:class:`~tooluniverse.base_tool.BaseTool`"

#: 9ee8c2a77fef47f6b5e70a94d8b4f9dc of
#: tooluniverse.llm_clients.OpenRouterClient:1
msgid ""
"OpenRouter client using OpenAI SDK with custom base URL. Supports models "
"from OpenAI, Anthropic, Google, Qwen, and many other providers."
msgstr ""

#: db11e26e1ad44a528605bc588fb7781f of
#: tooluniverse.llm_clients.OpenRouterClient.test_api:1
msgid "Test API connectivity with minimal token usage."
msgstr ""

#: 6ab9b51f5124467f8a863c032b9db1b0 of
#: tooluniverse.llm_clients.OpenRouterClient.infer:1
msgid "Execute inference using OpenRouter."
msgstr ""

#: ../../api/tooluniverse.rst:385 82ccce6523e44ed9a8c1f3a3a501ede2
msgid "tooluniverse.logging\\_config module"
msgstr ""

#: 2935063955064ae5b16a36fe29eed963 of tooluniverse.logging_config:1
#, fuzzy
msgid "Global logging configuration for ToolUniverse"
msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#: 72cfa941a1454021822edc4d2790ec91 of tooluniverse.logging_config:3
msgid ""
"This module provides a centralized logging system based on Python's "
"standard logging module. It allows controlling debug output across the "
"entire ToolUniverse project with different verbosity levels."
msgstr ""

#: 92d86ad13e01430b8f71368027f8b3e6 of tooluniverse.logging_config:8
msgid ""
"# Set log level via environment variable export "
"TOOLUNIVERSE_LOG_LEVEL=DEBUG"
msgstr ""

#: b87e560f36b14e7d86a0d9c709788a4b of tooluniverse.logging_config:11
msgid ""
"# Or set programmatically from tooluniverse.logging_config import "
"setup_logging, get_logger setup_logging('DEBUG')"
msgstr ""

#: bd40d74b348d4587869ac37d4ff20967 of tooluniverse.logging_config:15
msgid ""
"# Use in your code logger = get_logger(__name__) logger.info(\"This is an"
" info message\") logger.debug(\"This is a debug message\")"
msgstr ""

#: 653cce5748a941ea8e60386a04f97abc of
#: tooluniverse.logging_config.ToolUniverseFormatter:1
#, fuzzy
msgid "Bases: :py:class:`~logging.Formatter`"
msgstr "基类：:py:class:`object`"

#: 65382d17b43d484a8ac5afb5d106ca5c of
#: tooluniverse.logging_config.ToolUniverseFormatter:1
msgid "Custom formatter with colored output and emoji prefixes"
msgstr ""

#: 7e2019bc45d94eaebdd0fd3346aedf42 of
#: tooluniverse.logging_config.ToolUniverseFormatter.format:1
msgid "Format the specified record as text."
msgstr ""

#: 49d62dc3caed4688856546971da29a12 of
#: tooluniverse.logging_config.ToolUniverseFormatter.format:3
msgid ""
"The record's attribute dictionary is used as the operand to a string "
"formatting operation which yields the returned string. Before formatting "
"the dictionary, a couple of preparatory steps are carried out. The "
"message attribute of the record is computed using LogRecord.getMessage()."
" If the formatting string uses the time (as determined by a call to "
"usesTime(), formatTime() is called to format the event time. If there is "
"exception information, it is formatted using formatException() and "
"appended to the message."
msgstr ""

#: 444029d1bec54f4c88978e21828e434e of
#: tooluniverse.logging_config.ToolUniverseLogger:1
msgid "Singleton logger manager for ToolUniverse"
msgstr ""

#: 139875a854424816a87546317fdcc40b of
#: tooluniverse.logging_config.ToolUniverseLogger.reconfigure_for_stdio:1
msgid "Reconfigure logger to output to stderr for stdio mode"
msgstr ""

#: 6d6d4e7fc46d4686b48078f8c3bcd84f 953954de4fbd4341bb6d63ee35f745ce of
#: tooluniverse.logging_config.ToolUniverseLogger.get_logger:1
#: tooluniverse.logging_config.get_logger:1
msgid "Get a logger instance"
msgstr ""

#: e8c24b4f4b4b4e0f840ba68486ecd52f of
#: tooluniverse.logging_config.ToolUniverseLogger.set_level:1
msgid "Set logging level"
msgstr ""

#: 674d621c5e92418087343b227040329e of
#: tooluniverse.logging_config.reconfigure_for_stdio:1
msgid "Reconfigure logging to output to stderr for stdio mode."
msgstr ""

#: ea0d2195f2b745ff8526aae036b76182 of
#: tooluniverse.logging_config.reconfigure_for_stdio:3
msgid ""
"This function should be called at the very beginning of stdio mode to "
"ensure all logs go to stderr instead of stdout."
msgstr ""

#: e4798785af7e4c119bbf9b21e6b14168 of
#: tooluniverse.logging_config.setup_logging:1
#, fuzzy
msgid "Setup global logging configuration"
msgstr "工具配置"

#: e88b7246240c4f2797159fe18b86f919 of
#: tooluniverse.logging_config.setup_logging:3
#, fuzzy
msgid "Log level ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL')"
msgstr ""
"此实例的日志级别。可设置为 'DEBUG'、'INFO'、'WARNING'、'ERROR'、'CRITICAL'。如果为 "
"None，则使用全局设置。"

#: 52b66e67d15b48669f721a216b6ced53 of tooluniverse.logging_config.get_logger:3
msgid "Logger name (usually __name__)"
msgstr ""

#: fb1eca353a084179b1dff0ad948d3c1c of tooluniverse.logging_config.get_logger:7
msgid "logging.Logger: Logger instance"
msgstr ""

#: 214f43ae876d4a5b9c805aed934847ad of
#: tooluniverse.logging_config.set_log_level:1
msgid "Set global log level"
msgstr ""

#: 75d81887ff474302a938b5a8fc525899 c63f5258b1dc47329dc0b9aab51d3182 of
#: tooluniverse.logging_config.debug:1
msgid "Log debug message"
msgstr ""

#: a1fd73062d9148d9b4195a26bcae1f9b fb94e203b56f42ba8b20397c4a0bdcfb of
#: tooluniverse.logging_config.info:1
msgid "Log info message"
msgstr ""

#: 1ffaccd5ce5e488597b01be17d978c2e 95c31b29c4a24c3e85a302347ffd57f3 of
#: tooluniverse.logging_config.progress_log:1
msgid "Log progress message"
msgstr ""

#: dcf06992acd04d489f3e22cc2e3fe49e of tooluniverse.logging_config.warning:1
msgid "Log warning message"
msgstr ""

#: 4073f2323c5b467585bbdfa2e2e324ee of tooluniverse.logging_config.error:1
msgid "Log error message"
msgstr ""

#: 5dfce7113b9b4fa78d279234ad4d747f of tooluniverse.logging_config.critical:1
msgid "Log critical message"
msgstr ""

#: ce01cff044bf4a7ebcaf46cc010b3a48 of
#: tooluniverse.logging_config.get_hook_logger:1
msgid "Get a logger specifically configured for hook operations."
msgstr ""

#: abc43123a544493ba8a22f39f383575e of
#: tooluniverse.logging_config.get_hook_logger:3
msgid "Name of the logger. Defaults to 'HookManager'"
msgstr ""

#: a06fda498cf948cabc141af72e8de67c of
#: tooluniverse.logging_config.get_hook_logger:7
#, fuzzy
msgid "logging.Logger: Configured logger for hook operations"
msgstr "用于网络操作的非阻塞I/O"

#: 26c28907bf394a74bc28c8bec1f92256 of
#: tooluniverse.logging_config.log_hook_execution:1
msgid "Log hook execution details for monitoring and debugging."
msgstr ""

#: 5133f6c9d1264365b7b0f1d355bee7a9 of
#: tooluniverse.logging_config.log_hook_execution:3
#, fuzzy
msgid "Name of the hook that was executed"
msgstr "评分工具名称"

#: c4b09309a2d24a0797d73d91b3074127 of
#: tooluniverse.logging_config.log_hook_execution:5
#, fuzzy
msgid "Name of the tool the hook was applied to"
msgstr "调用工具的名称"

#: 3921e15a8ace4e0ab3e89b23d7f7d490 of
#: tooluniverse.logging_config.log_hook_execution:7
msgid "Time taken to execute the hook in seconds"
msgstr ""

#: e8128e91b06f480486181f937cd35359 of
#: tooluniverse.logging_config.log_hook_execution:9
msgid "Whether the hook execution was successful"
msgstr ""

#: ../../api/tooluniverse.rst:393 1305cbb381dc4be2ad8baa35e388d814
msgid "tooluniverse.markitdown\\_tool module"
msgstr ""

#: 7e7daf9f408b4e38a7e684dc98e83b9c of tooluniverse.markitdown_tool:1
#, fuzzy
msgid "MarkItDown Tool for ToolUniverse"
msgstr ""
"```python\n"
"tu = ToolUniverse()\n"
"```"

#: 1113f7f3d6614e58aa5347eebbfb07f9 of tooluniverse.markitdown_tool:3
msgid ""
"Simple implementation following Microsoft's official MCP pattern. "
"Supports http:, https:, file:, data: URIs."
msgstr ""

#: fbf626e735d14b5db35dafd63e5693d9 of
#: tooluniverse.markitdown_tool.MarkItDownTool:1
msgid "MarkItDown tool for converting files to Markdown."
msgstr ""

#: a661b6972f384a0fa3210a735950263e of
#: tooluniverse.markitdown_tool.MarkItDownTool.run:1
#, fuzzy
msgid "Execute MarkItDown tool."
msgstr "执行该工具。"

#: ../../api/tooluniverse.rst:401 19b7329c4e1e4e9eade9e6bf7b1ef8b4
msgid "tooluniverse.mcp\\_client\\_tool module"
msgstr ""

#: acd15e99c5eb4bd0a678fb061bbf64c3 of tooluniverse.mcp_client_tool:1
#, fuzzy
msgid "MCP Client Tool for ToolUniverse"
msgstr "从 ToolUniverse 获取有效的工具类别。"

#: bc411cee581a4f8797fef92041ab304d of tooluniverse.mcp_client_tool:3
#, fuzzy
msgid ""
"This module provides a tool that acts as a client to connect to an "
"existing MCP server, supporting all MCP functionality including tools, "
"resources, and prompts."
msgstr "一种用作MCP客户端以连接现有MCP服务器的工具。支持HTTP和WebSocket传输。"

#: 464623b3996345f190e93059efe40b49 of
#: tooluniverse.mcp_client_tool.BaseMCPClient:1
msgid ""
"Base MCP client with common functionality shared between MCPClientTool "
"and MCPAutoLoaderTool. Provides session management, request handling, and"
" async cleanup patterns."
msgstr ""

#: 924a7f5c2f4148108af867e5eb2d55d7 of
#: tooluniverse.mcp_client_tool.MCPProxyTool:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.mcp_client_tool.MCPClientTool`"
msgstr "基础类：:py:class:`~tooluniverse.ctg_tool.ClinicalTrialsTool`"

#: 76640c69e7d7469ea99c47ea472965c0 of
#: tooluniverse.mcp_client_tool.MCPProxyTool:1
msgid ""
"A proxy tool that automatically forwards tool calls to an MCP server. "
"This creates individual tools for each tool available on the MCP server."
msgstr ""

#: 1fb30190d9144e5a8cadb24a8076c19b of
#: tooluniverse.mcp_client_tool.MCPProxyTool.run:1
#, fuzzy
msgid "Forward the call directly to the target tool on the MCP server"
msgstr "在MCP服务器上调用工具"

#: 9ad4bf24116a47948a65d9e6927f7994 of
#: tooluniverse.mcp_client_tool.MCPServerDiscovery:1
msgid "Helper class to discover and create tool configurations for MCP servers."
msgstr ""

#: 2a6700c1e69b443fb1a07482d3f245d8 of
#: tooluniverse.mcp_client_tool.MCPServerDiscovery.discover_server_tools:1
msgid ""
"Discover all tools available on an MCP server and return tool "
"configurations."
msgstr ""

#: 5d631db811e94df08a149eb3b5d4cc19 of
#: tooluniverse.mcp_client_tool.MCPServerDiscovery.create_mcp_tools_config:1
#, fuzzy
msgid "Create tool configurations for multiple MCP servers."
msgstr "根据简单的 hook_type 参数创建钩子配置。"

#: 07df458ab765433fa02db45c82e1044e of
#: tooluniverse.mcp_client_tool.MCPServerDiscovery.create_mcp_tools_config:3
msgid ""
"List of server configurations, each containing: - server_url: URL of the "
"MCP server - transport: 'http' or 'websocket' (optional, defaults to "
"'http') - server_name: Name prefix for tools (optional)"
msgstr ""

#: 5ab86c44a6544cdd81b23b2bdf280b85 of
#: tooluniverse.mcp_client_tool.MCPServerDiscovery.create_mcp_tools_config:9
#, fuzzy
msgid "List of tool configurations that can be loaded into ToolUniverse"
msgstr "指定名称的工具配置列表。"

#: ../../api/tooluniverse.rst:409 d04737d55d504395aacd283adbf929ca
msgid "tooluniverse.mcp\\_integration module"
msgstr ""

#: 9607f36113fd4d43b74a69e53d10fd6e of tooluniverse.mcp_integration:1
msgid "ToolUniverse MCP Integration Extensions"
msgstr ""

#: 27d37cd437b24b15a4e33f08b9274b71 of tooluniverse.mcp_integration:3
msgid ""
"This module extends ToolUniverse with methods to automatically discover "
"and load MCP tools from remote servers, providing seamless integration "
"between local tools and remote MCP services."
msgstr ""

#: ../../api/tooluniverse.rst:417 e952563144d94b1c98bba17957eaa09a
msgid "tooluniverse.mcp\\_tool\\_registry module"
msgstr ""

#: f9519c47b7e247a1ae0a60b1a28f03b7 of tooluniverse.mcp_tool_registry:1
#, fuzzy
msgid "MCP Tool Registration System for ToolUniverse"
msgstr "与 ToolUniverse 的集成："

#: 414de68948c74c77ae1ea6e27944aba9 of tooluniverse.mcp_tool_registry:3
msgid ""
"This module provides functionality to register local tools as MCP tools "
"and enables automatic loading of these tools on remote servers via "
"ToolUniverse integration."
msgstr ""

#: b020427864c3419f930aafa96f19112c of tooluniverse.mcp_tool_registry:7
#, fuzzy
msgid "Usage"
msgstr ""
"用法：\n"
"\n"
"上下文：文档"

#: 1d3f693b6fcb4c7ebb0c0ad69431f6d2 of tooluniverse.mcp_tool_registry:9
msgid "Server Side (Tool Provider): .. code-block:: python"
msgstr ""

#: 29e077a120fd412988cb8746a720bd6a of tooluniverse.mcp_tool_registry:12
msgid ""
"from tooluniverse.mcp_tool_registry import register_mcp_tool, "
"start_mcp_server"
msgstr ""

#: c061e4b4855547eeadd5cd62319df24e of tooluniverse.mcp_tool_registry:14
#, fuzzy
msgid "@register_mcp_tool("
msgstr "已注册工具："

#: 04ff6fffc4e64818839f5025ca5633b4 of tooluniverse.mcp_tool_registry:15
msgid "tool_type_name=\"my_analysis_tool\", config={"
msgstr ""

#: 5dc870095ad84a1e9db496aee6c4c8c1 of tooluniverse.mcp_tool_registry:17
msgid "\"description\": \"Performs custom data analysis\""
msgstr ""

#: 7226e30f3559450c88d0395dd73e54d3 of tooluniverse.mcp_tool_registry:18
msgid "}, mcp_config={"
msgstr ""

#: d2f9b66df1aa4da9bd327518593b573a of tooluniverse.mcp_tool_registry:20
msgid "\"server_name\": \"Custom Analysis Server\","
msgstr ""

#: dfbe479fd86c4db991cc4095a8a31637 of tooluniverse.mcp_tool_registry:21
msgid "\"host\": \"0.0.0.0\", \"port\": 8001"
msgstr ""

#: 07ad66da37974eeda52cc96ce92c2b3d of tooluniverse.mcp_tool_registry:24
msgid ") class MyAnalysisTool:"
msgstr ""

#: 3f804c394ec142bb9ae06df022679791 5488086dd94f43f988b8cb6a22261056 of
#: tooluniverse.mcp_tool_registry:26
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:21
msgid "def run(self, arguments):"
msgstr ""

#: 2524ddb0066d4b4baf83f78dee0eb083 of tooluniverse.mcp_tool_registry:27
#, python-brace-format
msgid "return {\"result\": \"analysis complete\"}"
msgstr ""

#: 29705395956549cbbdcd8c022e844c66 of tooluniverse.mcp_tool_registry:29
msgid "# Start MCP server with registered tools start_mcp_server() ```"
msgstr ""

#: ab0d14f572e244f6afedf68187295902 of tooluniverse.mcp_tool_registry:33
msgid ""
"Client Side (Tool Consumer): ```python from tooluniverse import "
"ToolUniverse"
msgstr ""

#: 285ca8d405fb4d75af5cc95b4359fd41 of tooluniverse.mcp_tool_registry:37
#, fuzzy
msgid ""
"# Auto-discover and load MCP tools from remote servers tu = "
"ToolUniverse() tu.load_mcp_tools(server_urls=[\"http://localhost:8001\"])"
msgstr ""
"```python\n"
"tu = ToolUniverse()\n"
"tu.load_mcp_tools([\"http://localhost:8001\"])\n"
"```"

#: 3d3db9bae8ac4a35b5815903a02829ab of tooluniverse.mcp_tool_registry:41
#, python-brace-format
msgid ""
"# Use the remote tool result = tu.run_tool(\"my_analysis_tool\", "
"{\"data\": \"input\"}) ```"
msgstr ""

#: 62a13b0197804993912e63996d97dd1b of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:1
msgid ""
"Decorator to register a tool class exactly like register_tool, but also "
"expose it as an MCP server."
msgstr ""

#: 2ff854e6d128448b848322348effb94c of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:3
msgid ""
"This decorator does everything that register_tool does, PLUS exposes the "
"tool via SMCP protocol for remote access. The parameters and behavior are"
" identical to register_tool, with an optional mcp_config parameter for "
"server configuration."
msgstr ""

#: 65d69a5c741f4ae4a66457487953f2db of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:7
msgid "Custom name for the tool type. Same as register_tool."
msgstr ""

#: 552c9bfd5421485780db9a3179dfe3e2 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:9
#, fuzzy
msgid "Tool configuration dictionary. Same as register_tool."
msgstr "工具配置字典以添加到 all_tools"

#: 7b1bf3e379744bb5b20c27bd753372f4 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:11
msgid ""
"Additional MCP server configuration. Can include: - server_name: Name of "
"the MCP server - host: Server host (default: \"localhost\") - port: "
"Server port (default: 8000) - transport: \"http\" or \"stdio\" (default: "
"\"http\") - auto_start: Whether to auto-start server when tool is "
"registered"
msgstr ""

#: 3517aad029a148e59fd2a60b939e2cdd of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:19
msgid ""
"Decorator function that registers the tool class both locally and as MCP "
"server."
msgstr ""

#: 072848500818480fae8e7d06b642a7aa of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:20
#, fuzzy
msgid ":py:class:`function`"
msgstr ":py:class:`列表`"

#: f30da21e15164ac8b741a7bf8d3add37 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:24
#, python-brace-format
msgid ""
"Same as register_tool, just with MCP exposure: ```python "
"@register_mcp_tool('CustomToolName', config={...}, mcp_config={\"port\": "
"8001}) class MyTool:"
msgstr ""

#: e0500a5793cf47c0a9775c459ca3a329 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool:30
#, fuzzy
msgid ""
"@register_mcp_tool()  # Uses class name, default MCP config class "
"AnotherTool:"
msgstr "@register_tool('CustomToolName', config={...}) class 我的工具:"

#: c42ee712a5844bbc84e5e4fe471ae76d of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:1
#, fuzzy
msgid "Register an existing tool class as MCP tool using configuration."
msgstr "在运行时注册自定义工具类。"

#: 68235c0015114d71912399ba020835c8 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:3
msgid ""
"This function provides a programmatic way to register tools as MCP tools "
"without using decorators, useful for dynamic tool registration. Just like"
" register_mcp_tool decorator, this does everything register_tool would do"
" PLUS exposes the tool via MCP."
msgstr ""

#: 7f97d0381f154998a4644b83356f48d4 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:10
msgid ""
"Configuration containing: - name: Tool name (required) - description: "
"Tool description - parameter_schema: JSON schema for parameters - "
"mcp_config: MCP server configuration"
msgstr ""

#: d1a0ce53c36f40588cbd9dfb4d924cbb of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:19
#, fuzzy
msgid "```python class ExistingTool:"
msgstr "是否先清除现有工具"

#: 94abb6caa04a4b9dafa1fbe4360e9769 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:22
#, fuzzy, python-brace-format
msgid "return {\"status\": \"processed\"}"
msgstr "服务器启动过程："

#: 4fcbc848dff840cebe7075719a996947 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:24
msgid "register_mcp_tool_from_config(ExistingTool, {"
msgstr ""

#: 14b702edab8e466492e5674b87062114 of
#: tooluniverse.mcp_tool_registry.register_mcp_tool_from_config:25
#, python-brace-format
msgid ""
"\"name\": \"existing_tool\", \"description\": \"An existing tool exposed "
"via MCP\", \"mcp_config\": {\"port\": 8002}"
msgstr ""

#: b4393d6d41754866987e7323008a3629 of
#: tooluniverse.mcp_tool_registry.get_mcp_tool_registry:1
#, fuzzy
msgid "Get the current MCP tool registry."
msgstr "获取当前工具注册表的副本。"

#: 88df27cdfb1d4f4bb292e77a69404781 of
#: tooluniverse.mcp_tool_registry.get_registered_tools:1
msgid "Get a list of all registered MCP tools with their information."
msgstr ""

#: c58f5431769340cc8aa98066280eac25 of
#: tooluniverse.mcp_tool_registry.get_registered_tools:4
msgid ""
"List of dictionaries containing tool information including name, "
"description, and port."
msgstr ""

#: 88876c1073964bfe80b0e74142841118 of
#: tooluniverse.mcp_tool_registry.get_mcp_server_configs:1
msgid "Get the current MCP server configurations grouped by port."
msgstr ""

#: 30acf6cf7b7e4d069dfac767cd9288ef of
#: tooluniverse.mcp_tool_registry.start_mcp_server:1
msgid "Start MCP server(s) for registered tools."
msgstr ""

#: 0a3ba50cde844787812a16c067a15ea5 of
#: tooluniverse.mcp_tool_registry.start_mcp_server:3
msgid ""
"Specific port to start server for. If None, starts servers for all "
"registered tools."
msgstr ""

#: c94210ee465b41de9c00e86fb5b40d43 of
#: tooluniverse.mcp_tool_registry.start_mcp_server:5
msgid "Additional arguments passed to SMCP server"
msgstr ""

#: 303fe2df7abc45f381f65ffaa24279e6 of
#: tooluniverse.mcp_tool_registry.start_mcp_server:9
msgid "```python # Start server for specific port start_mcp_server(port=8001)"
msgstr ""

#: aaa27dcb1c03443184ea2f16a6d0089a of
#: tooluniverse.mcp_tool_registry.start_mcp_server:13
msgid "# Start all servers start_mcp_server()"
msgstr ""

#: 0e472263aab14076bf7b291ccb6c2b68 of
#: tooluniverse.mcp_tool_registry.start_mcp_server:16
msgid ""
"# Start with custom configuration start_mcp_server(max_workers=20, "
"debug=True) ```"
msgstr ""

#: 85b57c9915004d4e96f7468151656f23 of
#: tooluniverse.mcp_tool_registry.start_mcp_server_for_tool:1
#, fuzzy
msgid "Start MCP server for a specific tool."
msgstr "获取特定研究的所有关联。"

#: 4d8bab8a14c94ed98abbcd15b051c414 of
#: tooluniverse.mcp_tool_registry.stop_mcp_server:1
msgid "Stop MCP server(s)."
msgstr ""

#: 6dacb99b428149cbb2dd3bb6b21c9b58 of
#: tooluniverse.mcp_tool_registry.stop_mcp_server:3
msgid "Specific port to stop server for. If None, stops all servers."
msgstr ""

#: 6ceae0ab6e0d4eefbf6dbe81b11876dd of
#: tooluniverse.mcp_tool_registry.list_mcp_tools:1
#, fuzzy
msgid "List all registered MCP tools with their configurations."
msgstr "已选择工具配置列表"

#: 52a7386635f24d61a21a90a4cb009ebe of
#: tooluniverse.mcp_tool_registry.get_mcp_tool_urls:1
#, fuzzy
msgid "Get list of MCP server URLs for all registered tools."
msgstr "MCP 服务器 URL 列表，用于加载工具。示例："

#: 38695c6c5cb143b2b98905c55a7e4b11 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:1
#, fuzzy
msgid "Load MCP tools from servers into a ToolUniverse instance."
msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#: d397fd32e30548f3beb3d3b0e5bef1b8 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:3
#, fuzzy
msgid "ToolUniverse instance to load tools into"
msgstr "ToolUniverse 实例，包含所有可用工具"

#: 46667941063d4a5c92b951e3589fcf77 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:5
msgid "List of MCP server URLs. If None, uses all registered local servers."
msgstr ""

#: e395147148e74e3eb1151bf8cfdd4359 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:10
msgid ""
"```python from tooluniverse import ToolUniverse from "
"tooluniverse.mcp_tool_registry import load_mcp_tools_to_tooluniverse"
msgstr ""

#: cf96595c59c945f8a0d464085174f96f of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:14
#, fuzzy
msgid "tu = ToolUniverse()"
msgstr ""
"```python\n"
"tu = ToolUniverse()\n"
"```"

#: 7c1b882144b04aaf8b312b682e819c84 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:16
#, fuzzy
msgid "# Load from specific servers load_mcp_tools_to_tooluniverse(tu, ["
msgstr ""
"从特定服务器加载：  \n"
"```python  \n"
"tu = ToolUniverse()  \n"
"```"

#: df3fc78dca0a4672b703eb47f47ef0fc of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:18
#, fuzzy
msgid "\"http://localhost:8001\", \"http://analysis-server:8002\""
msgstr "http://localhost:8001\", \"http://ml-server:8002"

#: 92e256dc665246318fcde93ccda47f18 of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:20
msgid "])"
msgstr "请提供需要翻译的具体英文文本，我将为您翻译成自然流畅的中文。"

#: 99cdd12e22b845c1bf0498ebd16df18f of
#: tooluniverse.mcp_tool_registry.load_mcp_tools_to_tooluniverse:22
msgid ""
"# Load from all local registered servers "
"load_mcp_tools_to_tooluniverse(tu) ```"
msgstr ""

#: ../../api/tooluniverse.rst:425 cf0173adfc7f4a249ed2a959f5231e33
msgid "tooluniverse.medlineplus\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:433 21d6505416014d6288228444fea026ac
msgid "tooluniverse.medrxiv\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:441 0fc4510254c5488b8be0e55d604a88a2
msgid "tooluniverse.memory\\_manager module"
msgstr ""

#: ec70e31dad1e4987b7a07bacd8acea65 of tooluniverse.memory_manager:1
msgid ""
"Memory Manager for Multi-Agent Systems Manages session-based memory for "
"multi-agent workflows"
msgstr ""

#: 629c98126d2241e1878b48ad6dc57b0a of
#: tooluniverse.memory_manager.MemoryManager:1
msgid "专门管理multi-agent系统的记忆"
msgstr ""

#: aff9d04bd26345b695d9fa562a76e3ca of
#: tooluniverse.memory_manager.MemoryManager.create_session:1
msgid "创建新的会话"
msgstr ""

#: e90a39f3f1d6477fab7627e28f4a932e of
#: tooluniverse.memory_manager.MemoryManager.get_session:1
msgid "获取会话信息"
msgstr ""

#: 2f72a89ca5044d8ab7ac722ae107878b of
#: tooluniverse.memory_manager.MemoryManager.update_session_context:1
msgid "更新会话上下文"
msgstr ""

#: f1048b523b1d49579b948d9deebe0d41 of
#: tooluniverse.memory_manager.MemoryManager.add_agent_result:1
msgid "添加agent执行结果"
msgstr ""

#: 460bd7ba8f5a4ec5a7bd8ed948b64b67 of
#: tooluniverse.memory_manager.MemoryManager.get_context_for_agent:1
msgid "获取适合传递给agent的context信息"
msgstr ""

#: d77112ec681541f88cd5273ef7109c7d of
#: tooluniverse.memory_manager.MemoryManager.set_current_phase:1
msgid "设置当前执行阶段"
msgstr ""

#: 87e7bf3383a54be1974e300ea25f1fa0 of
#: tooluniverse.memory_manager.MemoryManager.get_session_summary:1
msgid "获取会话摘要"
msgstr ""

#: b643f85489504aa692badc78653c5b4a of
#: tooluniverse.memory_manager.MemoryManager.list_user_sessions:1
msgid "获取用户的所有会话"
msgstr ""

#: 2b15027bd54c4eb5b73b759085a42a0b of
#: tooluniverse.memory_manager.MemoryManager.close_session:1
msgid "关闭会话"
msgstr ""

#: ../../api/tooluniverse.rst:449 23b8f944368941598a7a390796515d30
msgid "tooluniverse.molecule\\_2d\\_tool module"
msgstr ""

#: 42edef231b3c40b9b691024d4c506223 of tooluniverse.molecule_2d_tool:2
msgid "Molecule 2D Visualization Tool"
msgstr ""

#: c9d9514d76ac4b818a43d7c95bf799b7 of tooluniverse.molecule_2d_tool:4
msgid ""
"Tool for visualizing 2D molecular structures using RDKit. Supports "
"SMILES, InChI, molecule names, and various output formats."
msgstr ""

#: 34c984933a7e453386f71d9c000b95b0 9bfaae8e1b5a425d8eae98cf1103d2c7
#: de5ec272950242b48b3ea8ab05c4bc8d of
#: tooluniverse.molecule_2d_tool.Molecule2DTool:1
#: tooluniverse.molecule_3d_tool.Molecule3DTool:1
#: tooluniverse.protein_structure_3d_tool.ProteinStructure3DTool:1
#, fuzzy
msgid "Bases: :py:class:`~tooluniverse.visualization_tool.VisualizationTool`"
msgstr "基础类：:py:class:`~tooluniverse.openfda_tool.FDATool`"

#: 4b6b66962f9b41f3b0237597a6f039be of
#: tooluniverse.molecule_2d_tool.Molecule2DTool:1
msgid "Tool for visualizing 2D molecular structures using RDKit."
msgstr ""

#: 95c95ed590674a058acd2eedb002c70e of
#: tooluniverse.molecule_2d_tool.Molecule2DTool.run:1
msgid "Generate 2D molecular structure visualization."
msgstr ""

#: ../../api/tooluniverse.rst:457 3c313f1c8ddf4b09b2a2735fcad4c42f
msgid "tooluniverse.molecule\\_3d\\_tool module"
msgstr ""

#: f0774542e3b246f59ba028a05c89f73f of tooluniverse.molecule_3d_tool:2
msgid "Molecule 3D Visualization Tool"
msgstr ""

#: e0de756890504f168114f32122cd4f4c of tooluniverse.molecule_3d_tool:4
msgid ""
"Tool for visualizing 3D molecular structures using RDKit and py3Dmol. "
"Supports SMILES, MOL files, SDF content, and various visualization "
"styles."
msgstr ""

#: 9ef2459b95b849668d909e475cbb53ba of
#: tooluniverse.molecule_3d_tool.Molecule3DTool:1
msgid "Tool for visualizing 3D molecular structures using RDKit and py3Dmol."
msgstr ""

#: b8be1df168314d498c6688cbba9b166a of
#: tooluniverse.molecule_3d_tool.Molecule3DTool.run:1
msgid "Generate 3D molecular structure visualization."
msgstr ""

#: ../../api/tooluniverse.rst:465 ab53067666d94a5696921dcd1248a2b0
msgid "tooluniverse.odphp\\_tool module"
msgstr ""

#: 3a5b7b266143486c8dda294f2ca0e564 of tooluniverse.odphp_tool.ODPHPRESTTool:1
msgid "Base class for ODPHP (MyHealthfinder) REST API tools."
msgstr ""

#: ../../api/tooluniverse.rst:473 e247d6290bad4ad9acf6ec22ac43e51a
msgid "tooluniverse.openaire\\_tool module"
msgstr ""

#: 5a2def320a614e72a7fd9d21009852bc of
#: tooluniverse.openaire_tool.OpenAIRETool:1
msgid "Search OpenAIRE Explore for research products (publications by default)."
msgstr ""

#: 50e5688876f04173b855f4f56755b7be of
#: tooluniverse.openaire_tool.OpenAIRETool:4
#, fuzzy
msgid ""
"query (str): Query string max_results (int): Max number of results "
"(default 10, max 100) type (str): product type filter: publications | "
"datasets | software"
msgstr ""
"query (str): 自由文本查询  \n"
"max_results (int): 最大结果数（默认值为10，最大值为200）  \n"
"community (str): 可选的社区标识符，用于筛选"

#: ../../api/tooluniverse.rst:481 6221dc73a97f4d5986c4c44d0241eec2
msgid "tooluniverse.openalex\\_tool module"
msgstr ""

#: 8e29b58f21bf4c23a0e417a413a97b95 of
#: tooluniverse.openalex_tool.OpenAlexTool:1
msgid "Tool to retrieve literature from OpenAlex based on search keywords."
msgstr ""

#: 66f829adb7864c2dbd68d020d593ee72 of
#: tooluniverse.openalex_tool.OpenAlexTool.search_literature:1
#, fuzzy
msgid "Search for literature using OpenAlex API."
msgstr "使用 CORE API 搜索论文。"

#: 323f03a5540444ffa4095dd345a81e51 of
#: tooluniverse.openalex_tool.OpenAlexTool.search_literature:4
msgid ""
"search_keywords (str): Keywords to search for in title, abstract, and "
"content. max_results (int): Maximum number of results to return (default:"
" 10). year_from (int): Start year for publication date filter (optional)."
" year_to (int): End year for publication date filter (optional). "
"open_access (bool): Filter for open access papers only (optional)."
msgstr ""

#: af58b902b277488d844f2debda341884 of
#: tooluniverse.openalex_tool.OpenAlexTool.search_literature:11
#, fuzzy
msgid "list: List of dictionaries containing paper information."
msgstr "包含函数调用信息的输入数据。"

#: 073dead2474d4a7291d2580b8f3b0fbd of
#: tooluniverse.openalex_tool.OpenAlexTool.get_paper_by_doi:1
#, fuzzy
msgid "Retrieve a specific paper by its DOI."
msgstr "通过其 rs ID 获取特定的 GWAS SNP。"

#: b99a2925c45f494fa181fe5c1ef43be2 of
#: tooluniverse.openalex_tool.OpenAlexTool.get_paper_by_doi:4
#, fuzzy
msgid "doi (str): DOI of the paper to retrieve."
msgstr "工具名称检索列表"

#: 546f4c26680d49028d2d12af25432fae of
#: tooluniverse.openalex_tool.OpenAlexTool.get_paper_by_doi:7
msgid "dict: Paper information or None if not found."
msgstr ""

#: c6629060aad744399a54390ab3fe4a6f of
#: tooluniverse.openalex_tool.OpenAlexTool.get_papers_by_author:1
#, fuzzy
msgid "Retrieve papers by a specific author."
msgstr "获取特定研究的所有关联。"

#: ee2b1718a22d448dafd14f2c19b320de of
#: tooluniverse.openalex_tool.OpenAlexTool.get_papers_by_author:4
msgid ""
"author_name (str): Name of the author to search for. max_results (int): "
"Maximum number of results to return."
msgstr ""

#: 0fa580fb358642668d9a7e217e61269f of
#: tooluniverse.openalex_tool.OpenAlexTool.get_papers_by_author:8
#, fuzzy
msgid "list: List of papers by the author."
msgstr "纸质词典列表"

#: ../../api/tooluniverse.rst:489 d84fe8deb3664750acca1e77bb0ecdc9
msgid "tooluniverse.openfda\\_adv\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:497 7461ff1b611245c19d4ac99ae49cdd59
#, fuzzy
msgid "tooluniverse.openfda\\_tool module"
msgstr "基础类：:py:class:`~tooluniverse.openfda_tool.FDATool`"

#: 1ae592019c2b4ab8ab8790a98d497db0 of
#: tooluniverse.openfda_tool.extract_nested_fields:1
msgid "Recursively extracts nested fields from a list of dictionaries."
msgstr ""

#: caf2a6d28fd74b2194a856ba87862179 of
#: tooluniverse.openfda_tool.extract_nested_fields:3
msgid "List of dictionaries from which to extract fields"
msgstr ""

#: 86c863368bbb44a58de0f86370ae4279 of
#: tooluniverse.openfda_tool.extract_nested_fields:4
msgid ""
"List of nested fields to extract, each specified with dot notation (e.g.,"
" 'openfda.brand_name')"
msgstr ""

#: a766187c1e82473ba1718839b827dc8e of
#: tooluniverse.openfda_tool.extract_nested_fields:6
#, fuzzy
msgid "List of dictionaries containing only the specified fields"
msgstr "指定名称的工具配置列表。"

#: 98c37c3f7a4743a0a25f6a19a2ae38d6 of
#: tooluniverse.openfda_tool.map_properties_to_openfda_fields:1
msgid ""
"Maps the provided arguments to the corresponding openFDA fields based on "
"the search_fields mapping."
msgstr ""

#: 062a77a122334a9a8aa3fa9ff43564f4 of
#: tooluniverse.openfda_tool.map_properties_to_openfda_fields:3
msgid "The input arguments containing property names and values."
msgstr ""

#: 519697a22cd24a6e909d20da3e5509a6 of
#: tooluniverse.openfda_tool.map_properties_to_openfda_fields:4
msgid "The mapping of property names to openFDA fields."
msgstr ""

#: e8ded849354a40ec8645451f499af15c of
#: tooluniverse.openfda_tool.map_properties_to_openfda_fields:6
msgid "A dictionary with openFDA fields and corresponding values."
msgstr ""

#: 8b5a587dc8604ba0b67fb56b5d586a49 of
#: tooluniverse.openfda_tool.extract_sentences_with_keywords:1
msgid "Extracts sentences containing any of the specified keywords from the text."
msgstr ""

#: ba2cd7e8d6964f28bcf054e61b39a386 of
#: tooluniverse.openfda_tool.extract_sentences_with_keywords:3
msgid ""
"Parameters - text (str): The input text from which to extract sentences. "
"- keywords (list): A list of keywords to search for in the text."
msgstr ""

#: a6f750a25284491d8c28f5741fe05651 of
#: tooluniverse.openfda_tool.extract_sentences_with_keywords:7
msgid "Returns - list: A list of sentences containing any of the keywords."
msgstr ""

#: ../../api/tooluniverse.rst:505 f1cbd65df0d540c2b15911c4692a0ed9
msgid "tooluniverse.osf\\_preprints\\_tool module"
msgstr ""

#: 53d1fd492d224ebeb1f182f36c29c775 of
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool:1
#, fuzzy
msgid "Search OSF Preprints via OSF API v2 filters."
msgstr "使用可选筛选条件搜索SNP。"

#: b43769fee1d4459098fc51491fd6d4a7 of
#: tooluniverse.osf_preprints_tool.OSFPreprintsTool:4
#, fuzzy
msgid ""
"query (str): Query string max_results (int): Max results (default 10, max"
" 100) provider (str): Optional preprint provider (e.g., 'osf', "
"'psyarxiv')"
msgstr ""
"query (str): 自由文本查询  \n"
"max_results (int): 最大结果数（默认值为10，最大值为200）  \n"
"community (str): 可选的社区标识符，用于筛选"

#: ../../api/tooluniverse.rst:513 ae7e7b9ab3ba49969d59be0e4a3348f2
msgid "tooluniverse.output\\_hook module"
msgstr ""

#: b6229b3f97a34d0ea2c63b6ec4ec62de of tooluniverse.output_hook:1
#, fuzzy
msgid "Output Hook System for ToolUniverse"
msgstr ""
"```python\n"
"tu = ToolUniverse()\n"
"```"

#: c8fdf5e44c4b4ff291d9f8d753477968 of tooluniverse.output_hook:3
msgid ""
"This module provides a comprehensive hook-based output processing system "
"that allows for intelligent post-processing of tool outputs. The system "
"supports various types of hooks including summarization, filtering, and "
"transformation hooks."
msgstr ""

#: a3bbd205291044d9b9bb55d037c78abb of tooluniverse.output_hook:7
msgid ""
"Key Components: - HookRule: Defines conditions for when hooks should "
"trigger - OutputHook: Base class for all output hooks - "
"SummarizationHook: Specialized hook for output summarization - "
"HookManager: Manages and coordinates all hooks"
msgstr ""

#: 25f212d07508472ebd3d9d2b8bcc4dcb of tooluniverse.output_hook:13
msgid ""
"The hook system integrates seamlessly with ToolUniverse's existing "
"architecture, leveraging AgenticTool and ComposeTool for intelligent "
"output processing."
msgstr ""

#: f3ed761318ad4acfaa4f0149c8d1417f of tooluniverse.output_hook.HookRule:1
msgid "Defines rules for when hooks should be triggered."
msgstr ""

#: b24f2f943fbf4b758a552a6e44c2b532 of tooluniverse.output_hook.HookRule:3
msgid ""
"This class evaluates various conditions to determine if a hook should be "
"applied to a tool's output. Supports multiple condition types including "
"output length, content type, and tool-specific criteria."
msgstr ""

#: 5d43fab820614193a6f9e4519386309f of tooluniverse.output_hook.HookRule:7
#, fuzzy
msgid "Dictionary containing condition specifications"
msgstr "包含所选工具和元数据的字典"

#: 80711a9ec4e94a7da5df8849f077968c of tooluniverse.output_hook.HookRule:12
#, fuzzy
msgid "The condition specifications"
msgstr "正在运行的特定工具的配置。"

#: 3710cbabf64a40708c5d97bcb586e69d 4be0d9da138348bcb555df61f14f93f7
#: e3a98e86e249483f8b3c5513391fc5f2 of tooluniverse.output_hook.HookManager:15
#: tooluniverse.output_hook.HookRule:14 tooluniverse.output_hook.OutputHook:15
msgid ":py:class:`Dict[str`, :py:class:`Any]`"
msgstr ""

#: 521640b9826e4e9789badee6f9a78e1d of
#: tooluniverse.output_hook.HookRule.__init__:1
#, fuzzy
msgid "Initialize the hook rule with conditions."
msgstr "初始化 ToolUniverse 并加载工具文件配置。"

#: fc7b709de38f4325a1c9167ee5f38141 of
#: tooluniverse.output_hook.HookRule.__init__:3
msgid ""
"Condition specifications including output_length, content_type, "
"tool_type, etc."
msgstr ""

#: 684a4aa2ae6547a08d22dbb40fc8bb09 of
#: tooluniverse.output_hook.HookRule.evaluate:1
msgid "Evaluate whether the rule conditions are met."
msgstr ""

#: 8dc7b3ed0f5b4678afbc8d4a46eb1b1b c53a34e0b8b348b1873b699708cb0a65 of
#: tooluniverse.output_hook.HookRule.evaluate:3
#: tooluniverse.output_hook.OutputHook.should_trigger:3
#, fuzzy
msgid "The tool output to evaluate"
msgstr "要排除的工具名称集合"

#: f2d0de18d3994e25b0e50f38f948225b of
#: tooluniverse.output_hook.HookRule.evaluate:13
#, fuzzy
msgid "bool: True if conditions are met, False otherwise"
msgstr "如果工具支持流式处理，则为 True，否则为 False"

#: 2bb8a8576d6a4e2fb215dd84c3d828b0 of tooluniverse.output_hook.OutputHook:1
#, fuzzy
msgid "Base class for all output hooks."
msgstr "在全局范围内启用或禁用输出钩子。"

#: 728d8bc938fe481c8b6d5d41e6330dbd of tooluniverse.output_hook.OutputHook:3
msgid ""
"This abstract base class defines the interface that all output hooks must"
" implement. Hooks are used to process tool outputs after execution, "
"enabling features like summarization, filtering, transformation, and "
"validation."
msgstr ""

#: 12ce438501194fe5bbbc873409f361fa of tooluniverse.output_hook.OutputHook:7
msgid ""
"Hook configuration including name, enabled status, priority, and "
"conditions"
msgstr ""

#: 41b4be333652419395fba7e511f0b983 of tooluniverse.output_hook.OutputHook:19
#, fuzzy
msgid "Name of the hook"
msgstr "工具名称。"

#: 9170f75966084017bce897e1d178398c of tooluniverse.output_hook.OutputHook:25
#, fuzzy
msgid "Whether the hook is enabled"
msgstr "是否启用了结果缓存"

#: 1dc7de990b4d4d7388df7f91a0edd471 of tooluniverse.output_hook.OutputHook:31
msgid "Hook priority (lower numbers execute first)"
msgstr ""

#: 35466270c2404b4da548ad37f5b8d1c9 da43697521354a7d9320a7ddcb66a13e
#: fa001cd3cc0d4c12b74e20f6bf8e676b of tooluniverse.output_hook.OutputHook:33
#: tooluniverse.output_hook.SummarizationHook:25
#: tooluniverse.output_hook.SummarizationHook:37
#, fuzzy
msgid ":py:class:`int`"
msgstr ":py:class:`列表`"

#: d02f5cd69a4b40bc8157b2ec699aa7f0 of tooluniverse.output_hook.OutputHook:37
msgid "Rule for when this hook should trigger"
msgstr ""

#: 42adce5bdc0d438e9ee94c41856ad978 of tooluniverse.output_hook.OutputHook:39
#, fuzzy
msgid ":py:class:`HookRule`"
msgstr ":py:class:`列表`"

#: 66311844674e4e668d98dacca6dd5182 of
#: tooluniverse.output_hook.OutputHook.__init__:1
#, fuzzy
msgid "Initialize the output hook with configuration."
msgstr "使用配置初始化 OpenAI 客户端"

#: c78d4a7a761a40da89f13dffbe56cef2 of
#: tooluniverse.output_hook.OutputHook.__init__:3
msgid ""
"Hook configuration containing: - name: Hook identifier - enabled: Whether"
" hook is active - priority: Execution priority - conditions: Trigger "
"conditions"
msgstr ""

#: 4b9d7f1278294e6ea77f89eb69259f1c of
#: tooluniverse.output_hook.OutputHook.should_trigger:1
msgid "Determine if this hook should be triggered for the given output."
msgstr ""

#: 121fd3b5eaba4b6cad7301cc9caa29fb of
#: tooluniverse.output_hook.OutputHook.should_trigger:13
#, fuzzy
msgid "bool: True if hook should trigger, False otherwise"
msgstr "如果工具支持流式处理，则为 True，否则为 False"

#: 585b9e5758f5418c8882f8d396088336 of
#: tooluniverse.output_hook.OutputHook.process:1
msgid "Process the tool output."
msgstr ""

#: acfb56f920b94d7e805f59b25a4bb80a of
#: tooluniverse.output_hook.OutputHook.process:3
msgid ""
"This method must be implemented by subclasses to define the specific "
"processing logic for the hook."
msgstr ""

#: 6e3d32fa25e34a73917dce2e65619572 9bb016c2a0594d558dde81df58b83316
#: f36e11f8204742a3bc77f628ba065422 of
#: tooluniverse.output_hook.FileSaveHook.process:3
#: tooluniverse.output_hook.HookManager.apply_hooks:7
#: tooluniverse.output_hook.OutputHook.process:6
#, fuzzy
msgid "The tool output to process"
msgstr ""
"工具暴露流程：\n"
"\n"
"上下文：文档"

#: b098d6f706444df6a985937c34ce1b58 of
#: tooluniverse.output_hook.OutputHook.process:16
msgid "Any: The processed output"
msgstr ""

#: ff8edbd14345468297f10afebefbd41d of
#: tooluniverse.output_hook.OutputHook.process:18
msgid "If not implemented by subclass"
msgstr ""

#: bb5a455bf8fb4dffb48bfba7ed72ec78 of
#: tooluniverse.output_hook.SummarizationHookConfig:1
msgid ""
"SummarizationHookConfig(composer_tool: str = "
"'OutputSummarizationComposer', chunk_size: int = 30000, focus_areas: str "
"= 'key_findings_and_results', max_summary_length: int = 3000, "
"composer_timeout_sec: int = 60)"
msgstr ""

#: cb508152c57d4600a3ce35b7e23bc04d of
#: tooluniverse.output_hook.SummarizationHook:1
msgid "Hook for intelligent output summarization using AI."
msgstr ""

#: 25cab19a68364ee5aa79003bfb88a879 of
#: tooluniverse.output_hook.SummarizationHook:3
msgid ""
"This hook uses the ToolUniverse's AgenticTool and ComposeTool "
"infrastructure to provide intelligent summarization of long tool outputs."
" It supports chunking large outputs, processing each chunk with AI, and "
"merging results."
msgstr ""

#: 73e10d0601104de29b5b2857d6b3c927 of
#: tooluniverse.output_hook.SummarizationHook:7
#, fuzzy
msgid "Hook configuration including summarization parameters"
msgstr "工具配置字典"

#: 651b9a8e04b34076adf016ff2f610ed5 c135668c446142d2a84010d442d3a71d of
#: tooluniverse.output_hook.HookManager:9
#: tooluniverse.output_hook.SummarizationHook:9
#, fuzzy
msgid "Reference to the ToolUniverse instance"
msgstr "引用包含所有工具的 ToolUniverse 实例"

#: 1f48dc39f82f4c0ca9c27c0cc209d7ad 8f3d7537b7ad41d49f75adcc4e6bb20b of
#: tooluniverse.output_hook.HookManager:19
#: tooluniverse.output_hook.SummarizationHook:13
#, fuzzy
msgid "ToolUniverse instance for tool execution"
msgstr "所有工具执行的线程池复用"

#: d046bd21f48a42279861d4efe28f6386 of
#: tooluniverse.output_hook.SummarizationHook:17
#, fuzzy
msgid "Name of the ComposeTool for summarization"
msgstr "评分工具名称"

#: 56e49714df0e4fb6b524f0cca3bbdc49 of
#: tooluniverse.output_hook.SummarizationHook:23
msgid "Size of chunks for processing large outputs"
msgstr ""

#: f9b23685e9604a47ad78cb1a15f1595a of
#: tooluniverse.output_hook.SummarizationHook:29
msgid "Areas to focus on during summarization"
msgstr ""

#: 8fcdc20ab95e4ccab7ccc776b143706d of
#: tooluniverse.output_hook.SummarizationHook:35
msgid "Maximum length of final summary"
msgstr ""

#: c050b98fa15e4d61ad56ca7f1b4ad4be of
#: tooluniverse.output_hook.SummarizationHook.__init__:1
msgid "Initialize the summarization hook."
msgstr ""

#: 5dfe1d06881c4aa698e3dab67ea5fc50 of
#: tooluniverse.output_hook.SummarizationHook.__init__:5
#, fuzzy
msgid "ToolUniverse instance for executing summarization tools"
msgstr "ToolUniverse 实例，包含所有可用工具"

#: 69ca677c63704ce1866b622ace916fe3 of
#: tooluniverse.output_hook.SummarizationHook.process:1
msgid "Execute summarization processing using Compose Summarizer Tool."
msgstr ""

#: 1b4a8ad7fe274f7aa367369f330ccd96 of
#: tooluniverse.output_hook.SummarizationHook.process:3
msgid ""
"This method orchestrates the summarization workflow by: 1. Preparing "
"parameters for the Compose Summarizer Tool 2. Calling the tool through "
"ToolUniverse 3. Processing and returning the summarized result"
msgstr ""

#: 11e626c266414359a1a991ade290674b of
#: tooluniverse.output_hook.SummarizationHook.process:8
msgid "The tool output to summarize"
msgstr ""

#: 6671a0bcfeb941099637419eaa8466ae of
#: tooluniverse.output_hook.SummarizationHook.process:18
msgid "Any: The summarized output, or original output if summarization fails"
msgstr ""

#: 1aeb7701545e4e00a762c9ccc0188125 of tooluniverse.output_hook.HookManager:1
#, fuzzy
msgid "Manages and coordinates all output hooks."
msgstr "在全局范围内启用或禁用输出钩子。"

#: 62fd12ea8a50425fbf3754c58a934204 of tooluniverse.output_hook.HookManager:3
msgid ""
"The HookManager is responsible for loading hook configurations, creating "
"hook instances, and applying hooks to tool outputs. It provides a unified"
" interface for hook management and supports dynamic configuration "
"updates."
msgstr ""

#: 637db132259f4d30aaad9e006e4648c3 f1f849ea411f45cc989ae6c9ddf788fa of
#: tooluniverse.output_hook.HookManager:7
#: tooluniverse.output_hook.HookManager:13
#, fuzzy
msgid "Hook manager configuration"
msgstr "工具配置"

#: 2c8556fcc7ee40f5a857ed65447cbfef of tooluniverse.output_hook.HookManager:23
#, fuzzy
msgid "List of loaded hook instances"
msgstr "可用工具名称列表"

#: 47b53c7527754566aa3c0961dbc49c4f of tooluniverse.output_hook.HookManager:25
#, fuzzy
msgid ":py:class:`List[OutputHook]`"
msgstr ":py:class:`列表`"

#: 96460c1b5b1b4da99955000b059bd7a3 of tooluniverse.output_hook.HookManager:29
#, fuzzy
msgid "Whether hook processing is enabled"
msgstr "是否启用了结果缓存"

#: 26c5e5feffa84b5f9d519fe80f90a487 of tooluniverse.output_hook.HookManager:35
#, fuzzy
msgid "Path to hook configuration file"
msgstr "生成的钩子配置"

#: 3164f20e671a4e1da37848f231f7f7bb of
#: tooluniverse.output_hook.HookManager.__init__:1
#, fuzzy
msgid "Initialize the hook manager."
msgstr "初始化基于LLM的工具查找器。"

#: 4fd54f3bebdf4e8a8d4ac0257ff7c364 of
#: tooluniverse.output_hook.HookManager.__init__:3
#, fuzzy
msgid "Configuration for hook manager"
msgstr ""
"配置管理：\n"
"\n"
"上下文：文档"

#: dddc1bca0cf342509daebc8497c7f779 of
#: tooluniverse.output_hook.HookManager.__init__:5
#, fuzzy
msgid "ToolUniverse instance for executing tools"
msgstr "ToolUniverse 实例，包含所有可用工具"

#: bce4e7f3d1fd46fa82fba2b607ae7898 of
#: tooluniverse.output_hook.HookManager.apply_hooks:1
msgid "Apply all applicable hooks to the tool output."
msgstr ""

#: d25586c455854775af66f974ba8a7bcc of
#: tooluniverse.output_hook.HookManager.apply_hooks:3
msgid ""
"This method iterates through all loaded hooks, checks if they should be "
"applied to the current output, and processes the output through each "
"applicable hook in priority order."
msgstr ""

#: 855600a3465a4c23a776d9e37967823e of
#: tooluniverse.output_hook.HookManager.apply_hooks:17
msgid "Any: The processed output after applying all applicable hooks"
msgstr ""

#: f3983ebd7fc2428a8c2032a3df190a67 of
#: tooluniverse.output_hook.HookManager.enable_hook:1
#, fuzzy
msgid "Enable a specific hook by name."
msgstr "仅通过工具名称加载特定工具。"

#: 14d8904f546748b99ced56e220ca4cd4 of
#: tooluniverse.output_hook.HookManager.enable_hook:3
#, fuzzy
msgid "Name of the hook to enable"
msgstr "调用工具的名称"

#: 47b67ec8fcfb4048a4db2220d81795f4 of
#: tooluniverse.output_hook.HookManager.disable_hook:1
#, fuzzy
msgid "Disable a specific hook by name."
msgstr "仅通过工具名称加载特定工具。"

#: 0834bd5e84954114b466da4680503883 of
#: tooluniverse.output_hook.HookManager.disable_hook:3
#, fuzzy
msgid "Name of the hook to disable"
msgstr "调用工具的名称"

#: 816fe35c1333453a8869fece6553d70c of
#: tooluniverse.output_hook.HookManager.toggle_hooks:1
#, fuzzy
msgid "Enable or disable all hooks globally."
msgstr "在全局范围内启用或禁用输出钩子。"

#: 73d2d5071c6d46dba5d4d13986ad319d of
#: tooluniverse.output_hook.HookManager.toggle_hooks:3
#, fuzzy
msgid "True to enable all hooks, False to disable"
msgstr "True 表示启用钩子，False 表示禁用"

#: 5f06d8c7267a4c15b2b2c6735d5de219 of
#: tooluniverse.output_hook.HookManager.enable_hooks:1
#, fuzzy
msgid "Enable hooks and (re)load configurations and required tools."
msgstr "为已发现的工具生成代理工具配置"

#: 76b5389e42434b5896f89af095d958c6 of
#: tooluniverse.output_hook.HookManager.disable_hooks:1
msgid "Disable hooks and clear in-memory hook instances."
msgstr ""

#: ce2f035958cd4eaa922ac0573803175c of
#: tooluniverse.output_hook.HookManager.reload_config:1
#, fuzzy
msgid "Reload hook configuration from file."
msgstr "指定名称的工具配置列表。"

#: e808c4afd56a42369b3413bb67474d65 of
#: tooluniverse.output_hook.HookManager.reload_config:3
#, fuzzy
msgid "Path to configuration file. If None, uses the current config_path"
msgstr "钩子的配置。如果为 None，则使用默认配置。"

#: d1a6d8fbdd6b48cea76915415fd2f7ee of
#: tooluniverse.output_hook.HookManager.get_hook:1
msgid "Get a hook instance by name."
msgstr ""

#: ed81aa7222b04022890f22b8b60c22f6 of
#: tooluniverse.output_hook.HookManager.get_hook:3
#, fuzzy
msgid "Name of the hook to retrieve"
msgstr "要检索的工具名称。"

#: bd7da8c776df45049d85caf9aab1259e of
#: tooluniverse.output_hook.HookManager.get_hook:7
#, fuzzy
msgid "Optional[OutputHook]: Hook instance if found, None otherwise"
msgstr "如果找到工具配置，则返回；否则返回None。"

#: 35a5c231228e42fbb04a286dc8fd9947 of tooluniverse.output_hook.FileSaveHook:1
msgid ""
"Hook that saves tool outputs to temporary files and returns file "
"information."
msgstr ""

#: 8cb2c87dbafb4a29b2e5c0595179e27b of tooluniverse.output_hook.FileSaveHook:3
msgid ""
"This hook saves the tool output to a temporary file and returns "
"information about the file path, data format, and data structure instead "
"of the original output. This is useful for handling large outputs or when"
" you need to process outputs as files rather than in-memory data."
msgstr ""

#: c88a634a88544044b02c1ad9236fea55 of tooluniverse.output_hook.FileSaveHook:8
msgid ""
"Configuration options: - temp_dir: Directory to save temporary files "
"(default: system temp) - file_prefix: Prefix for generated filenames "
"(default: 'tool_output') - include_metadata: Whether to include metadata "
"in the response (default: True) - auto_cleanup: Whether to automatically "
"clean up old files (default: False) - cleanup_age_hours: Age in hours for"
" auto cleanup (default: 24)"
msgstr ""

#: 3289f5830b394d20b43ad4d0db040277 of
#: tooluniverse.output_hook.FileSaveHook.__init__:1
#, fuzzy
msgid "Initialize the FileSaveHook."
msgstr "初始化基于LLM的工具查找器。"

#: 055835ab538345a39923f02913541f05 of
#: tooluniverse.output_hook.FileSaveHook.__init__:3
msgid ""
"Hook configuration including: - name: Hook name - temp_dir: Directory for"
" temporary files - file_prefix: Prefix for filenames - include_metadata: "
"Include metadata flag - auto_cleanup: Auto cleanup flag - "
"cleanup_age_hours: Cleanup age in hours"
msgstr ""

#: 69c578163df149ceaee641afde69a7ab of
#: tooluniverse.output_hook.FileSaveHook.process:1
msgid "Process the tool output by saving it to a temporary file."
msgstr ""

#: 0696e7d1daa545dfbf9c975936066d7d of
#: tooluniverse.output_hook.FileSaveHook.process:9
#, fuzzy
msgid "Execution context"
msgstr ""
"执行模型：\n"
"\n"
"上下文：文档"

#: e0d2440998e44cca9d9d654bfa40289d of
#: tooluniverse.output_hook.FileSaveHook.process:13
#, fuzzy
msgid "Dict[str, Any]: Dictionary containing file information:"
msgstr "包含所选工具和元数据的字典"

#: 831ddd58605b4a0ea82b1bb3ecfb5a88 of
#: tooluniverse.output_hook.FileSaveHook.process:14
#, fuzzy
msgid "file_path: Path to the saved file"
msgstr "输出文件路径"

#: 6082bffe462946c3b4eeb5e88ef0bd16 of
#: tooluniverse.output_hook.FileSaveHook.process:15
msgid "data_format: Format of the data (json, text, binary, etc.)"
msgstr ""

#: 8488911cf58c48748cca190d4999d5f2 of
#: tooluniverse.output_hook.FileSaveHook.process:16
#, fuzzy
msgid "data_structure: Structure information about the data"
msgstr "获取有关已加载数据集的信息。"

#: 7513cadf4ae44000b87735dd400fd81a of
#: tooluniverse.output_hook.FileSaveHook.process:17
msgid "file_size: Size of the file in bytes"
msgstr ""

#: 1e9e8f8bb579447687a29b85a3abf996 of
#: tooluniverse.output_hook.FileSaveHook.process:18
msgid "created_at: Timestamp when file was created"
msgstr ""

#: 39ae3de8101646e3b8e2a1b1d73c8d1f of
#: tooluniverse.output_hook.FileSaveHook.process:19
msgid "metadata: Additional metadata (if include_metadata is True)"
msgstr ""

#: ../../api/tooluniverse.rst:521 05f999ccfb634b5899dcb681099a281e
#, fuzzy
msgid "tooluniverse.package\\_tool module"
msgstr "tooluniverse 软件包"

#: ../../api/tooluniverse.rst:529 6f62abd0f1e94cb9a005794e6db53b19
msgid "tooluniverse.pmc\\_tool module"
msgstr ""

#: 6c68012f7ede42e18c0744e519f55adf of tooluniverse.pmc_tool:1
#, fuzzy
msgid "PMC (PubMed Central) Tool for searching full-text biomedical literature."
msgstr "用于搜索PMC全文生物医学文献的工具。"

#: 5a39a38c6a74447e8adf4a37c66138cb of tooluniverse.pmc_tool:3
msgid ""
"PMC is the free full-text archive of biomedical and life sciences journal"
" literature at the U.S. National Institutes of Health's National Library "
"of Medicine. This tool provides access to millions of full-text articles."
msgstr ""

#: ../../api/tooluniverse.rst:537 7abcb588756243a886512a78c1c41ea7
msgid "tooluniverse.protein\\_structure\\_3d\\_tool module"
msgstr ""

#: 42fe49e3f30143648d173a0dcd19d5b2 of tooluniverse.protein_structure_3d_tool:2
msgid "Protein Structure 3D Visualization Tool"
msgstr ""

#: 11e8ae9b61a3450988f0ecd2f0cd8c06 of tooluniverse.protein_structure_3d_tool:4
msgid ""
"Tool for visualizing 3D protein structures using py3Dmol. Supports PDB "
"IDs, PDB file content, and various visualization styles."
msgstr ""

#: cf7341b258ba4c9b9aa3141b17a2dd23 of
#: tooluniverse.protein_structure_3d_tool.ProteinStructure3DTool:1
msgid "Tool for visualizing 3D protein structures using py3Dmol."
msgstr ""

#: 35576816acee4ac59c36fb0ebb6cbc3b of
#: tooluniverse.protein_structure_3d_tool.ProteinStructure3DTool.run:1
msgid "Generate 3D protein structure visualization."
msgstr ""

#: ../../api/tooluniverse.rst:545 81e2e754b84e42f9882e80f040239e07
msgid "tooluniverse.pubchem\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:553 6a696756386e43ef9c14c6594468a70a
msgid "tooluniverse.pubmed\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:561 083d56f05db74ae4a9ebcf964bc18430
msgid "tooluniverse.pubtator\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:569 e93e44ea70724b5da99fe823a2d4a744
msgid "tooluniverse.rcsb\\_pdb\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:577 4ed80d575dfa49c78adc63b193532d63
msgid "tooluniverse.reactome\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:585 da6fa2dd146940179102ca7f4124b0a6
msgid "tooluniverse.remote\\_tool module"
msgstr ""

#: b0e5021d87a945ff8f792c2dec59d610 of tooluniverse.remote_tool:1
msgid "Remote Tool Implementation"
msgstr ""

#: 27b68f1f82cf4f2c89ffeed7b88a20da of tooluniverse.remote_tool:3
msgid ""
"This module provides a RemoteTool class that represents external MCP/SMCP"
" tools that are available for listing but cannot be executed locally. "
"These tools are stored as configuration records only."
msgstr ""

#: aa79b2aa23c94c56afc6f2a02ecabd4e of tooluniverse.remote_tool.RemoteTool:1
msgid "A placeholder tool class for external MCP/SMCP tools."
msgstr ""

#: 2eaa7149433d4f9185f94d1ac80e0879 of tooluniverse.remote_tool.RemoteTool:3
msgid ""
"RemoteTool represents tools that are hosted on external MCP/SMCP servers "
"and are only available for discovery and listing purposes. These tools "
"cannot be executed locally through ToolUniverse but their configurations "
"are preserved for reference."
msgstr ""

#: 54919ca9fd0c44cb92c070d1656729fa of tooluniverse.remote_tool.RemoteTool:10
#, fuzzy
msgid "The tool configuration dictionary"
msgstr "工具配置字典"

#: 969d252c406347c9baa1243ca585cd00 of tooluniverse.remote_tool.RemoteTool:16
#, fuzzy
msgid "Information about the remote server and tool"
msgstr "获取有关已加载数据集的信息。"

#: cdc99e693f364afb9f09b343d0941eb4 of
#: tooluniverse.remote_tool.RemoteTool.__init__:1
#, fuzzy
msgid "Initialize the RemoteTool."
msgstr "初始化基于LLM的工具查找器。"

#: 5115c2e13cdf4ddda347f10f8a57483a 65af31f4a6f34af1ab601387100987ec of
#: tooluniverse.remote_tool.RemoteTool.__init__:3
#: tooluniverse.utils.get_parameter_schema:3
#, fuzzy
msgid "Tool configuration dictionary"
msgstr "工具配置字典"

#: ae86ddc070464651862f047fa60c5958 of
#: tooluniverse.remote_tool.RemoteTool.run:1
#, fuzzy
msgid "Placeholder run method for remote tools."
msgstr "自动加载工具的主运行方法"

#: bbf098191c6f41319221d6e3b0b98c91 of
#: tooluniverse.remote_tool.RemoteTool.run:3
msgid ""
"Remote tools cannot be executed locally. This method always returns an "
"error message indicating that the tool is not available for local "
"execution."
msgstr ""

#: 7217926a5f834691a7e7e5010e7d6f2b of
#: tooluniverse.remote_tool.RemoteTool.run:6
msgid "Tool arguments (ignored)"
msgstr ""

#: 924fbe20d1cf4b93a9987a3f6034001b of
#: tooluniverse.remote_tool.RemoteTool.run:10
msgid "dict: Error message indicating the tool is not available locally"
msgstr ""

#: 0b50d8d4dd6749eab3bfda18a1900438 of
#: tooluniverse.remote_tool.RemoteTool.get_remote_info:1
#, fuzzy
msgid "Get information about the remote server hosting this tool."
msgstr "获取有关已加载数据集的信息。"

#: 0cda75af51c14a569d76831dc61bce73 of
#: tooluniverse.remote_tool.RemoteTool.get_remote_info:4
msgid ""
"dict: Remote server information including server type, URL, and original "
"tool type"
msgstr ""

#: 5b68e1f6c09e47b6a90585b69a8d6428 of
#: tooluniverse.remote_tool.RemoteTool.is_available_locally:1
#, fuzzy
msgid "Check if this tool is available for local execution."
msgstr "检查该工具是否可用。"

#: 5f2ddff040234361a0e3d26712de5f28 of
#: tooluniverse.remote_tool.RemoteTool.is_available_locally:4
msgid "bool: Always False for RemoteTool instances"
msgstr ""

#: 8b532c5d5296415699af3fb01b9e73fa of
#: tooluniverse.remote_tool.RemoteTool.get_server_info:1
#, fuzzy
msgid "Get server connection information for this remote tool."
msgstr "获取有关已加载 XML 数据集的全面信息。"

#: 9314c3f700134752950c846b58e93ed2 of
#: tooluniverse.remote_tool.RemoteTool.get_server_info:4
#, fuzzy
msgid "dict: Server connection details"
msgstr ""
"实现细节：\n"
"\n"
"上下文：文档"

#: ../../api/tooluniverse.rst:593 640e9dd20e824c86bdb154555f1f7d4b
#, fuzzy
msgid "tooluniverse.restful\\_tool module"
msgstr "基础类：:py:class:`~tooluniverse.restful_tool.MonarchTool`"

#: ../../api/tooluniverse.rst:601 e75d4e66186741c69472e094206a31f2
msgid "tooluniverse.semantic\\_scholar\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:609 69b00bf0bce341b8aed0f1170adc3e36
#, fuzzy
msgid "tooluniverse.smcp module"
msgstr "tooluniverse 软件包"

#: 45de0dfe2dd642c7b00788dfc71e3d8c of tooluniverse.smcp:1
#, fuzzy
msgid ""
"Scientific Model Context Protocol (SMCP) - Enhanced MCP Server with "
"ToolUniverse Integration"
msgstr "科学模型上下文协议（SMCP）服务器"

#: b4f07b95e92448b9888a9687a6b7d9e5 of tooluniverse.smcp:3
#, fuzzy
msgid ""
"SMCP is a sophisticated MCP (Model Context Protocol) server that bridges "
"the gap between AI agents and scientific tools. It seamlessly integrates "
"ToolUniverse's extensive collection of 350+ scientific tools with the MCP"
" protocol, enabling AI systems to access scientific databases, perform "
"complex analyses, and execute scientific workflows."
msgstr ""
"SMCP 是一个增强版的 MCP（模型上下文协议）服务器，它将 ToolUniverse 的广泛科学工具集合与 FastMCP "
"框架无缝集成。该服务器为科学计算、数据分析和研究工作流程提供了一个统一的、可由 AI 访问的接口。"

#: 58c1817f8ec64973a54e2013b5a834ea of tooluniverse.smcp:8
msgid ""
"The SMCP module provides a complete solution for exposing scientific "
"computational resources through the standardized MCP protocol, making it "
"easy for AI agents to discover, understand, and execute scientific tools "
"in a unified manner."
msgstr ""

#: ace22e17be574ef0a502601235f38068 of tooluniverse.smcp:13
#, fuzzy
msgid "Usage Patterns"
msgstr ""
"使用模式：\n"
"\n"
"上下文：文档"

#: 8c45ad95cba6494cac05ed8091d5bb15 of tooluniverse.smcp:15
msgid "Quick Start:"
msgstr ""

#: 5a17bbf84b6645ec8dbe134aca1ec163 of tooluniverse.smcp:17
msgid ""
"```python # High-performance server with custom configuration server = "
"SMCP("
msgstr ""

#: b8ed4d48f50b43e9884c92c65799dcce of tooluniverse.smcp:20
#, fuzzy
msgid ""
"name=\"Production Scientific API\", tool_categories=[\"uniprot\", "
"\"ChEMBL\", \"opentarget\", \"hpa\"], max_workers=20, search_enabled=True"
msgstr ""
"name=\"生产 SMCP\", tool_categories=[\"ChEMBL\", \"uniprot\", "
"\"opentarget\"], max_workers=20"

#: 808c8d51b00349af9926dbc9bb326b0d of tooluniverse.smcp:26
#, fuzzy
msgid "transport=\"http\", host=\"0.0.0.0\", port=7000"
msgstr "transport=\"http\"，host=\"0.0.0.0\"，port=7000，workers=4"

#: 07ad2dae8d6b4feebac82f9bb5fac302 of tooluniverse.smcp:32
msgid ""
"Client Integration: ```python # Using MCP client to discover and use "
"tools import json"
msgstr ""

#: eccf1622a84c4c208b6619d9274cd54b of tooluniverse.smcp:37
msgid ""
"# Discover protein analysis tools response = await "
"client.call_tool(\"find_tools\", {"
msgstr ""

#: b06fd95a608d4b8982543da15a454be4 of tooluniverse.smcp:39
#, fuzzy
msgid "\"query\": \"protein structure analysis\", \"limit\": 5"
msgstr "\"query\": \"蛋白质结构分析\", \"limit\": 3"

#: 763f1ef023874eb19b23e09001fc14d7 955e2cd7ebcd42fe8383db9bc28a6fb6 of
#: tooluniverse.smcp:41 tooluniverse.smcp:47
msgid "})"
msgstr "抱歉，您提供的内容似乎不完整。如果您能提供完整的文本，我将很乐意为您翻译。"

#: 4bbfd8a885a4443c9a77a63b2ef5fdb4 of tooluniverse.smcp:43
msgid ""
"# Use discovered tool result = await "
"client.call_tool(\"UniProt_get_entry_by_accession\", {"
msgstr ""

#: b06d2b83d6a2493585daf5f730b49840 of tooluniverse.smcp:45
#, python-brace-format
msgid "\"arguments\": json.dumps({\"accession\": \"P05067\"})"
msgstr ""

#: e355b20599fe4103a15597373e675aff of tooluniverse.smcp:50
#, fuzzy
msgid "Architecture"
msgstr "搜索设置："

#: b4bdc585ec964475b675d5c3141e7438 of tooluniverse.smcp:52
msgid ""
"┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐ │   "
"MCP Client    │◄──►│      SMCP        │◄──►│  ToolUniverse   │ │  (AI "
"Agent)     │    │     Server       │    │   (350+ Tools)  │ "
"└─────────────────┘    └──────────────────┘    └─────────────────┘"
msgstr ""

#: 2af9373ee8f34b8fb9f056da81d28219 of tooluniverse.smcp:56
msgid "│ ▼"
msgstr ""

#: 52ec77d646ed4bc7b1dc34ec60c4b6e0 of tooluniverse.smcp:58
msgid ""
"┌──────────────────┐ │  Scientific      │ │  Databases &     │ │  "
"Services        │ └──────────────────┘"
msgstr ""

#: d9077bab7ca54ec284b683b6e8d77ce3 of tooluniverse.smcp:64
msgid ""
"The SMCP server acts as an intelligent middleware layer that: 1. Receives"
" MCP requests from AI agents/clients 2. Translates requests to "
"ToolUniverse tool calls 3. Executes tools against scientific "
"databases/services 4. Returns formatted results via MCP protocol 5. "
"Provides intelligent tool discovery and recommendation"
msgstr ""

#: 7c873decc84e4487a029ca7439cd9d7b of tooluniverse.smcp:72
#, fuzzy
msgid "Integration Points"
msgstr ""
"集成详情：\n"
"\n"
"上下文：文档"

#: 63940ef3d5ba425c998210a7fbaca1f2 of tooluniverse.smcp:74
msgid "MCP Protocol Layer:"
msgstr ""

#: 915c58df018d477991402f3d64b62ec5 of tooluniverse.smcp:75
#, fuzzy
msgid "Standard MCP methods (tools/list, tools/call, etc.)"
msgstr "标准方法（tools/list、tools/call、resources/*、prompts/*）"

#: 002264383b394131886c1ad0ac3dddd0 of tooluniverse.smcp:77
#, fuzzy
msgid "Transport-agnostic communication (stdio, HTTP, SSE)"
msgstr "多传输支持（stdio、HTTP、SSE）"

#: 2271b00375bc405daae0a65105b5260b of tooluniverse.smcp:78
#, fuzzy
msgid "Proper error codes and JSON-RPC 2.0 compliance"
msgstr "实现正确的错误处理并符合JSON-RPC 2.0规范"

#: d0155708901e400197a91ddc13fcf3c1 of tooluniverse.smcp:80
#, fuzzy
msgid "ToolUniverse Integration:"
msgstr "ToolUniverse 或 dict，可选"

#: 5db4c8e5bdad40828aa946dbf635b8d3 of tooluniverse.smcp:81
#, fuzzy
msgid "Dynamic tool loading and configuration"
msgstr "工具配置"

#: 60b94a561308488ea3f326c5293ce45c of tooluniverse.smcp:82
#, fuzzy
msgid "Schema transformation and validation"
msgstr ""
"架构转换：\n"
"\n"
"上下文：文档"

#: 297f345f655f47baacd93e3aeb3e57c2 of tooluniverse.smcp:83
msgid "Execution wrapper with error handling"
msgstr ""

#: 66e6180b574a464fb7a3c00629b5dace of tooluniverse.smcp:84
msgid "Category-based tool organization"
msgstr ""

#: 44d46386829445828d96f04b2dc0a6d7 of tooluniverse.smcp:86
msgid "AI Agent Interface:"
msgstr ""

#: ae62f57a8c144efabc027fe9073ef92f of tooluniverse.smcp:87
msgid "Natural language tool discovery"
msgstr ""

#: 0ddbf0e44ab74780aa7c3057c4a2ac39 of tooluniverse.smcp:88
msgid "Contextual tool recommendations"
msgstr ""

#: 5f9e5051f4f541619834ab7de72a773e of tooluniverse.smcp:89
#, fuzzy
msgid "Structured parameter schemas"
msgstr "工具参数模式"

#: 37159d4a9cfc4ef4a1861d791af91707 of tooluniverse.smcp:90
#, fuzzy
msgid "Comprehensive tool documentation"
msgstr "全面的文档与示例"

#: ../../api/tooluniverse.rst:617 25ffd5b02f9b43b296be03af76646049
msgid "tooluniverse.smcp\\_server module"
msgstr ""

#: e6df7af8c94f48fca70748df049faaff of tooluniverse.smcp_server:1
msgid "SMCP Server Entry Point"
msgstr ""

#: a84a1489062a464d88f3e7458b685524 of tooluniverse.smcp_server:3
msgid ""
"This module provides the command-line entry point for running the SMCP "
"(Scientific Model Context Protocol) server. It creates a minimal SMCP "
"server that exposes all ToolUniverse tools as MCP tools."
msgstr ""

#: 97f1a92965934a3489daf7ccf627e06f of
#: tooluniverse.smcp_server.run_http_server:1
msgid "Run SMCP server with streamable-http transport on localhost:8000"
msgstr ""

#: 437156afbdc34d079e30695b86023402 of
#: tooluniverse.smcp_server.run_http_server:3
msgid ""
"This function provides compatibility with the original MCP server's "
"run_server function."
msgstr ""

#: 522cb945725c4354897e9a9dc5847a29 of
#: tooluniverse.smcp_server.run_stdio_server:1
msgid "Run SMCP server with stdio transport for Claude Desktop integration"
msgstr ""

#: b54006c7ba994910a23bb5095652e535 of
#: tooluniverse.smcp_server.run_stdio_server:3
msgid ""
"This function provides compatibility with the original MCP server's "
"run_claude_desktop function. It accepts the same arguments as "
"run_smcp_server but forces transport='stdio'."
msgstr ""

#: aafdcd3ebfda4f01adaa67049a8f50ca of
#: tooluniverse.smcp_server.run_smcp_server:1
#, fuzzy
msgid "Main entry point for the SMCP server command."
msgstr "工具的主要入口点。"

#: 2ba0d170d2d846abbf66ff46d7eab69d of
#: tooluniverse.smcp_server.run_smcp_server:3
msgid ""
"This function is called when running `tooluniverse-smcp` from the command"
" line."
msgstr ""

#: ../../api/tooluniverse.rst:625 cbef8bde0bd44c52bb46e3dd1f2625fa
msgid "tooluniverse.string\\_tool module"
msgstr ""

#: 9728476314a645f09b19e37a9cb0b4e1 of tooluniverse.string_tool:1
msgid "STRING Database REST API Tool"
msgstr ""

#: c753c0ed4ac84e21b9ea6ab40176c630 of tooluniverse.string_tool:3
msgid ""
"This tool provides access to protein-protein interaction data from the "
"STRING database. STRING is a database of known and predicted protein-"
"protein interactions."
msgstr ""

#: 6dd6e3a75b7742b5962f4a48cfe8ffaa of
#: tooluniverse.string_tool.STRINGRESTTool:1
#, fuzzy
msgid ""
"STRING Database REST API tool. Generic wrapper for STRING API endpoints "
"defined in ppi_tools.json."
msgstr ""
"AlphaFold蛋白质结构数据库API工具。用于AlphaFold "
"API端点的通用封装，端点定义在alphafold_tools.json文件中。"

#: ../../api/tooluniverse.rst:633 6d22301595294deea47bdab861e6b359
msgid "tooluniverse.tool\\_finder\\_embedding module"
msgstr ""

#: ../../api/tooluniverse.rst:641 d6c9dba640b64e1aa5cd74b2f8ddfa10
msgid "tooluniverse.tool\\_finder\\_keyword module"
msgstr ""

#: 5209321141af49408d4ff3cc9fbc9ba9 of tooluniverse.tool_finder_keyword:1
msgid ""
"Keyword-based Tool Finder - An advanced keyword search tool for finding "
"relevant tools."
msgstr ""

#: 1eb6a6e520734ccaabc567f09e395b5e of tooluniverse.tool_finder_keyword:3
msgid ""
"This tool provides sophisticated keyword matching functionality using "
"natural language processing techniques including tokenization, stop word "
"removal, stemming, and TF-IDF scoring for improved relevance ranking. It "
"serves as a robust search method when AI-powered search methods are "
"unavailable."
msgstr ""

#: ../../api/tooluniverse.rst:649 4a030a29ba6745d686d5f1edfb73da51
msgid "tooluniverse.tool\\_finder\\_llm module"
msgstr ""

#: 5c9510542bb7411280c0025279b07608 of tooluniverse.tool_finder_llm:1
#, fuzzy
msgid ""
"LLM-based Tool Finder - A tool that uses LLM to find relevant tools based"
" on descriptions."
msgstr "基于LLM的工具查找器，利用自然语言处理技术选择相关工具。"

#: 06ab3f37d66d4dd6ad34c4e78d7bf739 of tooluniverse.tool_finder_llm:3
msgid ""
"This tool leverages AgenticTool's LLM functionality to create an "
"intelligent tool finder that puts only essential tool information (name "
"and description) in the prompt to minimize context window cost while "
"letting the LLM decide which tools to return based on the query."
msgstr ""

#: 1c3ac21da4de4ef2aab7def40bbdc2e1 of tooluniverse.tool_finder_llm:7
#, fuzzy
msgid ""
"Key optimizations: - Only sends tool name and description to LLM (no "
"parameters, configs, etc.) - Uses compact formatting to reduce token "
"count - Caches tool descriptions to avoid repeated processing - Excludes "
"irrelevant tools from prompt"
msgstr ""
"成本优化：  \n"
"- 在LLM提示中仅包含工具名称和描述  \n"
"- 使用紧凑格式以最小化Token使用量  \n"
"- 排除不必要的工具元数据和参数  \n"
"- 实现缓存以避免重复的工具处理"

#: ../../api/tooluniverse.rst:657 5c409104fd0d4ee89ca3aba4eab7100f
msgid "tooluniverse.tool\\_graph\\_web\\_ui module"
msgstr ""

#: bb904c13b6c24a57a5d5fe14306b2cfe of tooluniverse.tool_graph_web_ui:1
msgid "Tool Graph Web UI"
msgstr ""

#: a754b365f122413080225a42d744b1c3 of tooluniverse.tool_graph_web_ui:3
msgid ""
"A Flask-based web application for visualizing and exploring the tool "
"composition graph generated by ToolGraphComposer."
msgstr ""

#: c7f9a5e382b44dca804a2e6fdda92be6 of
#: tooluniverse.tool_graph_web_ui.ToolGraphWebUI:1
msgid "Web interface for visualizing tool composition graphs."
msgstr ""

#: bb1bfee9aef24cb1aa5f593de3dcdc28 of
#: tooluniverse.tool_graph_web_ui.ToolGraphWebUI.run:1
msgid "Run the web application."
msgstr ""

#: fe76435e68ec4deeaace4a8449edcf62 of
#: tooluniverse.tool_graph_web_ui.create_web_ui_files:1
msgid "Create the necessary HTML, CSS, and JS files for the web UI."
msgstr ""

#: ../../api/tooluniverse.rst:665 fec06b50651d49dba73d9ec0ae164345
msgid "tooluniverse.tool\\_registry module"
msgstr ""

#: 5c3adf9330d845658d97cc40350e92e3 of tooluniverse.tool_registry:1
#, fuzzy
msgid "Simplified tool registry for automatic tool discovery and registration."
msgstr "处理所有 MCPAutoLoaderTool 实例，以自动发现并注册 MCP 工具。"

#: e4ffcf3dd4cd454db6d1f30aa52f8435 of
#: tooluniverse.tool_registry.mark_tool_unavailable:1
msgid "Record tool failure."
msgstr ""

#: f814a73a02324f17b8367aacbf302d59 of
#: tooluniverse.tool_registry.get_tool_errors:1
msgid "Get all tool errors."
msgstr ""

#: 8872a45b97f44e15aa79429b6e026736 of
#: tooluniverse.tool_registry.register_external_tool:1
msgid "Allow external registration of tool classes."
msgstr ""

#: d712ff2cde1f4e6ca4d3d3f23978ee44 of
#: tooluniverse.tool_registry.register_config:1
msgid "Register a config for a tool type."
msgstr ""

#: 65c622fc3ce043fb91574dc4e32bc7dc of
#: tooluniverse.tool_registry.get_config_registry:1
#, fuzzy
msgid "Get a copy of the current config registry."
msgstr "获取当前工具注册表的副本。"

#: b48b462efc314d9d8c6f0bbf82a141be of
#: tooluniverse.tool_registry.lazy_import_tool:1
msgid ""
"Lazily import a tool by name without importing all tool modules. Only "
"imports the specific module containing the requested tool."
msgstr ""

#: d70d50afaa764ecda29f030fe284303f of
#: tooluniverse.tool_registry.build_lazy_registry:1
msgid ""
"Build a mapping of tool names to module names using config files and "
"naming patterns. This is truly lazy - it doesn't import any modules, just"
" creates the mapping."
msgstr ""

#: 8833bb1385134ac3a3d7b1090e3f99b7 of
#: tooluniverse.tool_registry.auto_discover_tools:1
msgid ""
"Automatically discover and import all tool modules. If lazy=True, only "
"builds the mapping without importing any modules. If lazy=False, imports "
"all tool modules immediately."
msgstr ""

#: 4cecb41db84a42ae9f06124863d6f816 of
#: tooluniverse.tool_registry.get_tool_class_lazy:1
msgid ""
"Get a tool class by name, using lazy loading if possible. Only imports "
"the specific module needed, not all modules."
msgstr ""

#: ../../api/tooluniverse.rst:673 5c46cef510be470889fd713959795cbe
msgid "tooluniverse.toolspace\\_loader module"
msgstr ""

#: c36e35e64f0a458498d434f7ed3366d9 of tooluniverse.toolspace_loader:1
#, fuzzy
msgid "ToolSpace Configuration Loader"
msgstr "工具配置字典"

#: ee0ba19a9be44c1faf90e141b030bce8 of tooluniverse.toolspace_loader:3
msgid "Simplified loader supporting HuggingFace, local files, and HTTP/HTTPS."
msgstr ""

#: 767dfe6df3b5472e8338dfb870a2319f of
#: tooluniverse.toolspace_loader.ToolSpaceLoader:1
#, fuzzy
msgid "Simplified loader for ToolSpace configurations."
msgstr "所有已加载工具配置列表"

#: c31def0689b34b5fa7e2e203806e654b of
#: tooluniverse.toolspace_loader.ToolSpaceLoader.__init__:1
#, fuzzy
msgid "Initialize the ToolSpace loader."
msgstr "初始化基于LLM的工具查找器。"

#: 8ab358c0cc24472b999ca2451e7cccf4 of
#: tooluniverse.toolspace_loader.ToolSpaceLoader.__init__:3
#, fuzzy
msgid "Directory for caching downloaded configurations"
msgstr "匹配工具配置列表"

#: 70d2c160ecf84c94950f131e94d60dfc of
#: tooluniverse.toolspace_loader.ToolSpaceLoader.load:1
#, fuzzy
msgid "Load ToolSpace configuration from URI."
msgstr "所有已加载工具配置列表"

#: 24ccc3f7f256461d8d828a1e32cd5f73 of
#: tooluniverse.toolspace_loader.ToolSpaceLoader.load:6
#, fuzzy
msgid "Loaded configuration dictionary"
msgstr "工具配置字典"

#: 4c805bc53e0a49caa7530fc934024ca7 of
#: tooluniverse.toolspace_loader.ToolSpaceLoader.load:8
msgid "If URI is unsupported or configuration is invalid"
msgstr ""

#: ../../api/tooluniverse.rst:681 7be9dc34bd6d4f43b2f1857fbb948bbb
msgid "tooluniverse.toolspace\\_schema module"
msgstr ""

#: ../../api/tooluniverse.rst:684 9e8491264cf54a6db05c6c304281604a
msgid ""
"This module has been removed. Use :mod:`tooluniverse.toolspace_validator`"
" instead for JSON Schema-based validation."
msgstr ""

#: ../../api/tooluniverse.rst:687 3cc1dfff46524d169ccee6454949c7af
msgid "tooluniverse.toolspace\\_validator module"
msgstr ""

#: fe72fd304fda42069db3dc44527dc50f of tooluniverse.toolspace_validator:1
#, fuzzy
msgid "ToolSpace Configuration Validator"
msgstr "工具配置字典"

#: fa2813d9ad404732ad99cda092dbcc3b of tooluniverse.toolspace_validator:3
msgid ""
"Comprehensive validation for ToolSpace configurations using JSON Schema. "
"Supports validation, default value filling, and structure checking for "
"ToolSpace YAML files."
msgstr ""

#: 347956b639e94b22a30ba9b7041e5a93 of tooluniverse.toolspace_validator:7
msgid ""
"The validation system is based on a comprehensive JSON Schema that "
"defines: - All possible fields and their types - Default values for "
"optional fields - Required fields and validation rules - Enum values for "
"specific fields - Nested object structures and arrays"
msgstr ""

#: aee6d6c5de1d489989b49f1d5b2d9aef of tooluniverse.toolspace_validator:14
msgid ""
"This provides a robust, flexible, and maintainable validation system that"
" can: 1. Validate YAML structure and content 2. Fill in missing default "
"values automatically 3. Provide detailed error messages for validation "
"failures 4. Support both simple tool collections and complex workspaces"
msgstr ""

#: 96f1297fd9e24707959ddb2cce776127 of
#: tooluniverse.toolspace_validator.ValidationError:1
#, fuzzy
msgid "Raised when configuration validation fails."
msgstr "工具配置字典列表"

#: b7596e670b694abcb720138fef186594 of
#: tooluniverse.toolspace_validator.validate_toolspace_config:1
#, fuzzy
msgid "Validate a ToolSpace configuration using JSON Schema."
msgstr "所有已加载工具配置列表"

#: b3bcd96930554bf197fc86a394bab215 of
#: tooluniverse.toolspace_validator.validate_toolspace_config:3
msgid ""
"This is a legacy function that now uses the JSON Schema validation "
"system. For new code, use validate_with_schema() instead."
msgstr ""

#: aeb1fde11e3d433d8ee390f59fefc94c of
#: tooluniverse.toolspace_validator.validate_toolspace_config:6
#, fuzzy
msgid "Configuration dictionary"
msgstr "工具配置字典"

#: 70550da1d23a48888576d18da6d2077b 8de4184569044ff1991a5afd9edf752b
#: e1c0b89233284eff88a527152830197c of
#: tooluniverse.toolspace_validator.validate_toolspace_config:8
#: tooluniverse.toolspace_validator.validate_yaml_file:5
#: tooluniverse.toolspace_validator.validate_yaml_format_by_template:8
#, fuzzy
msgid "Tuple of (is_valid, list_of_errors)"
msgstr "一个由 (is_valid, message) 组成的元组，其中："

#: 10c5435cba134a289cea1e730c960a53 of
#: tooluniverse.toolspace_validator.validate_yaml_format_by_template:1
msgid "Validate YAML format by comparing against default template format."
msgstr ""

#: e5606148caff43d3a032609abf624666 of
#: tooluniverse.toolspace_validator.validate_yaml_format_by_template:3
msgid ""
"This method uses the JSON Schema as a reference to validate the structure"
" and content of ToolSpace YAML configurations."
msgstr ""

#: 99017bb95f124f9ca4f1bdc98ebe0388 e3edbdfd33c44090b4335f3654540b0d of
#: tooluniverse.toolspace_validator.validate_with_schema:3
#: tooluniverse.toolspace_validator.validate_yaml_format_by_template:6
msgid "YAML content string"
msgstr ""

#: 144daae9bc354d9eabf0fd213efaea94 of
#: tooluniverse.toolspace_validator.validate_yaml_file:1
msgid "Validate a YAML file by comparing against default template format."
msgstr ""

#: 13b09a74e4774c9e89963be7d6419abe 16c66cc539ea47cea675e75d8aaad063 of
#: tooluniverse.toolspace_validator.validate_yaml_file:3
#: tooluniverse.toolspace_validator.validate_yaml_file_with_schema:3
#, fuzzy
msgid "Path to YAML file"
msgstr "输出文件路径"

#: 525d6978d27f4482a72a186e3ff25914 of
#: tooluniverse.toolspace_validator.fill_defaults:1
msgid "Recursively fill default values from JSON schema."
msgstr ""

#: 2bfbf92ab89741c1bd7a49953fdf9355 of
#: tooluniverse.toolspace_validator.fill_defaults:3
#, fuzzy
msgid "Configuration data"
msgstr "工具配置字典"

#: bccc7afacadc45ca90f5e9ad94c96133 of
#: tooluniverse.toolspace_validator.fill_defaults:4
msgid "JSON schema with default values"
msgstr ""

#: c6679d646f874a768f7d7ef57a6e7d33 of
#: tooluniverse.toolspace_validator.fill_defaults:6
#, fuzzy
msgid "Configuration with default values filled"
msgstr "指定名称的工具配置列表。"

#: f2cd41b649f04608a3e7d3c236f60dc4 of
#: tooluniverse.toolspace_validator.validate_with_schema:1
msgid ""
"Validate YAML content using JSON Schema and optionally fill default "
"values."
msgstr ""

#: ad2be5783376455c9aa9be197c63001a f8c3cd7867ab401a9c9ccc9072231573 of
#: tooluniverse.toolspace_validator.validate_with_schema:4
#: tooluniverse.toolspace_validator.validate_yaml_file_with_schema:4
#, fuzzy
msgid "Whether to fill default values"
msgstr "是否启用输出钩子。默认为 False。"

#: 07c97be07f9949598ef099f8b71377b3 fefa298c042d4b11ae5d933b4151b81d of
#: tooluniverse.toolspace_validator.validate_with_schema:6
#: tooluniverse.toolspace_validator.validate_yaml_file_with_schema:6
#, fuzzy
msgid "Tuple of (is_valid, list_of_errors, processed_config)"
msgstr "一个由 (is_valid, message) 组成的元组，其中："

#: 398c3b7e51d341d89935f245bb931094 of
#: tooluniverse.toolspace_validator.validate_yaml_file_with_schema:1
msgid "Validate a YAML file using JSON Schema and optionally fill default values."
msgstr ""

#: ../../api/tooluniverse.rst:695 9d2142ecf2a945ad90b9f4ecee3bed1a
msgid "tooluniverse.ucsc\\_tool module"
msgstr ""

#: 7ca3222bc07a44089351b0ec2eb2337f of tooluniverse.ucsc_tool.UCSCTool:1
msgid ""
"Local tool wrapper for UCSC Genome Browser track API. Queries knownGene "
"track for genomic regions."
msgstr ""

#: ../../api/tooluniverse.rst:703 16919fd3511e4b9aae4d7b5126d35bae
msgid "tooluniverse.unified\\_guideline\\_tools module"
msgstr ""

#: 2a04589cb2ec429da1ccf1b0ac89c8b8 of tooluniverse.unified_guideline_tools:1
msgid ""
"Unified Guideline Tools Consolidated clinical guidelines search tools "
"from multiple sources."
msgstr ""

#: 8856c2880eb849a48a716a768b532e65 of
#: tooluniverse.unified_guideline_tools.NICEWebScrapingTool:1
msgid ""
"Real NICE guidelines search using web scraping. Makes actual HTTP "
"requests to NICE website and parses HTML responses."
msgstr ""

#: 5e4cfaacbc224638a616c40eed2e273c of
#: tooluniverse.unified_guideline_tools.PubMedGuidelinesTool:1
msgid ""
"Search PubMed for clinical practice guidelines. Uses NCBI E-utilities "
"with guideline publication type filter."
msgstr ""

#: cc43f77fe39346a3aef1642788e45045 of
#: tooluniverse.unified_guideline_tools.EuropePMCGuidelinesTool:1
msgid ""
"Search Europe PMC for clinical guidelines. Europe PMC provides access to "
"life science literature including guidelines."
msgstr ""

#: b0f529fb6f764239b4b10a890e85d8d1 of
#: tooluniverse.unified_guideline_tools.TRIPDatabaseTool:1
msgid ""
"Search TRIP Database (Turning Research into Practice). Specialized "
"evidence-based medicine database with clinical guidelines filter."
msgstr ""

#: e6c2eaa8e5804cf2819afc30b4f54601 of
#: tooluniverse.unified_guideline_tools.WHOGuidelinesTool:1
msgid ""
"WHO (World Health Organization) Guidelines Search Tool. Searches WHO "
"official guidelines from their publications website."
msgstr ""

#: 71cda62093594713822e0df8b38d5c00 of
#: tooluniverse.unified_guideline_tools.OpenAlexGuidelinesTool:1
msgid ""
"OpenAlex Guidelines Search Tool. Specialized tool for searching clinical "
"practice guidelines using OpenAlex API."
msgstr ""

#: 28ff42041e5a4157b57445a6823981de of
#: tooluniverse.unified_guideline_tools.NICEGuidelineFullTextTool:1
msgid ""
"Fetch full text content from NICE guideline pages. Takes a NICE guideline"
" URL and extracts the complete guideline content."
msgstr ""

#: fcc9af7e2a05430da74d8aaf0bcf6f61 of
#: tooluniverse.unified_guideline_tools.WHOGuidelineFullTextTool:1
msgid ""
"Fetch full text content from WHO guideline pages. Takes a WHO publication"
" URL and extracts content or PDF download link."
msgstr ""

#: 480f6df6d030403594329d91a75b91d7 of
#: tooluniverse.unified_guideline_tools.GINGuidelinesTool:1
msgid ""
"Guidelines International Network (GIN) Guidelines Search Tool. Searches "
"the global guidelines database with 6400+ guidelines from various "
"organizations."
msgstr ""

#: b076e98fa2f6464a90c7c43cf10c7141 of
#: tooluniverse.unified_guideline_tools.CMAGuidelinesTool:1
msgid ""
"Canadian Medical Association (CMA) Infobase Guidelines Search Tool. "
"Searches the CMA Infobase with 1200+ Canadian clinical practice "
"guidelines."
msgstr ""

#: ../../api/tooluniverse.rst:711 16249bb2a66f4bef8aff6e5c081ba266
msgid "tooluniverse.uniprot\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:719 a59a8cd7b0e34d9a8482d0071710ae10
msgid "tooluniverse.unpaywall\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:727 d92e1fb3e72d41f894318ec16fdaebb7
msgid "tooluniverse.url\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:735 aa02f016d1664cd3a5d9ed5d680e82d3
msgid "tooluniverse.uspto\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:743 f9219e855ff04c1ea65946dd58de9c0d
#, fuzzy
msgid "tooluniverse.utils module"
msgstr "tooluniverse 软件包"

#: bef24185812c4f42b5a835660e04c299 of tooluniverse.utils.get_user_cache_dir:1
msgid "Return a cross-platform user cache directory for ToolUniverse."
msgstr ""

#: 82a4ce304626451d86b2b6d49e5d8ede of tooluniverse.utils.get_user_cache_dir:3
msgid ""
"macOS: ~/Library/Caches/ToolUniverse Linux: $XDG_CACHE_HOME or "
"~/.cache/tooluniverse Windows: %LOCALAPPDATA%\\ToolUniverse\\Cache"
msgstr ""

#: e88684e4474d4ca78f5c3004615865b5 of tooluniverse.utils.yaml_to_dict:1
msgid "Convert a YAML file to a dictionary."
msgstr ""

#: af74dba7dad04315b269f0e8bacec43b of tooluniverse.utils.yaml_to_dict:3
#, fuzzy
msgid "Path to the YAML file."
msgstr "输出文件路径"

#: 4cb364acc75f41e9b0c8341d3ae8bdbd of tooluniverse.utils.yaml_to_dict:7
msgid "dict: Dictionary representation of the YAML file content."
msgstr ""

#: 5b4c96cb3e894cd8b9af73292d5b5a69 of tooluniverse.utils.read_json_list:1
msgid "Reads a list of JSON objects from a file."
msgstr ""

#: db84b53138304f2d92178b29bd263f78 of tooluniverse.utils.read_json_list:3
#, fuzzy
msgid "Parameters file_path (str): The path to the JSON file."
msgstr "输出文件路径"

#: 44cb244d02a144c4b5e9b7798290f3fc of tooluniverse.utils.read_json_list:6
#, fuzzy
msgid "Returns list: A list of dictionaries containing the JSON objects."
msgstr "指定名称的工具配置列表。"

#: 8be74355586e46068ade25b2d4a53af1 of
#: tooluniverse.utils.format_error_response:1
#, fuzzy
msgid "Format error responses in a consistent structure."
msgstr "为确保一致性，使用JSON格式的错误响应"

#: 27ec43f879b84d0fb3affe0e477f925a of
#: tooluniverse.utils.format_error_response:3
msgid ""
"This function ensures all error responses follow the same format for "
"better error handling and debugging."
msgstr ""

#: b179b56d8bb4458eb4a780f45eba7403 of
#: tooluniverse.utils.format_error_response:6
msgid "The error that occurred"
msgstr ""

#: 6a983e8f8c2c448ab6d7f86f0348f097 of
#: tooluniverse.utils.format_error_response:8
#, fuzzy
msgid "Name of the tool that failed"
msgstr "调用工具的名称"

#: 0f695df5bc56420b8fb5f25e40ea8f1d of
#: tooluniverse.utils.format_error_response:14
msgid "Dict[str, Any]: Standardized error response"
msgstr ""

#: 730cf794985a4f7e8280946989d7d31d of
#: tooluniverse.utils.get_parameter_schema:1
#, fuzzy
msgid "Get parameter schema from tool configuration."
msgstr "从本地配置获取软件包信息"

#: 4e3b2cd959204ba099f5e09ad2fda8b2 of
#: tooluniverse.utils.get_parameter_schema:7
#, fuzzy
msgid "Dict[str, Any]: Parameter schema dictionary"
msgstr "工具参数模式"

#: 63db842ecd9a4f7bbb79298e287944fa of tooluniverse.utils.validate_query:1
msgid "Validate a query dictionary for required fields and structure."
msgstr ""

#: de9521e1b9424c168a4826afc51903c6 of tooluniverse.utils.validate_query:3
#, fuzzy
msgid "The query dictionary to validate"
msgstr "函数调用字符串或需验证的数据。"

#: a428cc97f5c64076abb9788f808b9884 of tooluniverse.utils.validate_query:7
#, fuzzy
msgid "bool: True if query is valid, False otherwise"
msgstr "如果工具支持流式处理，则为 True，否则为 False"

#: d46a5b0eea5346c7bdbd6775684e2bc9 of
#: tooluniverse.utils.normalize_gene_symbol:1
msgid "Normalize a gene symbol to standard format."
msgstr ""

#: bc7c9cdc718e471195441611d6a1a22d of
#: tooluniverse.utils.normalize_gene_symbol:3
msgid "The gene symbol to normalize"
msgstr ""

#: 216cda3b64044044ab49cd8d50083ee5 of
#: tooluniverse.utils.normalize_gene_symbol:7
msgid "str: Normalized gene symbol"
msgstr ""

#: e07acbbcdf05479a908af5ff0f817829 of tooluniverse.utils.format_api_response:1
msgid "Format API response data into a standardized format."
msgstr ""

#: 6ce39372b6a544bbbe89e4aee5e04b54 of tooluniverse.utils.format_api_response:3
#, fuzzy
msgid "The response data to format"
msgstr "响应格式："

#: df2e566b4b61463f8c2fec15178381bc of tooluniverse.utils.format_api_response:5
msgid "The desired output format ('json', 'pretty', 'minimal')"
msgstr ""

#: 7a7b5e38c7dc4c10bcc5f5c7953b047c of tooluniverse.utils.format_api_response:9
msgid "Union[str, Dict[str, Any]]: Formatted response"
msgstr ""

#: 5d884efa2309475884b9051d1acf8e98 of
#: tooluniverse.utils.validate_hook_config:1
#, fuzzy
msgid "Validate hook configuration for correctness and completeness."
msgstr "指定名称的工具配置列表。"

#: 4d1d64ebe2f94e3c8e17d3131846e883 of
#: tooluniverse.utils.validate_hook_config:3
msgid ""
"This function checks that the hook configuration contains all required "
"fields and that the structure is valid for the hook system."
msgstr ""

#: 145b144542274389bedc4abf820ab2a5 of
#: tooluniverse.utils.validate_hook_config:6
#, fuzzy
msgid "Hook configuration to validate"
msgstr "工具配置"

#: 0da9fcdb9d524af7b044188f523ed979 of
#: tooluniverse.utils.validate_hook_config:10
#, fuzzy
msgid "bool: True if configuration is valid, False otherwise"
msgstr "如果找到工具配置，则返回；否则返回None。"

#: 62180bf5c6aa4d1c84ac70a1ab7aa64f of
#: tooluniverse.utils.validate_hook_conditions:1
msgid "Validate hook trigger conditions."
msgstr ""

#: 65dc7dfbe0be43af876ab504d414e61c of
#: tooluniverse.utils.validate_hook_conditions:3
msgid ""
"This function checks that the hook conditions are properly structured and"
" contain valid operators and thresholds."
msgstr ""

#: 3d0d866e69cb40baaf824b902320ed83 of
#: tooluniverse.utils.validate_hook_conditions:6
#, fuzzy
msgid "Hook conditions to validate"
msgstr "函数调用字符串或需验证的数据。"

#: 0c0fcffd1d7a49d5be5cd15d4db2d412 of
#: tooluniverse.utils.validate_hook_conditions:10
#, fuzzy
msgid "bool: True if conditions are valid, False otherwise"
msgstr "如果工具支持流式处理，则为 True，否则为 False"

#: ../../api/tooluniverse.rst:751 1fc788f9980742109d1b4e90b324ffac
msgid "tooluniverse.visualization\\_tool module"
msgstr ""

#: 7d7b6c49b48a4229afa98dc7c5543c3e of tooluniverse.visualization_tool:2
#, fuzzy
msgid "Visualization Tool Base Class for ToolUniverse"
msgstr "从 ToolUniverse 获取有效的工具类别。"

#: 09b169f6c64d41dfa340dbec870c8e51 of tooluniverse.visualization_tool:4
msgid ""
"This module provides the base VisualizationTool class that all "
"visualization tools inherit from. It provides common functionality for "
"HTML generation, image conversion, error handling, and output formatting."
msgstr ""

#: f47f69bba9844903a05daddecd78c049 of
#: tooluniverse.visualization_tool.VisualizationTool:1
msgid "Base class for all visualization tools in ToolUniverse."
msgstr ""

#: 6a45d018638e4982b410e34dc42a018b of
#: tooluniverse.visualization_tool.VisualizationTool:3
msgid ""
"Provides common functionality for: - HTML generation and embedding - "
"Static image conversion - Error handling - Output formatting"
msgstr ""

#: 1e74ff9c2f7c4276be90447b693ab081 of
#: tooluniverse.visualization_tool.VisualizationTool.create_visualization_response:1
msgid "Create a standardized visualization response."
msgstr ""

#: 96d55a5e883c49f486b1c44adca56532 of
#: tooluniverse.visualization_tool.VisualizationTool.create_error_response:1
msgid "Create a standardized error response."
msgstr ""

#: f4d5c44ac8ec45718d9af7e20b90f79b of
#: tooluniverse.visualization_tool.VisualizationTool.convert_to_base64_image:1
msgid "Convert image data to base64 string."
msgstr ""

#: 709c565ca8ce404a86fb67f109aee346 of
#: tooluniverse.visualization_tool.VisualizationTool.create_plotly_html:1
msgid "Create HTML from Plotly figure."
msgstr ""

#: 62bc309736b54716bf07e8daf4a90c28 of
#: tooluniverse.visualization_tool.VisualizationTool.create_py3dmol_html:1
msgid "Create modern HTML wrapper for py3Dmol viewer."
msgstr ""

#: 0feda9db1c8e4e2aa05171f991fe6de1 of
#: tooluniverse.visualization_tool.VisualizationTool.add_3d_controls_script:1
msgid "Add JavaScript for 3D viewer controls."
msgstr ""

#: 1cb959a5a56e4e2e88ae58237a0e72f2 of
#: tooluniverse.visualization_tool.VisualizationTool.create_molecule_2d_html:1
msgid "Create modern HTML for 2D molecule visualization."
msgstr ""

#: ../../api/tooluniverse.rst:759 b52ced81a0604b6c832f4423e4d6e471
msgid "tooluniverse.wikidata\\_sparql\\_tool module"
msgstr ""

#: 84afa8379a7b4f278f9a552bd71f3aeb of
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool:1
msgid "Run SPARQL queries against Wikidata (powering Scholia views)."
msgstr ""

#: 0c622574d63247bc868050488e1ebfc5 of
#: tooluniverse.wikidata_sparql_tool.WikidataSPARQLTool:4
msgid ""
"sparql (str): SPARQL query string max_results (int): Optional result "
"limit override"
msgstr ""

#: ../../api/tooluniverse.rst:767 c574f08f647d4171ae852da9d569b778
msgid "tooluniverse.xml\\_tool module"
msgstr ""

#: ../../api/tooluniverse.rst:775 e0ff00446f644d5d9089672c1e436996
msgid "tooluniverse.zenodo\\_tool module"
msgstr ""

#~ msgid "Search bioRxiv preprints using the public bioRxiv API."
#~ msgstr "使用公共 bioRxiv API 搜索 bioRxiv 预印本。"

#~ msgid ""
#~ "This method takes existing tool name "
#~ "and description lists and filters them"
#~ " according to the specified criteria "
#~ "using the select_tools method for "
#~ "category-based filtering."
#~ msgstr "该方法采用现有的工具名称和描述列表，并使用 select_tools 方法根据指定的条件进行类别筛选。"

#~ msgid "List of tool configurations with only essential keys for prompting."
#~ msgstr "工具配置列表，仅包含用于提示的必要键。"

#~ msgid ""
#~ "This method is similar to "
#~ "prepare_tool_prompts but includes additional "
#~ "keys useful for examples and "
#~ "documentation."
#~ msgstr "此方法类似于 prepare_tool_prompts，但包含了一些对示例和文档有用的额外键值。"

#~ msgid "Preserves original FastMCP request handler for standard methods"
#~ msgstr "保留原始的FastMCP请求处理器以支持标准方法"

#~ msgid "Uses method interception pattern to handle custom methods first"
#~ msgstr "使用方法拦截模式优先处理自定义方法"

#~ msgid "Falls back to original handler for unrecognized methods"
#~ msgstr "对于未识别的方法，回退到原始处理程序"

#~ msgid "Gracefully handles missing request handlers"
#~ msgstr "优雅地处理缺失的请求处理程序"

#~ msgid "Logs warnings for debugging when handler patching fails"
#~ msgstr "在处理程序修补失败时记录调试警告"

#~ msgid ""
#~ "Ensures server continues to function "
#~ "even if custom methods fail to "
#~ "register"
#~ msgstr "确保即使自定义方法注册失败，服务器仍能继续正常运行"

#~ msgid ""
#~ "Custom MCP request handler that supports"
#~ " enhanced scientific tool operations."
#~ msgstr "支持增强型科学工具操作的自定义MCP请求处理程序"

#~ msgid ""
#~ "This handler intercepts MCP requests and"
#~ " provides specialized handling for "
#~ "scientific tool discovery methods while "
#~ "maintaining full compatibility with standard"
#~ " MCP protocol operations."
#~ msgstr "此处理程序拦截MCP请求，并为科学工具发现方法提供专门的处理，同时完全兼容标准MCP协议操作。"

#~ msgid "request"
#~ msgstr "请求"

#~ msgid ""
#~ "JSON-RPC 2.0 request object containing:"
#~ " - method: The MCP method being "
#~ "called - id: Request identifier for "
#~ "response correlation - params: Method-"
#~ "specific parameters"
#~ msgstr ""
#~ "JSON-RPC 2.0 请求对象包含：  \n"
#~ "- method：正在调用的MCP方法  \n"
#~ "- id：用于响应关联的请求标识符  \n"
#~ "- params：方法特定的参数"

#~ msgid ""
#~ "JSON-RPC 2.0 response object with "
#~ "either: - result: Successful operation "
#~ "result - error: Error information with"
#~ " code and message"
#~ msgstr ""
#~ "JSON-RPC 2.0 响应对象包含以下两种情况之一：  \n"
#~ "- result：成功操作的结果  \n"
#~ "- error：包含错误代码和错误信息的错误详情"

#~ msgid "Supported Custom Methods:"
#~ msgstr "支持的自定义方法："

#~ msgid ""
#~ "Search for tools using natural language"
#~ " queries with AI-powered recommendations."
#~ " Parameters: - query (required): Natural"
#~ " language description of desired "
#~ "functionality - categories (optional): List"
#~ " of tool categories to filter by "
#~ "- limit (optional): Maximum number of"
#~ " results (default: 10) - "
#~ "use_advanced_search (optional): Use AI vs "
#~ "keyword search (default: True) - "
#~ "search_method (optional): Specific search "
#~ "method - 'auto', 'llm', 'embedding', "
#~ "'keyword' (default: 'auto') - format "
#~ "(optional): Response format - 'detailed' "
#~ "or 'mcp_standard'"
#~ msgstr ""
#~ "使用自然语言查询并通过AI驱动的推荐功能搜索工具。\n"
#~ "\n"
#~ "参数说明：  \n"
#~ "- **query**（必填）：所需功能的自然语言描述  \n"
#~ "- **categories**（可选）：用于筛选的工具类别列表  \n"
#~ "- **limit**（可选）：返回结果的最大数量（默认值：10）  \n"
#~ "- **use_advanced_search**（可选）：使用AI搜索还是关键词搜索（默认值：True）  \n"
#~ "- **search_method**（可选）：指定的搜索方法 - "
#~ "'auto'、'llm'、'embedding'、'keyword'（默认值：'auto'）  \n"
#~ "- **format**（可选）：响应格式 - 'detailed' 或 'mcp_standard'"

#~ msgid "Alias for tools/find method with identical parameters and behavior."
#~ msgstr "工具/find方法的别名，具有相同的参数和行为。"

#~ msgid "Standard MCP Methods:"
#~ msgstr "标准MCP方法："

#~ msgid ""
#~ "All other methods are forwarded to "
#~ "the original FastMCP handler, ensuring "
#~ "full compatibility with MCP specification."
#~ msgstr "所有其他方法都会转发到原始的FastMCP处理程序，以确保与MCP规范完全兼容。"

#~ msgid "Error Codes:"
#~ msgstr "错误代码："

#~ msgid "-32601: Method not found (unknown method)"
#~ msgstr "-32601：未找到方法（未知方法）"

#~ msgid "-32602: Invalid params (missing required parameters)"
#~ msgstr "-32602：无效参数（缺少必需参数）"

#~ msgid "-32603: Internal error (server-side failures)"
#~ msgstr "-32603：内部错误（服务器端故障）"

#~ msgid "Request for tool discovery: ```json {"
#~ msgstr "工具发现请求：```json"

#~ msgid ""
#~ "\"jsonrpc\": \"2.0\", \"id\": \"search_123\", "
#~ "\"method\": \"tools/find\", \"params\": {"
#~ msgstr ""

#~ msgid ""
#~ "\"query\": \"protein structure analysis\", "
#~ "\"limit\": 5, \"format\": \"mcp_standard\""
#~ msgstr "query\": \"蛋白质结构分析\", \"limit\": 5, \"format\": \"mcp_standard"

#~ msgid "Successful response: ```json {"
#~ msgstr "成功响应：```json"

#~ msgid "\"jsonrpc\": \"2.0\", \"id\": \"search_123\", \"result\": {"
#~ msgstr ""

#~ msgid "\"tools\": [...], \"_meta\": {"
#~ msgstr ""

#~ msgid ""
#~ "\"search_query\": \"protein structure analysis\","
#~ " \"search_method\": \"AI-powered "
#~ "(ToolFinderLLM)\", \"total_matches\": 5"
#~ msgstr ""
#~ "\"search_query\": \"蛋白质结构分析\", \"search_method\": "
#~ "\"AI驱动（ToolFinderLLM）\", \"total_matches\": 5"

#~ msgid "Access to the internal cache for testing purposes."
#~ msgstr ""

#~ msgid ""
#~ "Check if a tool's required API "
#~ "keys are available. Also supports "
#~ "optional_api_keys where at least one key"
#~ " from the list must be available."
#~ msgstr ""

#~ msgid ""
#~ "Tool configuration containing optional "
#~ "'required_api_keys' and 'optional_api_keys' fields"
#~ msgstr ""

#~ msgid "(bool, list) - (all_keys_available, missing_keys)"
#~ msgstr ""

#~ msgid "Check if value matches expected basic type."
#~ msgstr ""

#~ msgid "Classify exception by delegating to BaseTool."
#~ msgstr "将原始异常分类为结构化的 ToolError。"

#~ msgid "Create dual-format error response for backward compatibility."
#~ msgstr ""

#~ msgid ""
#~ "Hook type(s) to enable. Can be "
#~ "'SummarizationHook', 'FileSaveHook', or a list"
#~ " of both."
#~ msgstr ""

#~ msgid "Execute a list of function calls, optionally in parallel."
#~ msgstr ""

#~ msgid "Optional streaming callback."
#~ msgstr ""

#~ msgid "Whether to enable cache lookups for each call."
#~ msgstr "是否启用输出钩子。默认为 False。"

#~ msgid "Maximum parallel workers; values <=1 fall back to sequential execution."
#~ msgstr ""

#~ msgid "List of results aligned with ``function_calls`` order."
#~ msgstr ""

#~ msgid ""
#~ "Invoke a tool, forwarding stream "
#~ "callbacks and other parameters when "
#~ "supported."
#~ msgstr ""

#~ msgid ""
#~ "Filter tools based on inclusion/exclusion "
#~ "criteria and remove duplicates."
#~ msgstr "根据包含/排除标准筛选工具并去除重复项。"

#~ msgid "Set of tool names to include (if None, include all)"
#~ msgstr "工具名称列表。如果为 None，则包含所有。"

#~ msgid "Set of tool types to include (if None, include all)"
#~ msgstr "工具名称列表。如果为 None，则包含所有。"

#~ msgid "Set of tool types to exclude (if None, exclude none)"
#~ msgstr "工具名称列表。如果为 None，则包含所有。"

#~ msgid "Get API key from environment variables or loaded sources"
#~ msgstr ""

#~ msgid "Get or create tool instance with optional caching."
#~ msgstr ""

#~ msgid "Load auto-discovered configs from the decorator registry."
#~ msgstr ""

#~ msgid ""
#~ "This method loads tool configurations "
#~ "that were registered automatically via "
#~ "the @register_tool decorator with config "
#~ "parameter."
#~ msgstr ""

#~ msgid "Load tool names from a text file (one tool name per line)."
#~ msgstr "将工具名称导出到文本文件（每行一个）。"

#~ msgid "Path to the text file containing tool names"
#~ msgstr ""

#~ msgid "Load tools from a specific MCP server."
#~ msgstr "从MCP服务器列出可用工具"

#~ msgid "Generate cache key by delegating to BaseTool."
#~ msgstr "为此工具调用生成缓存键。"

#~ msgid ""
#~ "This method scans through all loaded "
#~ "tools for MCPAutoLoaderTool instances and "
#~ "runs their auto-discovery process to "
#~ "find and register MCP tools from "
#~ "configured servers. It handles async "
#~ "operations properly with cleanup and "
#~ "error handling."
#~ msgstr ""

#~ msgid "May add new tools to the tool registry"
#~ msgstr "获取当前工具注册表的副本。"

#~ msgid "Prints debug information about the discovery process"
#~ msgstr "获取有关已加载数据集的信息。"

#~ msgid "Updates tool counts after MCP registration"
#~ msgstr ""

#~ msgid "Read tools from a single JSON file with error handling."
#~ msgstr ""

#~ msgid ""
#~ "Recursively scan all JSON files in "
#~ "the data directory and its "
#~ "subdirectories."
#~ msgstr "当 scan_all=True 时，系统会扫描 data/ 目录及其子目录中的所有 JSON 文件"

#~ msgid ""
#~ "(all_tools, all_tool_names) where all_tools is"
#~ " a list of tool configs        and"
#~ " all_tool_names is a set of tool "
#~ "names for deduplication"
#~ msgstr ""

#~ msgid "(all_tools, all_tool_names) where all_tools is a list of tool configs"
#~ msgstr ""

#~ msgid "and all_tool_names is a set of tool names for deduplication"
#~ msgstr ""

#~ msgid "Scan predefined tool files (original behavior)."
#~ msgstr ""

#~ msgid "Validate parameters by delegating to BaseTool."
#~ msgstr "验证函数调用是否符合工具配置。"

#~ msgid "Manually extract generally most useful information"
#~ msgstr ""

#~ msgid "Helper function to call other tools from within composition code."
#~ msgstr ""

#~ msgid "Create an event emitter function for the compose script."
#~ msgstr ""

#~ msgid "Event emitter function"
#~ msgstr ""

#~ msgid "Automatically discover tool dependencies from composition code."
#~ msgstr ""

#~ msgid "Set of tool names that this composition calls"
#~ msgstr "此组件调用的工具名称集"

#~ msgid "Emit a stream chunk if callback is provided."
#~ msgstr ""

#~ msgid "The chunk to emit"
#~ msgstr ""

#~ msgid "Execute composition code from external file."
#~ msgstr ""

#~ msgid "Input arguments"
#~ msgstr "组成的输入参数"

#~ msgid "Execute inline composition code (existing behavior)."
#~ msgstr ""

#~ msgid "Create a mapping from tool names to their categories."
#~ msgstr "将工具名称映射到其配置的字典"

#~ msgid "Mapping of tool names to category names"
#~ msgstr "工具名称到类别名称的映射"

#~ msgid "Load composition code from external Python file."
#~ msgstr ""

#~ msgid "The composition code as a string"
#~ msgstr ""

#~ msgid "Automatically load missing tool dependencies."
#~ msgstr ""

#~ msgid "Set of missing tool names"
#~ msgstr "可用工具名称列表"

#~ msgid "(successfully_loaded, failed_to_load)"
#~ msgstr ""

#~ msgid "Substitute template vars & build full URL."
#~ msgstr ""

#~ msgid ""
#~ "Filter PubTatorSearch results by score "
#~ "threshold and remove facet items that"
#~ " only have 'name', 'type', and "
#~ "'value'."
#~ msgstr ""

#~ msgid ""
#~ "Translate caller arg names → API "
#~ "param names, drop Nones, serialise "
#~ "lists."
#~ msgstr ""

#~ msgid "Get the global fallback chain from environment or use default."
#~ msgstr ""

#~ msgid "Try to initialize a specific API and model."
#~ msgstr ""

#~ msgid "Try to initialize the primary API, fallback to secondary if configured."
#~ msgstr ""

#~ msgid "Filter drugs based on specific criteria and field-based conditions."
#~ msgstr ""

#~ msgid ""
#~ "This function is dedicated to "
#~ "criteria-based filtering using simple "
#~ "field-condition-value parameters. It "
#~ "supports filter types like contains, "
#~ "starts_with, ends_with, exact, not_empty."
#~ msgstr ""

#~ msgid ""
#~ "Filter parameters including: - field "
#~ "(str): Field name to filter on -"
#~ " condition (str): Type of condition "
#~ "(contains, starts_with, ends_with, exact, "
#~ "not_empty) - value (str): Value to "
#~ "filter by (optional for not_empty "
#~ "condition) - limit (int): Maximum number"
#~ " of results"
#~ msgstr ""

#~ msgid "Filtered results with matched records and applied filters"
#~ msgstr ""

#~ msgid ""
#~ "Search drugs by name, ID, synonyms, "
#~ "or other fields using text-based "
#~ "queries."
#~ msgstr ""

#~ msgid ""
#~ "This function is dedicated to text-"
#~ "based searching across specified fields. "
#~ "It performs substring or exact matching"
#~ " based on user preferences."
#~ msgstr ""

#~ msgid ""
#~ "Search parameters including: - query "
#~ "(str): Text to search for - "
#~ "search_fields (list): Fields to search "
#~ "in - case_sensitive (bool): Whether "
#~ "search is case sensitive - exact_match"
#~ " (bool): Whether to perform exact "
#~ "matching - limit (int): Maximum number"
#~ " of results"
#~ msgstr ""

#~ msgid "Search results with matched records and metadata"
#~ msgstr ""

#~ msgid "Load the drugbank vocabulary CSV dataset."
#~ msgstr ""

#~ msgid ""
#~ "Combines endpoint_template (containing {xxx}) "
#~ "with path parameters from arguments to"
#~ " generate complete URL. For example "
#~ "endpoint_template=\"/data/pathway/{stId}\", "
#~ "arguments={\"stId\":\"R-HSA-73817\"} → Returns "
#~ "\"https://reactome.org/ContentService/data/pathway/R-HSA-73817\""
#~ msgstr ""

#~ msgid ""
#~ "Use regex to replace all {placeholder}"
#~ " in endpoint_template to generate complete"
#~ " URL path. For example "
#~ "endpoint_template=\"/compound/cid/{cid}/property/{property_list}/JSON\""
#~ " arguments={\"cid\":2244}, "
#~ "property_list=[\"MolecularWeight\",\"IUPACName\"] → "
#~ "\"/compound/cid/2244/property/MolecularWeight,IUPACName/JSON\" "
#~ "Finally returns "
#~ "\"https://pubchem.ncbi.nlm.nih.gov/rest/pug\" + "
#~ "concatenated path."
#~ msgstr ""

#~ msgid "Build complete URL"
#~ msgstr ""

#~ msgid "Extract content from text item"
#~ msgstr ""

#~ msgid "Custom data extraction with support for filtering"
#~ msgstr ""

#~ msgid "Generate installation instructions"
#~ msgstr ""

#~ msgid "Fetch package information from PyPI API"
#~ msgstr "获取全面的包信息。"

#~ msgid "Get quick start guide steps"
#~ msgstr ""

#~ msgid "Get usage example for the package"
#~ msgstr ""

#~ msgid "Register AI-powered tool search and discovery functionality."
#~ msgstr ""

#~ msgid ""
#~ "This method adds sophisticated tool "
#~ "discovery capabilities to the SMCP "
#~ "server, enabling clients to find "
#~ "relevant tools using natural language "
#~ "queries. It provides both programmatic "
#~ "(MCP tool) and protocol-level "
#~ "(tools/find method) interfaces for tool "
#~ "discovery."
#~ msgstr ""

#~ msgid "find_tools:"
#~ msgstr ""

#~ msgid "Primary tool discovery interface with AI-powered search capabilities."
#~ msgstr ""

#~ msgid ""
#~ "Parameters: - query (str): Natural "
#~ "language description of desired functionality"
#~ " - categories (list, optional): Tool "
#~ "categories to filter by - limit "
#~ "(int, default=10): Maximum number of "
#~ "results - use_advanced_search (bool, "
#~ "default=True): Use AI vs keyword search"
#~ msgstr ""

#~ msgid "Returns: JSON string with discovered tools and search metadata"
#~ msgstr ""

#~ msgid "search_tools:"
#~ msgstr ""

#~ msgid ""
#~ "Backward-compatible alias for find_tools "
#~ "with identical functionality. Maintained for"
#~ " compatibility with existing integrations."
#~ msgstr ""

#~ msgid "Search Capabilities:"
#~ msgstr ""

#~ msgid "AI-Powered Search (ToolFinderLLM):"
#~ msgstr ""

#~ msgid ""
#~ "Uses Large Language Model to understand"
#~ " query semantics with optimized context"
#~ msgstr ""

#~ msgid "Pre-filters tools using keyword matching to reduce LLM context cost"
#~ msgstr ""

#~ msgid ""
#~ "Analyzes only essential tool information "
#~ "(name + description) for cost efficiency"
#~ msgstr ""

#~ msgid "Provides relevance scoring and reasoning"
#~ msgstr ""

#~ msgid "Handles complex queries like \"analyze protein interactions in cancer\""
#~ msgstr ""

#~ msgid "Embedding-Based Search (Tool_RAG):"
#~ msgstr ""

#~ msgid "Uses vector embeddings for semantic similarity matching"
#~ msgstr "Tool_RAG：基于嵌入的相似性搜索"

#~ msgid "Fast approximate matching for large tool collections"
#~ msgstr ""

#~ msgid "Good balance between speed and semantic understanding"
#~ msgstr ""

#~ msgid "Keyword Search (Fallback):"
#~ msgstr ""

#~ msgid "Simple text matching against tool names and descriptions"
#~ msgstr "查找名称或描述中与模式匹配的工具。"

#~ msgid "Always available regardless of AI tool availability"
#~ msgstr ""

#~ msgid "Provides basic but reliable tool discovery"
#~ msgstr ""

#~ msgid "Search Strategy:"
#~ msgstr "搜索词"

#~ msgid "**Preference**: ToolFinderLLM (most intelligent, cost-optimized)"
#~ msgstr ""

#~ msgid "**Fallback**: Tool_RAG (semantic similarity)"
#~ msgstr ""

#~ msgid "**Final**: Simple keyword matching (always works)"
#~ msgstr ""

#~ msgid "Automatically initializes available search tools during setup"
#~ msgstr ""

#~ msgid "Shares search logic with tools/find MCP method"
#~ msgstr ""

#~ msgid "Provides consistent results across different interfaces"
#~ msgstr ""

#~ msgid "Handles tool loading and availability detection"
#~ msgstr ""

#~ msgid "Graceful degradation when AI tools unavailable"
#~ msgstr ""

#~ msgid "Informative error messages for debugging"
#~ msgstr ""

#~ msgid "Fallback mechanisms ensure search always works"
#~ msgstr ""

#~ msgid "Detailed logging of search method selection"
#~ msgstr ""

#~ msgid "Via MCP tool interface: ```python result = await find_tools("
#~ msgstr ""

#~ msgid ""
#~ "query=\"protein structure prediction\", "
#~ "categories=[\"uniprot\", \"hpa\"], limit=5"
#~ msgstr ""

#~ msgid "Via tools/find MCP method: ```json {"
#~ msgstr ""

#~ msgid "\"method\": \"tools/find\", \"params\": {"
#~ msgstr ""

#~ msgid "\"query\": \"drug interaction analysis\", \"limit\": 3"
#~ msgstr "\"query\": \"蛋白质结构分析\", \"limit\": 3"

#~ msgid "Register essential server management and diagnostic tools."
#~ msgstr ""

#~ msgid ""
#~ "This method adds a suite of "
#~ "utility tools that provide server "
#~ "introspection, tool management, and direct "
#~ "execution capabilities. These tools are "
#~ "essential for monitoring server health, "
#~ "understanding available capabilities, and "
#~ "providing administrative functionality."
#~ msgstr ""

#~ msgid "Registered Utility Tools:"
#~ msgstr "工具配置列表"

#~ msgid "get_server_info:"
#~ msgstr ""

#~ msgid "Comprehensive server status and capability reporting."
#~ msgstr ""

#~ msgid ""
#~ "Returns detailed JSON with: - Server "
#~ "identification (name, type, version info) "
#~ "- Tool statistics (total tools, exposed"
#~ " tools, categories) - Feature flags "
#~ "(search enabled, FastMCP status) - "
#~ "Resource usage (max workers, thread pool"
#~ " status)"
#~ msgstr ""

#~ msgid ""
#~ "Use cases: - Health checks and "
#~ "monitoring - Capability discovery by "
#~ "clients - Debugging server configuration "
#~ "issues"
#~ msgstr ""

#~ msgid ""
#~ "Direct interface for executing ToolUniverse"
#~ " functions with custom parameters."
#~ msgstr ""

#~ msgid ""
#~ "Parameters: - function_name (str): Name "
#~ "of the ToolUniverse tool to execute "
#~ "- arguments (str): JSON string "
#~ "containing tool parameters"
#~ msgstr ""

#~ msgid ""
#~ "Features: - Bypasses MCP tool wrappers"
#~ " for direct execution - Supports any"
#~ " loaded ToolUniverse tool - Provides "
#~ "detailed error reporting - Uses thread"
#~ " pool for non-blocking execution"
#~ msgstr ""

#~ msgid ""
#~ "Use cases: - Administrative tool "
#~ "execution - Debugging tool behavior -"
#~ " Custom automation scripts"
#~ msgstr ""

#~ msgid "list_available_tooluniverse_tools:"
#~ msgstr "可用工具名称列表"

#~ msgid "Comprehensive inventory of all available ToolUniverse tools."
#~ msgstr ""

#~ msgid ""
#~ "Returns: - Complete tool catalog with"
#~ " names, descriptions, types - Parameter "
#~ "schemas and requirements for each tool"
#~ " - Tool statistics and categorization"
#~ msgstr ""

#~ msgid ""
#~ "Use cases: - Tool discovery and "
#~ "exploration - Documentation generation - "
#~ "Client capability mapping - Integration "
#~ "planning"
#~ msgstr ""

#~ msgid "Each tool includes comprehensive try-catch blocks"
#~ msgstr "包含全面的文档字符串"

#~ msgid "Detailed error messages with context information"
#~ msgstr "附加配置选项："

#~ msgid "Graceful degradation when tools or data unavailable"
#~ msgstr ""

#~ msgid "Thread Safety:"
#~ msgstr ""

#~ msgid "All tools use async execution patterns"
#~ msgstr "高效的工具查找与执行"

#~ msgid "Thread pool executor for CPU-intensive operations"
#~ msgstr ""

#~ msgid "Proper resource cleanup and management"
#~ msgstr ""

#~ msgid "JSON parsing with proper validation"
#~ msgstr ""

#~ msgid "No file system access beyond ToolUniverse scope"
#~ msgstr ""

#~ msgid "Appropriate error message sanitization"
#~ msgstr ""

#~ msgid "Performance Optimization:"
#~ msgstr "性能注意事项："

#~ msgid "Lazy loading of tool information"
#~ msgstr "包含所选工具和元数据的字典"

#~ msgid "Caching where appropriate"
#~ msgstr ""

#~ msgid "Minimal memory footprint"
#~ msgstr ""

#~ msgid "Efficient JSON serialization"
#~ msgstr ""

#~ msgid ""
#~ "Server health check: ```python info ="
#~ " await get_server_info() status = "
#~ "json.loads(info) if status['total_tooluniverse_tools'] "
#~ "> 0:"
#~ msgstr ""

#~ msgid "# Server healthy pass"
#~ msgstr "# 服务器操作通过"

#~ msgid ""
#~ "Direct tool execution: ```python result "
#~ "= await execute_tooluniverse_function("
#~ msgstr ""

#~ msgid ""
#~ "function_name=\"UniProt_get_entry_by_accession\", "
#~ "arguments='{\"accession\": \"P05067\"}'"
#~ msgstr ""

#~ msgid ""
#~ "Tool inventory: ```python tools = await"
#~ " list_available_tooluniverse_tools() catalog = "
#~ "json.loads(tools) # Available: "
#~ "{catalog['total_tools']} tools ```"
#~ msgstr ""

#~ msgid "Create an MCP tool from a ToolUniverse tool configuration."
#~ msgstr "使用自定义的 ToolUniverse 配置"

#~ msgid ""
#~ "This method creates a function with "
#~ "proper parameter signatures that match "
#~ "the ToolUniverse tool schema, enabling "
#~ "FastMCP's automatic parameter validation."
#~ msgstr ""

#~ msgid "Automatically expose ToolUniverse tools as MCP-compatible tools."
#~ msgstr "SMCP 自动处理 ToolUniverse 工具加载和 MCP 转换"

#~ msgid ""
#~ "This method performs the critical task"
#~ " of converting ToolUniverse's tool "
#~ "definitions into FastMCP-compatible tools "
#~ "that can be called via the MCP "
#~ "protocol. It handles the complex mapping"
#~ " between different tool formats while "
#~ "ensuring compatibility and usability."
#~ msgstr ""

#~ msgid "Process Overview:"
#~ msgstr "服务器启动过程："

#~ msgid "**Tool Inventory**: Enumerate all loaded ToolUniverse tools"
#~ msgstr ""

#~ msgid "**Type Filtering**: Skip meta-tools that shouldn't be exposed"
#~ msgstr ""

#~ msgid "**Schema Conversion**: Transform ToolUniverse schemas to MCP format"
#~ msgstr ""

#~ msgid "**Function Wrapping**: Create async wrappers for tool execution"
#~ msgstr ""

#~ msgid "**Registration**: Register tools with FastMCP framework"
#~ msgstr "使用FastMCP框架注册的装饰函数。"

#~ msgid "Tool Type Filtering:"
#~ msgstr "输出文件路径"

#~ msgid ""
#~ "Skips these internal tool types: - "
#~ "MCPAutoLoaderTool: Used for loading other "
#~ "MCP servers - MCPClientTool: Used for"
#~ " connecting to external MCP servers"
#~ msgstr ""

#~ msgid ""
#~ "These are meta-tools that manage "
#~ "other tools rather than providing "
#~ "end-user functionality, so they're excluded"
#~ " from the MCP interface."
#~ msgstr ""

#~ msgid "ToolUniverse Tool Format: ```json {"
#~ msgstr "ToolUniverse 或 dict，可选"

#~ msgid "\"name\": \"tool_name\", \"parameter\": {"
#~ msgstr ""

#~ msgid "\"type\": \"object\", \"properties\": {...}, \"required\": [...]"
#~ msgstr ""

#~ msgid ""
#~ "MCP Tool Format: ```python async def "
#~ "tool_function(arguments: str = \"{}\") -> "
#~ "str:"
#~ msgstr ""

#~ msgid ""
#~ "**JSON Arguments**: All tools accept a"
#~ " single 'arguments' parameter containing "
#~ "JSON-encoded tool parameters"
#~ msgstr ""

#~ msgid "**Async Execution**: Tools run in thread pool to prevent blocking"
#~ msgstr ""

#~ msgid "**Error Handling**: Comprehensive error catching and reporting"
#~ msgstr "全面的错误处理与恢复"

#~ msgid "**Type Safety**: Proper argument parsing and validation"
#~ msgstr ""

#~ msgid "Duplicate Prevention:"
#~ msgstr ""

#~ msgid "Tracks exposed tools in self._exposed_tools set"
#~ msgstr ""

#~ msgid "Prevents re-registration of already exposed tools"
#~ msgstr ""

#~ msgid "Handles tool reloading scenarios gracefully"
#~ msgstr ""

#~ msgid "Individual tool failures don't stop the entire process"
#~ msgstr "单个清理失败不会中断整个流程"

#~ msgid "Detailed error logging for debugging"
#~ msgstr ""

#~ msgid "Continues with remaining tools if some fail to convert"
#~ msgstr ""

#~ msgid "Lazy evaluation of tool schemas"
#~ msgstr ""

#~ msgid "Minimal memory footprint per tool"
#~ msgstr ""

#~ msgid "Original ToolUniverse tool call: ```python tu.run_one_function({"
#~ msgstr ""

#~ msgid ""
#~ "\"name\": \"UniProt_get_entry_by_accession\", "
#~ "\"arguments\": {\"accession\": \"P05067\"}"
#~ msgstr ""

#~ msgid ""
#~ "Equivalent MCP tool call: ```python "
#~ "await tool_function('{\"accession\": \"P05067\"}') "
#~ "```"
#~ msgstr ""

#~ msgid "Set of valid tool category names"
#~ msgstr "可用工具名称列表"

#~ msgid "Handle the tools/find MCP method for AI-powered tool discovery."
#~ msgstr ""

#~ msgid ""
#~ "This method implements the core "
#~ "functionality for the custom tools/find "
#~ "MCP method, enabling clients to discover"
#~ " relevant scientific tools using natural"
#~ " language queries. It supports both "
#~ "AI-powered semantic search and simple "
#~ "keyword matching."
#~ msgstr ""

#~ msgid "request_id"
#~ msgstr ""

#~ msgid "Unique identifier for this request, used in the JSON-RPC response"
#~ msgstr ""

#~ msgid "params"
#~ msgstr "参数"

#~ msgid ""
#~ "Request parameters containing: - query "
#~ "(required): Natural language description of"
#~ " desired functionality - categories "
#~ "(optional): List of tool categories to"
#~ " filter results - limit (optional): "
#~ "Maximum number of tools to return "
#~ "(default: 10) - use_advanced_search "
#~ "(optional): Whether to use AI search "
#~ "(default: True) - search_method (optional):"
#~ " Specific search method - 'auto', "
#~ "'llm', 'embedding', 'keyword' (default: "
#~ "'auto') - format (optional): Response "
#~ "format - 'detailed' or 'mcp_standard' "
#~ "(default: 'detailed')"
#~ msgstr ""

#~ msgid ""
#~ "JSON-RPC 2.0 response containing either:"
#~ " - Success: Result with discovered "
#~ "tools and metadata - Error: Error "
#~ "object with appropriate code and message"
#~ msgstr ""

#~ msgid "Detailed Format (default):"
#~ msgstr ""

#~ msgid ""
#~ "Returns comprehensive tool information "
#~ "including: - Tool names, descriptions, "
#~ "types - Parameter schemas with detailed"
#~ " property information - Search metadata "
#~ "(query, method used, match count)"
#~ msgstr ""

#~ msgid "MCP Standard Format:"
#~ msgstr ""

#~ msgid ""
#~ "Returns tools in standard MCP tools/list"
#~ " format: - Simplified tool schema "
#~ "compatible with MCP clients - "
#~ "inputSchema formatted for direct MCP "
#~ "consumption - Metadata included in "
#~ "separate _meta field"
#~ msgstr ""

#~ msgid "Search Methods:"
#~ msgstr "搜索词"

#~ msgid "Uses Large Language Model to understand query semantics"
#~ msgstr ""

#~ msgid "Analyzes tool descriptions for intelligent matching"
#~ msgstr ""

#~ msgid "Automatically used when available and use_advanced_search=True"
#~ msgstr ""

#~ msgid "Simple Keyword Search:"
#~ msgstr ""

#~ msgid "Basic text matching against tool names and descriptions"
#~ msgstr "查找名称或描述中与模式匹配的工具。"

#~ msgid "Case-insensitive substring matching"
#~ msgstr ""

#~ msgid "Used as fallback or when use_advanced_search=False"
#~ msgstr ""

#~ msgid "Validates required parameters (query must be provided)"
#~ msgstr ""

#~ msgid "Handles search failures gracefully with informative messages"
#~ msgstr "在函数内优雅地处理错误"

#~ msgid "Provides detailed error context for debugging"
#~ msgstr "附加配置选项："

#~ msgid "Basic protein analysis search: ```python params = {"
#~ msgstr ""

#~ msgid "Category-filtered drug search: ```python params = {"
#~ msgstr ""

#~ msgid ""
#~ "\"query\": \"drug interactions\", \"categories\":"
#~ " [\"ChEMBL\", \"fda_drug_label\"], \"limit\": 5,"
#~ " \"format\": \"mcp_standard\""
#~ msgstr ""
#~ "name=\"药物发现API\", tool_categories=[\"ChEMBL\", "
#~ "\"fda药品标签\", \"临床试验\"], max_workers=10"

#~ msgid "Initialize intelligent tool discovery system with automatic fallback."
#~ msgstr ""

#~ msgid ""
#~ "This method sets up the tool "
#~ "finder infrastructure that powers AI-"
#~ "driven tool discovery. It implements a"
#~ " tiered approach, trying the most "
#~ "advanced search methods first and "
#~ "falling back to simpler methods if "
#~ "needed."
#~ msgstr ""

#~ msgid "Initialization Strategy:"
#~ msgstr ""

#~ msgid "Phase 1 - Detection:"
#~ msgstr ""

#~ msgid ""
#~ "Scans loaded ToolUniverse tools to "
#~ "identify available search tools: - "
#~ "ToolFinderLLM: Advanced LLM-based semantic "
#~ "search - Tool_RAG: Embedding-based "
#~ "similarity search"
#~ msgstr ""

#~ msgid "Phase 2 - Loading (if needed):"
#~ msgstr ""

#~ msgid ""
#~ "If no search tools are found, "
#~ "attempts to load them: - Loads "
#~ "'tool_finder_llm' and 'tool_finder' categories "
#~ "- Re-scans for available tools "
#~ "after loading"
#~ msgstr ""

#~ msgid "Phase 3 - Selection:"
#~ msgstr ""

#~ msgid ""
#~ "Selects the best available search "
#~ "method: 1. ToolFinderLLM (preferred - "
#~ "most intelligent) 2. Tool_RAG (fallback "
#~ "- good semantic understanding) 3. Simple"
#~ " keyword search (always available)"
#~ msgstr ""

#~ msgid "Tool Finder Capabilities:"
#~ msgstr ""

#~ msgid "ToolFinderLLM:"
#~ msgstr "工具/查找:"

#~ msgid "Uses GPT-4 or similar LLM for query understanding"
#~ msgstr ""

#~ msgid "Analyzes tool descriptions for semantic matching"
#~ msgstr ""

#~ msgid "Provides relevance scoring and selection reasoning"
#~ msgstr ""

#~ msgid "Handles complex, multi-faceted queries effectively"
#~ msgstr ""

#~ msgid ""
#~ "Best for: \"Find tools to analyze "
#~ "protein-drug interactions in cancer "
#~ "research\""
#~ msgstr ""

#~ msgid "Tool_RAG:"
#~ msgstr "工具类别"

#~ msgid "Uses pre-computed embeddings for fast similarity search"
#~ msgstr "Tool_RAG：基于嵌入的相似性搜索"

#~ msgid "Good semantic understanding without LLM overhead"
#~ msgstr ""

#~ msgid "Faster than LLM-based search for simple queries"
#~ msgstr ""

#~ msgid "Best for: \"protein analysis\", \"drug discovery\""
#~ msgstr ""

#~ msgid "Simple Search:"
#~ msgstr ""

#~ msgid "Basic keyword matching against names and descriptions"
#~ msgstr "查找名称或描述中与模式匹配的工具。"

#~ msgid "No dependencies, always available"
#~ msgstr ""

#~ msgid "Fast and reliable for exact term matches"
#~ msgstr ""

#~ msgid "Best for: \"chembl\", \"uniprot\", \"fda\""
#~ msgstr ""

#~ msgid ""
#~ "Sets instance attributes: - "
#~ "tool_finder_available (bool): Whether advanced "
#~ "search is available - tool_finder_type "
#~ "(str): Type of search tool loaded "
#~ "(\"ToolFinderLLM\" | \"Tool_RAG\")"
#~ msgstr ""

#~ msgid "Handles missing dependencies gracefully"
#~ msgstr ""

#~ msgid "Provides informative console output about search capabilities"
#~ msgstr ""

#~ msgid "Ensures search functionality always works (via simple fallback)"
#~ msgstr ""

#~ msgid "Logs detailed information for debugging"
#~ msgstr ""

#~ msgid "Tool loading only happens if search tools aren't already available"
#~ msgstr ""

#~ msgid "Search tool detection is cached to avoid repeated scans"
#~ msgstr ""

#~ msgid "ToolFinderLLM requires network access and API keys"
#~ msgstr ""

#~ msgid "Tool_RAG requires embedding files but works offline"
#~ msgstr ""

#~ msgid "Dependencies:"
#~ msgstr ""

#~ msgid "ToolFinderLLM: Requires OpenAI API access or compatible endpoint"
#~ msgstr ""

#~ msgid "Tool_RAG: Requires sentence-transformers and embedding data"
#~ msgstr "嵌入句子转换器模型的名称"

#~ msgid "Simple search: No external dependencies"
#~ msgstr ""

#~ msgid ""
#~ "Load ToolSpace configurations and apply "
#~ "them to the ToolUniverse instance."
#~ msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#~ msgid "ToolSpace URI(s) to load. Can be a single string or list of strings."
#~ msgstr ""

#~ msgid "Execute tool search using the most appropriate search method available."
#~ msgstr ""

#~ msgid ""
#~ "Simplified unified interface that leverages"
#~ " the consistent tool interfaces. All "
#~ "search tools now return JSON format "
#~ "directly."
#~ msgstr ""

#~ msgid "query"
#~ msgstr ""

#~ msgid "Natural language query describing the desired tool functionality"
#~ msgstr "用户查询描述所需功能"

#~ msgid "categories"
#~ msgstr "工具类别"

#~ msgid "Tool categories to filter results by"
#~ msgstr "工具类别筛选列表"

#~ msgid "limit"
#~ msgstr ""

#~ msgid "int"
#~ msgstr ""

#~ msgid "use_advanced_search"
#~ msgstr ""

#~ msgid "bool"
#~ msgstr ""

#~ msgid "Whether to prefer AI-powered search when available"
#~ msgstr ""

#~ msgid "search_method"
#~ msgstr "搜索参数"

#~ msgid "str, default 'auto'"
#~ msgstr ""

#~ msgid "Specific search method: 'auto', 'llm', 'embedding', 'keyword'"
#~ msgstr ""

#~ msgid "JSON string containing search results"
#~ msgstr "包含搜索参数的字典"

#~ msgid ""
#~ "Print ToolUniverse branding banner after "
#~ "FastMCP banner with dynamic information."
#~ msgstr "重写运行方法以在FastMCP横幅之后显示ToolUniverse横幅。"

#~ msgid "Register custom MCP protocol methods for enhanced functionality."
#~ msgstr ""

#~ msgid ""
#~ "This method extends the standard MCP "
#~ "protocol by registering custom handlers "
#~ "for scientific tool discovery and search"
#~ " operations. It uses FastMCP's middleware"
#~ " system to handle custom methods "
#~ "while maintaining compatibility with standard"
#~ " MCP operations."
#~ msgstr ""

#~ msgid "Custom Methods Registered:"
#~ msgstr "自定义MCP方法："

#~ msgid "tools/find: AI-powered tool discovery using natural language queries"
#~ msgstr ""

#~ msgid ""
#~ "tools/search: Alternative endpoint for tool"
#~ " search (alias for tools/find)"
#~ msgstr ""

#~ msgid "Uses FastMCP's middleware system instead of request handler patching"
#~ msgstr ""

#~ msgid "Implements custom middleware methods for tools/find and tools/search"
#~ msgstr "自定义科学方法（tools/find, tools/search）"

#~ msgid "Standard MCP methods (tools/list, tools/call) are handled by FastMCP"
#~ msgstr "标准方法（tools/list、tools/call、resources/*、prompts/*）"

#~ msgid ""
#~ "This method is called automatically "
#~ "during SMCP initialization and should "
#~ "not be called manually."
#~ msgstr "此方法在关闭时由 run_simple() 自动调用。"

#~ msgid "Select the appropriate search tool based on method and availability."
#~ msgstr ""

#~ msgid "Tool name to use for search"
#~ msgstr "要排除的工具名称"

#~ msgid "Initialize and configure SMCP-specific tools and features."
#~ msgstr ""

#~ msgid ""
#~ "This method orchestrates the complete "
#~ "setup of SMCP functionality including "
#~ "ToolUniverse tool loading, validation, "
#~ "automatic tool exposure to the MCP "
#~ "interface, search functionality initialization, "
#~ "and utility tool registration."
#~ msgstr ""

#~ msgid ""
#~ "The setup process is designed to "
#~ "be robust, handle various edge cases "
#~ "gracefully, and provide informative feedback"
#~ " about the configuration process. It "
#~ "implements intelligent fallback strategies to"
#~ " ensure functionality even when specific"
#~ " components are unavailable."
#~ msgstr ""

#~ msgid "Setup Process Overview:"
#~ msgstr "服务器启动过程："

#~ msgid ""
#~ "**Tool Loading Assessment**: Check if "
#~ "ToolUniverse already has tools loaded to"
#~ " avoid unnecessary reloading and potential"
#~ " conflicts"
#~ msgstr ""

#~ msgid ""
#~ "**Category Validation**: If specific "
#~ "categories are requested, validate them "
#~ "against available categories and provide "
#~ "helpful feedback for invalid ones"
#~ msgstr ""

#~ msgid ""
#~ "**Tool Loading Strategy**: Load tools "
#~ "using the most appropriate method: - "
#~ "Category-specific loading for focused "
#~ "deployments - Full loading for "
#~ "comprehensive access - Graceful fallback "
#~ "when category loading fails"
#~ msgstr ""

#~ msgid ""
#~ "**Tool Exposure**: Convert loaded ToolUniverse"
#~ " tools to MCP format with proper "
#~ "schema transformation and execution wrapping"
#~ msgstr ""

#~ msgid ""
#~ "**Search Setup**: Initialize multi-tiered "
#~ "search capabilities including AI-powered "
#~ "and fallback methods"
#~ msgstr ""

#~ msgid "**Utility Registration**: Add server management and diagnostic tools"
#~ msgstr ""

#~ msgid "Tool Loading Strategy:"
#~ msgstr ""

#~ msgid ""
#~ "**Already Loaded Check**: If ToolUniverse "
#~ "already contains loaded tools (len(all_tools)"
#~ " > 0), skip the loading phase "
#~ "to prevent duplication and preserve "
#~ "existing configuration. This supports "
#~ "scenarios where users pre-configure "
#~ "ToolUniverse instances."
#~ msgstr ""

#~ msgid ""
#~ "**Category-Specific Loading**: When "
#~ "tool_categories is specified: - Validate "
#~ "each category against available tool "
#~ "categories - Log warnings for invalid"
#~ " categories with suggestions - Load "
#~ "only valid categories to optimize "
#~ "performance - Fall back to full "
#~ "loading if no valid categories remain"
#~ msgstr ""

#~ msgid ""
#~ "**Full Loading (Default)**: When "
#~ "auto_expose_tools=True and no specific "
#~ "categories are requested, load all "
#~ "available tools to provide comprehensive "
#~ "functionality."
#~ msgstr ""

#~ msgid ""
#~ "**Graceful Fallback**: If category-specific"
#~ " loading fails for any reason, "
#~ "automatically fall back to loading all"
#~ " tools to ensure basic functionality."
#~ msgstr ""

#~ msgid ""
#~ "**Schema Transformation**: - Convert "
#~ "ToolUniverse parameter schemas to MCP-"
#~ "compatible format - Handle complex "
#~ "parameter types and validation rules -"
#~ " Preserve documentation and examples where"
#~ " available"
#~ msgstr ""

#~ msgid ""
#~ "**Execution Wrapping**: - Create async "
#~ "wrappers for synchronous ToolUniverse tools"
#~ " - Implement proper error handling "
#~ "and result formatting - Use thread "
#~ "pool execution to prevent blocking"
#~ msgstr ""

#~ msgid ""
#~ "**Safety Mechanisms**: - Skip meta-tools"
#~ " (MCPAutoLoaderTool, MCPClientTool) that "
#~ "shouldn't be exposed - Track exposed "
#~ "tools to prevent duplicates - Handle "
#~ "tool conversion failures gracefully without"
#~ " stopping entire process"
#~ msgstr ""

#~ msgid ""
#~ "**Multi-Tiered Search Architecture**: 1. "
#~ "**ToolFinderLLM** (Primary): Cost-optimized "
#~ "AI-powered semantic understanding using LLM"
#~ " 2. **Tool_RAG** (Secondary): Embedding-"
#~ "based similarity search 3. **Keyword "
#~ "Search** (Fallback): Simple text matching, "
#~ "always available"
#~ msgstr ""

#~ msgid ""
#~ "**Initialization Process**: - Check for "
#~ "availability of advanced search tools in"
#~ " loaded tools - Attempt to load "
#~ "search tools if not already present "
#~ "- Configure search capabilities based on"
#~ " what's available - Provide clear "
#~ "feedback about search capabilities"
#~ msgstr ""

#~ msgid ""
#~ "**Search Tool Loading**: Attempts to "
#~ "load tool_finder_llm and tool_finder "
#~ "categories which include: - ToolFinderLLM: "
#~ "Cost-optimized LLM-based intelligent "
#~ "tool discovery - Tool_RAG: Embedding-"
#~ "based semantic search - Supporting "
#~ "utilities and configuration tools"
#~ msgstr ""

#~ msgid ""
#~ "**Category Validation Errors**: - Log "
#~ "specific invalid categories with available "
#~ "alternatives - Continue with valid "
#~ "categories only - Fall back to "
#~ "full loading if no valid categories"
#~ msgstr ""

#~ msgid ""
#~ "**Tool Loading Errors**: - Log detailed"
#~ " error information for debugging - "
#~ "Continue setup process with already "
#~ "loaded tools - Ensure server remains "
#~ "functional even with partial failures"
#~ msgstr ""

#~ msgid ""
#~ "**Search Setup Errors**: - Gracefully "
#~ "handle missing search tool dependencies "
#~ "- Fall back to simpler search "
#~ "methods automatically - Log informative "
#~ "messages about search capabilities"
#~ msgstr ""

#~ msgid ""
#~ "**Tool Exposure Errors**: - Handle "
#~ "individual tool conversion failures without"
#~ " stopping process - Log specific tool"
#~ " errors for debugging - Continue with"
#~ " remaining tools to maximize functionality"
#~ msgstr ""

#~ msgid "**Lazy Loading**: Only load tools when needed to minimize startup time"
#~ msgstr ""

#~ msgid ""
#~ "**Efficient Validation**: Quick category "
#~ "checks before expensive operations"
#~ msgstr ""

#~ msgid ""
#~ "**Parallel Processing**: Use thread pools "
#~ "for tool conversion where possible"
#~ msgstr ""

#~ msgid "**Memory Management**: Efficient tool representation and storage"
#~ msgstr ""

#~ msgid "Diagnostic Output:"
#~ msgstr "日志输出："

#~ msgid ""
#~ "Provides informative logging throughout the"
#~ " setup process: ``` Tools already "
#~ "loaded in ToolUniverse (356 tools), "
#~ "skipping reload Exposing 356 tools from"
#~ " ToolUniverse ✅ ToolFinderLLM (cost-"
#~ "optimized) available for advanced search "
#~ "Exposed tool: UniProt_get_entry_by_accession (type:"
#~ " uniprot) ```"
#~ msgstr ""

#~ msgid "This method is called automatically during SMCP initialization"
#~ msgstr "此方法在关闭时由 run_simple() 自动调用。"

#~ msgid "Should not be called manually after server initialization"
#~ msgstr ""

#~ msgid "Setup is idempotent - can be called multiple times safely"
#~ msgstr "清理操作是幂等的——可以安全地多次调用"

#~ msgid "All setup phases include comprehensive error handling"
#~ msgstr "包含全面的文档字符串"

#~ msgid "Performance scales with the number of tools being loaded and exposed"
#~ msgstr "打印加载前后的工具数量。"

#~ msgid "Middleware for handling tools/find and tools/search requests."
#~ msgstr ""

#~ msgid ""
#~ "This middleware intercepts tools/find and "
#~ "tools/search requests and provides AI-"
#~ "powered tool discovery functionality."
#~ msgstr ""

#~ msgid "Extract field value using XPath expression."
#~ msgstr ""

#~ msgid "Extract data from a record element with caching."
#~ msgstr ""

#~ msgid "Filter records based on field criteria."
#~ msgstr "根据包含/排除标准筛选工具并去除重复项。"

#~ msgid "Find matching fields in a record."
#~ msgstr ""

#~ msgid "Get all records data with caching."
#~ msgstr ""

#~ msgid "Get the path to the XML dataset."
#~ msgstr "输出文件路径"

#~ msgid "Get the appropriate filter function for the condition."
#~ msgstr ""

#~ msgid "Get searchable string value for a field."
#~ msgstr ""

#~ msgid "Check if field value matches search query."
#~ msgstr ""

#~ msgid "Load and parse the XML dataset."
#~ msgstr ""

#~ msgid "Search records by text content across multiple fields."
#~ msgstr ""

#~ msgid "Apply basic stemming rules to reduce words to their root form."
#~ msgstr ""

#~ msgid "Word to stem"
#~ msgstr ""

#~ msgid "Stemmed word"
#~ msgstr ""

#~ msgid "Build TF-IDF index for all tools to enable efficient relevance scoring."
#~ msgstr ""

#~ msgid "List of tool configurations"
#~ msgstr "匹配工具配置列表"

#~ msgid "Calculate bonus score for exact matches in tool name or key phrases."
#~ msgstr ""

#~ msgid "Original query string"
#~ msgstr ""

#~ msgid "Exact match bonus score"
#~ msgstr ""

#~ msgid "Calculate TF-IDF relevance score for a tool given query terms."
#~ msgstr ""

#~ msgid "Processed query terms and phrases"
#~ msgstr ""

#~ msgid "TF-IDF relevance score"
#~ msgstr ""

#~ msgid "Extract searchable text from parameter schema."
#~ msgstr "工具参数模式"

#~ msgid "List of text elements from parameters"
#~ msgstr ""

#~ msgid "Extract meaningful phrases from tokens for better semantic matching."
#~ msgstr ""

#~ msgid "Tokenized words"
#~ msgstr ""

#~ msgid "Maximum length of phrases to extract"
#~ msgstr "返回的工具最大数量"

#~ msgid "List of phrases and individual tokens"
#~ msgstr ""

#~ msgid "Original JSON-based search implementation for backward compatibility."
#~ msgstr ""

#~ msgid "Search arguments"
#~ msgstr "搜索参数"

#~ msgid "JSON string containing search results with relevance scores"
#~ msgstr ""

#~ msgid ""
#~ "Tokenize text and apply normalization "
#~ "including stop word removal and "
#~ "stemming."
#~ msgstr ""

#~ msgid "Input text to tokenize"
#~ msgstr ""

#~ msgid "List of processed tokens"
#~ msgstr "处理后的标记列表"

#~ msgid "Format the find_tools result as a standardized JSON string."
#~ msgstr ""

#~ msgid "Result from find_tools method (either string, list, or tuple)"
#~ msgstr ""

#~ msgid "Original search query"
#~ msgstr ""

#~ msgid "Requested number of tools"
#~ msgstr "获取可用工具的统计信息。"

#~ msgid "Requested categories filter"
#~ msgstr "可筛选的类别列表"

#~ msgid "Whether return_call_result was True"
#~ msgstr ""

#~ msgid "JSON formatted search results"
#~ msgstr ""

#~ msgid ""
#~ "Format tools for inclusion in the "
#~ "LLM prompt with minimal information to"
#~ " reduce context cost. Only includes "
#~ "name and description to minimize token"
#~ " usage."
#~ msgstr ""

#~ msgid "Compact formatted tool descriptions for the prompt"
#~ msgstr ""

#~ msgid "Get available tools with their descriptions, with caching."
#~ msgstr ""

#~ msgid "Whether to force refresh the cache"
#~ msgstr "是否启用输出钩子。默认为 False。"

#~ msgid "List of tool dictionaries with names and descriptions"
#~ msgstr ""

#~ msgid ""
#~ "Get the prompt template for tool "
#~ "selection. Optimized for minimal token "
#~ "usage."
#~ msgstr ""

#~ msgid "Initialize the underlying AgenticTool for LLM operations."
#~ msgstr "初始化 ToolUniverse 并加载工具文件配置。"

#~ msgid ""
#~ "Pre-filter tools using keyword matching"
#~ " to reduce context size before LLM"
#~ " processing."
#~ msgstr ""

#~ msgid "All available tools"
#~ msgstr "可用工具名称列表"

#~ msgid "User query"
#~ msgstr ""

#~ msgid "Maximum number of tools to send to LLM"
#~ msgstr "返回的工具最大数量"

#~ msgid "Filtered list of tools"
#~ msgstr "筛选后的工具列表"

#~ msgid "Ensure Playwright browser binaries are installed."
#~ msgstr ""

#~ msgid "None on success, or an error string on failure."
#~ msgstr ""

#~ msgid "Run call_tool operation"
#~ msgstr ""

#~ msgid "Run get_prompt operation"
#~ msgstr ""

#~ msgid "Run list_prompts operation"
#~ msgstr ""

#~ msgid "Run list_resources operation"
#~ msgstr ""

#~ msgid "Run list_tools operation"
#~ msgstr "工具配置列表"

#~ msgid "Run read_resource operation"
#~ msgstr ""

#~ msgid "Gets ADMET predictions for the given smiles"
#~ msgstr "预测给定SMILES字符串的ADMET属性。"

#~ msgid "Add documents to existing database"
#~ msgstr ""

#~ msgid "Generate embeddings using OpenAI or Azure OpenAI API"
#~ msgstr ""

#~ msgid "Initialize Azure OpenAI client with configuration"
#~ msgstr "使用配置初始化 OpenAI 客户端"

#~ msgid "Initialize SQLite database with required tables"
#~ msgstr ""

#~ msgid "Load existing database from path"
#~ msgstr ""

#~ msgid "Check if metadata matches the given filters"
#~ msgstr ""

#~ msgid "Search for similar documents in database"
#~ msgstr ""

#~ msgid "Substitute environment variables in configuration values"
#~ msgstr ""

#~ msgid "Download database from HuggingFace Hub"
#~ msgstr ""

#~ msgid "Generate README content for HuggingFace repository"
#~ msgstr ""

#~ msgid "Get database information from local SQLite"
#~ msgstr ""

#~ msgid "Check if database exists locally"
#~ msgstr "检查数据库是否存在"

#~ msgid "Merge source database into target database (simplified implementation)"
#~ msgstr ""

#~ msgid "Rename database in SQLite file"
#~ msgstr ""

#~ msgid "Upload local database to HuggingFace Hub"
#~ msgstr ""

#~ msgid "Perform a GET request and handle common errors."
#~ msgstr ""

#~ msgid "Search Cellosaurus cell lines using the /search/cell-line endpoint."
#~ msgstr "使用官方API搜索Cellosaurus细胞系的工具。"

#~ msgid "Convert natural language boolean operators to Solr syntax."
#~ msgstr "用于将自然语言查询转换为适用于Cellosaurus API的Solr语法的工具。"

#~ msgid "Convert natural language ranges to Solr range syntax."
#~ msgstr "用于将自然语言查询转换为适用于Cellosaurus API的Solr语法的工具。"

#~ msgid "Convert natural language wildcard patterns to Solr syntax."
#~ msgstr "用于将自然语言查询转换为适用于Cellosaurus API的Solr语法的工具。"

#~ msgid "Calculate similarity between a term and text using SequenceMatcher."
#~ msgstr ""

#~ msgid "Construct the final Solr query from extracted terms."
#~ msgstr ""

#~ msgid ""
#~ "Convert natural language query to Solr"
#~ " syntax using systematic field mapping."
#~ msgstr "用于将自然语言查询转换为适用于Cellosaurus API的Solr语法的工具。"

#~ msgid "Extract field-specific terms from the query using semantic mapping."
#~ msgstr ""

#~ msgid ""
#~ "Map a natural language term to "
#~ "Cellosaurus fields based on semantic "
#~ "similarity."
#~ msgstr ""

#~ msgid "Basic validation of Solr query syntax."
#~ msgstr ""

#~ msgid "Get detailed cell line information by accession number."
#~ msgstr "用于通过细胞系的登录号获取详细信息的工具。"

#~ msgid "Extract author names from CORE API response."
#~ msgstr ""

#~ msgid "Extract year from published date."
#~ msgstr ""

#~ msgid "Search query"
#~ msgstr "搜索词"

#~ msgid "Maximum number of results"
#~ msgstr "返回的工具最大数量"

#~ msgid "Start year filter"
#~ msgstr ""

#~ msgid "End year filter"
#~ msgstr ""

#~ msgid "Language filter (e.g., 'en', 'es', 'fr')"
#~ msgstr ""

#~ msgid "Extract author names from PMC API response."
#~ msgstr ""

#~ msgid "Search for papers using PMC API."
#~ msgstr "使用 CORE API 搜索论文。"

#~ msgid "Start date filter (YYYY/MM/DD)"
#~ msgstr ""

#~ msgid "End date filter (YYYY/MM/DD)"
#~ msgstr ""

#~ msgid "Article type filter (e.g., 'research-article', 'review')"
#~ msgstr ""

#~ msgid "```python tu = ToolUniverse()"
#~ msgstr ""
#~ "```python\n"
#~ "tu = ToolUniverse()\n"
#~ "```"

#~ msgid "# Discover what's available discovery = tu.discover_mcp_tools(["
#~ msgstr ""
#~ "# 发现可用资源  \n"
#~ "discovery = tu.discover_mcp_tools(["

#~ msgid "\"http://localhost:8001\", \"http://ml-server:8002\""
#~ msgstr "http://localhost:8001\", \"http://ml-server:8002"

#~ msgid ""
#~ "# Show available tools for server, "
#~ "info in discovery[\"servers\"].items():"
#~ msgstr "# 显示 discovery[\"servers\"].items() 中服务器的可用工具信息："

#~ msgid "print(f\"\\n{server}:\") for tool in info.get(\"tools\", []):"
#~ msgstr "print(f\"\\n{server}:\") 对 info.get(\"tools\", []) 中的每个工具执行："

#~ msgid "print(f\"  - {tool['name']}: {tool['description']}\")"
#~ msgstr "print(f\"  - {tool['name']}：{tool['description']}\")"

#~ msgid "Get an LLM client configured for the specified task."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Task type (e.g., 'analysis', 'coding', 'research')"
#~ msgstr ""

#~ msgid "Configured LLM client or None if not available"
#~ msgstr ""

#~ msgid "ToolSpace Smart URI Loader"
#~ msgstr ""

#~ msgid ""
#~ "This module provides intelligent loading "
#~ "of ToolSpace configurations from various "
#~ "sources including HuggingFace Hub, GitHub, "
#~ "local files, and HTTP URLs."
#~ msgstr ""

#~ msgid "Smart loader for ToolSpace configurations from various sources."
#~ msgstr "所有已加载工具配置列表"

#~ msgid ""
#~ "Supports multiple formats: - Official "
#~ "aliases: \"drug-discovery\", \"literature\", "
#~ "\"clinical\" - HuggingFace: \"username/repo\", "
#~ "\"hf:username/repo@v1.0.0\" - GitHub: "
#~ "\"gh:user/repo/path/file.yaml\" - Local files: "
#~ "\"./config.yaml\", \"/absolute/path.yaml\" - HTTP"
#~ " URLs: \"https://example.com/config.yaml\""
#~ msgstr ""

#~ msgid "Configuration URI"
#~ msgstr "工具配置"

#~ msgid "If URI format is not supported or configuration is invalid"
#~ msgstr ""

#~ msgid "If local file does not exist"
#~ msgstr ""

#~ msgid "If HTTP request fails"
#~ msgstr ""

#~ msgid "Convenience function to load a ToolSpace configuration."
#~ msgstr "所有已加载工具配置列表"

#~ msgid "Optional cache directory"
#~ msgstr "字符串缓存键"

#~ msgid "Get information about an official alias."
#~ msgstr "获取有关已加载数据集的信息。"

#~ msgid ""
#~ "This module provides validation functionality"
#~ " for ToolSpace configurations, ensuring "
#~ "they conform to the expected schema "
#~ "and contain valid values."
#~ msgstr ""

#~ msgid "Configuration dictionary or ToolSpaceConfig object"
#~ msgstr "工具的配置字典"

#~ msgid "Validate a ToolSpace configuration file."
#~ msgstr "所有已加载工具配置列表"

#~ msgid "Path to configuration file"
#~ msgstr "工具配置"

#~ msgid "Get a human-readable summary of validation errors."
#~ msgstr "获取可读性强的过滤器描述。"

#~ msgid "List of validation errors"
#~ msgstr "工具词典列表"

#~ msgid "Formatted error summary"
#~ msgstr ""

#~ msgid "Returns:"
#~ msgstr "返回值："

#~ msgid "Examples:"
#~ msgstr "示例"

#~ msgid ""
#~ "```python tu = ToolUniverse() "
#~ "tu.load_mcp_tools([\"http://localhost:8001\"])"
#~ msgstr ""
#~ "```python\n"
#~ "tu = ToolUniverse()\n"
#~ "tu.load_mcp_tools([\"http://localhost:8001\"])\n"
#~ "```"

#~ msgid ""
#~ "connections = tu.list_mcp_connections() "
#~ "print(f\"Active MCP connections: "
#~ "{len(connections['connections'])}\") ```"
#~ msgstr ""
#~ "```python\n"
#~ "connections = tu.list_mcp_connections()\n"
#~ "print(f\"当前活动的MCP连接数: {len(connections['connections'])}\")\n"
#~ "```"

#~ msgid "Parameters:"
#~ msgstr "参数："

#~ msgid "server_urls"
#~ msgstr "服务器网址"

#~ msgid "**kwargs"
#~ msgstr "**kwargs（关键字参数）"

#~ msgid "Load from specific servers: ```python tu = ToolUniverse()"
#~ msgstr ""
#~ "从特定服务器加载：  \n"
#~ "```python  \n"
#~ "tu = ToolUniverse()  \n"
#~ "```"

#~ msgid "# Load tools from multiple MCP servers result = tu.load_mcp_tools(["
#~ msgstr ""
#~ "# 从多个MCP服务器加载工具  \n"
#~ "result = tu.load_mcp_tools(["

#~ msgid ""
#~ "\"http://localhost:8001\",  # Local analysis "
#~ "server \"http://ml-server:8002\",  # Remote"
#~ " ML server \"ws://realtime:9000\"      # "
#~ "WebSocket server"
#~ msgstr ""
#~ "\"http://localhost:8001\",  # 本地分析服务器  \n"
#~ "\"http://ml-server:8002\",  # 远程机器学习服务器  \n"
#~ "\"ws://realtime:9000\"      # WebSocket 服务器"

#~ msgid ""
#~ "print(f\"Loaded {result['total_tools']} tools from"
#~ " {result['servers_connected']} servers\") ```"
#~ msgstr "```print(f\"已从{result['servers_connected']}台服务器加载了{result['total_tools']}个工具\")```"

#~ msgid ""
#~ "server_urls=[\"http://localhost:8001\"], "
#~ "tool_prefix=\"analysis\\_\", timeout=60, "
#~ "selected_tools=[\"protein_analysis\", \"drug_interaction\"]"
#~ msgstr ""

#~ msgid ""
#~ "The JSON response from the API as"
#~ " a dictionary,              or raw text "
#~ "for non-JSON responses, or an "
#~ "error dictionary."
#~ msgstr "从API返回的JSON响应作为字典，或对于非JSON响应的原始文本，或错误字典。"

#~ msgid "tooluniverse_config"
#~ msgstr ""

#~ msgid "exclude_tools"
#~ msgstr ""

#~ msgid "include_tools"
#~ msgstr ""

#~ msgid "include_tool_types"
#~ msgstr ""

#~ msgid "int, default 5"
#~ msgstr "int，默认值 5"

#~ msgid "Raises:"
#~ msgstr "提升："

#~ msgid "Registered Tools:"
#~ msgstr "已注册工具："

#~ msgid "Integration Details:"
#~ msgstr ""
#~ "实现细节：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "Schema Transformation:"
#~ msgstr ""
#~ "架构转换：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "Execution Model:"
#~ msgstr ""
#~ "执行模型：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "Response Formats:"
#~ msgstr ":py:class:`列表`"

#~ msgid "Integration with ToolUniverse:"
#~ msgstr "与 ToolUniverse 的集成："

#~ msgid "Best Practices:"
#~ msgstr "最佳实践："

#~ msgid "transport"
#~ msgstr "运输"

#~ msgid "{\"stdio\", \"http\", \"sse\"}, default \"http\""
#~ msgstr "{\"stdio\", \"http\", \"sse\"}，默认值为 \"http\""

#~ msgid "host"
#~ msgstr "主机"

#~ msgid "str, default \"0.0.0.0\""
#~ msgstr "字符串，默认值 \"0.0.0.0\""

#~ msgid "port"
#~ msgstr "端口"

#~ msgid "int, default 7000"
#~ msgstr "int，默认值 7000"

#~ msgid "Server Startup Process:"
#~ msgstr "服务器启动过程："

#~ msgid ""
#~ "**Initialization Summary**: Displays server "
#~ "configuration and capabilities"
#~ msgstr "**初始化摘要**：显示服务器配置和功能"

#~ msgid "**Transport Setup**: Configures selected communication method"
#~ msgstr "**传输设置**：配置所选通信方式"

#~ msgid "**Service Start**: Begins listening for client connections"
#~ msgstr "**服务启动**：开始监听客户端连接"

#~ msgid "**Graceful Shutdown**: Handles interrupts and cleanup"
#~ msgstr "**优雅关闭**：处理中断并清理"

#~ msgid "Deployment Scenarios:"
#~ msgstr "部署场景："

#~ msgid ""
#~ "Development & Testing: ```python server "
#~ "= SMCP(name=\"Dev Server\") "
#~ "server.run_simple(transport=\"stdio\")  # For CLI"
#~ " testing ```"
#~ msgstr ""
#~ "开发与测试：  \n"
#~ "```python  \n"
#~ "server = SMCP(name=\"开发服务器\")  \n"
#~ "server.run_simple(transport=\"stdio\")  # 用于命令行界面测试  \n"
#~ "```"

#~ msgid ""
#~ "Local Web Service: ```python server ="
#~ " SMCP(name=\"Local API\") "
#~ "server.run_simple(transport=\"http\", host=\"127.0.0.1\", "
#~ "port=8000) ```"
#~ msgstr ""
#~ "本地Web服务：  \n"
#~ "```python  \n"
#~ "server = SMCP(name=\"Local API\")  \n"
#~ "server.run_simple(transport=\"http\", host=\"127.0.0.1\", "
#~ "port=8000)  \n"
#~ "```"

#~ msgid "Production Service: ```python server = SMCP("
#~ msgstr ""
#~ "生产服务：```python\n"
#~ "server = SMCP("

#~ msgid ""
#~ "Real-time Applications: ```python server "
#~ "= SMCP(name=\"Streaming API\") "
#~ "server.run_simple(transport=\"sse\", port=7001) ```"
#~ msgstr ""
#~ "实时应用：  \n"
#~ "```python  \n"
#~ "server = SMCP(name=\"Streaming API\")  \n"
#~ "server.run_simple(transport=\"sse\", port=7001)  \n"
#~ "```"

#~ msgid "**KeyboardInterrupt**: Graceful shutdown on Ctrl+C"
#~ msgstr "**KeyboardInterrupt**：按下 Ctrl+C 时的优雅关闭"

#~ msgid "**Port in Use**: Clear error message with suggestions"
#~ msgstr "**端口已占用**：清晰的错误信息及建议"

#~ msgid "**Transport Errors**: Detailed debugging information"
#~ msgstr "**传输错误**：详细调试信息"

#~ msgid "**Cleanup**: Automatic resource cleanup on exit"
#~ msgstr "**清理**：退出时自动清理资源"

#~ msgid "Logging Output:"
#~ msgstr "日志输出："

#~ msgid ""
#~ "Provides informative startup messages: ``` "
#~ "🚀 Starting SMCP server 'My Server'..."
#~ " 📊 Loaded 356 tools from ToolUniverse"
#~ " 🔍 Search enabled: True 🌐 Server "
#~ "running on http://0.0.0.0:7000 ```"
#~ msgstr ""
#~ "提供信息性启动消息：  \n"
#~ "``` 🚀 正在启动 SMCP 服务器 'My Server'...  \n"
#~ "📊 已加载 356 个工具来自 ToolUniverse  \n"
#~ "🔍 搜索功能已启用：True  \n"
#~ "🌐 服务器运行地址：http://0.0.0.0:7000 ```"

#~ msgid "Use host=\"127.0.0.1\" for local-only access"
#~ msgstr "在本地访问时，请使用 host=\"127.0.0.1\""

#~ msgid "Configure firewall rules for production deployment"
#~ msgstr "为生产部署配置防火墙规则"

#~ msgid "Consider HTTPS termination with reverse proxy"
#~ msgstr "考虑使用反向代理进行HTTPS终止"

#~ msgid "Validate all client inputs through MCP protocol"
#~ msgstr "通过MCP协议验证所有客户端输入"

#~ msgid "Performance Notes:"
#~ msgstr "性能说明："

#~ msgid "HTTP transport supports multiple concurrent clients"
#~ msgstr "HTTP 传输支持多个并发客户端"

#~ msgid "stdio transport is single-client but lower latency"
#~ msgstr "stdio 传输是单客户端的，但延迟更低"

#~ msgid "SSE transport enables real-time bidirectional communication"
#~ msgstr "SSE 传输支持实时双向通信"

#~ msgid "Thread pool size affects concurrent tool execution capacity"
#~ msgstr "线程池大小影响并发工具的执行能力"

#~ msgid "str, default \"SMCP Server\""
#~ msgstr "字符串，默认值为 \"SMCP Server\""

#~ msgid "SMCP"
#~ msgstr ""

#~ msgid ""
#~ "Quick Start (all tools): ```python "
#~ "server = create_smcp_server(\"Research Server\") "
#~ "server.run_simple() ```"
#~ msgstr ""
#~ "快速入门（所有工具）：  \n"
#~ "```python  \n"
#~ "server = create_smcp_server(\"研究服务器\")  \n"
#~ "server.run_simple()  \n"
#~ "```"

#~ msgid ""
#~ "Focused Server (specific domains): ```python"
#~ " server = create_smcp_server("
#~ msgstr ""
#~ "专用服务器（特定域名）：```python\n"
#~ "server = create_smcp_server("

#~ msgid "Custom Configuration: ```python server = create_smcp_server("
#~ msgstr "自定义配置：```python server = create_smcp_server("

#~ msgid ""
#~ "Pre-configured ToolUniverse: ```python tu "
#~ "= ToolUniverse() tu.load_tools(tool_type=[\"uniprot\", "
#~ "\"ChEMBL\"]) server = create_smcp_server("
#~ msgstr ""
#~ "预配置的 ToolUniverse:  \n"
#~ "```python  \n"
#~ "tu = ToolUniverse()  \n"
#~ "tu.load_tools(tool_type=[\"uniprot\", \"ChEMBL\"])  \n"
#~ "server = create_smcp_server(  \n"
#~ "```"

#~ msgid ""
#~ "- If return_call_result is False: Tool"
#~ " prompts as a formatted string - "
#~ "If return_call_result is True: Tuple of"
#~ " (tool_prompts, tool_names)"
#~ msgstr ""
#~ "- 如果 return_call_result 为 False：工具提示为格式化字符串  \n"
#~ "- 如果 return_call_result 为 True：元组形式为 (tool_prompts, tool_names)"

#~ msgid ""
#~ "- If return_list_only is True: List "
#~ "of tool specifications - If "
#~ "return_call_result is False: Tool prompts "
#~ "as a formatted string - If "
#~ "return_call_result is True: Tuple of "
#~ "(tool_prompts, tool_names)"
#~ msgstr ""
#~ "- 如果 `return_list_only` 为 `True`：工具规格的列表  \n"
#~ "- 如果 `return_call_result` 为 `False`：格式化字符串形式的工具提示  \n"
#~ "- 如果 `return_call_result` 为 `True`：包含（工具提示，工具名称）的元组"

#~ msgid ""
#~ "A dictionary containing the path to "
#~ "the predicted structure and affinity "
#~ "data, or an error."
#~ msgstr ""

#~ msgid "A new dictionary with mapped parameter names."
#~ msgstr ""

#~ msgid "The gene name or synonym to query."
#~ msgstr ""

#~ msgid "The official gene symbol if found; otherwise, raises an Exception."
#~ msgstr ""

#~ msgid "Newline-separated string of gene names."
#~ msgstr ""

#~ msgid "The user list ID from Enrichr."
#~ msgstr ""

#~ msgid "The name of the enrichment library."
#~ msgstr ""

#~ msgid "The enrichment results."
#~ msgstr ""

#~ msgid "List of gene names."
#~ msgstr "可用工具名称列表"

#~ msgid "The constructed graph."
#~ msgstr ""

#~ msgid "The graph to search."
#~ msgstr "执行PMC搜索。"

#~ msgid "The source node."
#~ msgstr ""

#~ msgid "The target node."
#~ msgstr ""

#~ msgid "List of tuples (path, weight) sorted by weight descending."
#~ msgstr ""

#~ msgid "The source gene."
#~ msgstr "获取基因的SNPs。"

#~ msgid "The target term."
#~ msgstr ""

#~ msgid ""
#~ "List of tuples (path, weight) sorted "
#~ "by weight descending, or None if "
#~ "no paths."
#~ msgstr ""

#~ msgid "The filtered output, or original output if filtering fails"
#~ msgstr ""

#~ msgid "The formatted output, or original output if formatting fails"
#~ msgstr ""

#~ msgid "The validated output, or original output if validation fails"
#~ msgstr ""

#~ msgid "The original output (logging doesn't modify the output)"
#~ msgstr ""

#~ msgid "The official gene symbol."
#~ msgstr ""

#~ msgid "List of gene names to analyze."
#~ msgstr "包含的工具名称列表。"

#~ msgid "Tissue type for tissue-specific interactions."
#~ msgstr ""

#~ msgid "Maximum number of nodes to retrieve."
#~ msgstr "返回的工具最大数量"

#~ msgid "Specific interaction type to filter by."
#~ msgstr ""

#~ msgid "(NetworkX Graph of interactions, list of biological processes)"
#~ msgstr ""

#~ msgid "The network graph."
#~ msgstr ""

#~ msgid "List of biological processes."
#~ msgstr ""

#~ msgid "Original gene list provided by user."
#~ msgstr ""

#~ msgid "Tissue type used for analysis."
#~ msgstr ""

#~ msgid "Logger instance"
#~ msgstr ""

#~ msgid "config"
#~ msgstr ""
#~ "hook_config\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "mcp_config"
#~ msgstr ""
#~ "hook_config\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "tool_class"
#~ msgstr "工具类别"

#~ msgid "int, optional"
#~ msgstr "字典，可选"

#~ msgid "tu"
#~ msgstr ""

#~ msgid "Keywords to search for in title, abstract, and content."
#~ msgstr ""

#~ msgid "Maximum number of results to return (default: 10)."
#~ msgstr "返回的最大结果数（默认值为10，最大值为200）"

#~ msgid "Start year for publication date filter (optional)."
#~ msgstr "从出版日期中提取年份。"

#~ msgid "End year for publication date filter (optional)."
#~ msgstr "从出版日期中提取年份。"

#~ msgid "Filter for open access papers only (optional)."
#~ msgstr ""

#~ msgid "Work object from OpenAlex API response."
#~ msgstr ""

#~ msgid "Formatted paper information."
#~ msgstr ""

#~ msgid "Paper information or None if not found."
#~ msgstr ""

#~ msgid "Name of the author to search for."
#~ msgstr "评分工具名称"

#~ msgid "Maximum number of results to return."
#~ msgstr "返回的工具最大数量"

#~ msgid ""
#~ "Parameters: - text (str): The input "
#~ "text from which to extract sentences."
#~ " - keywords (list): A list of "
#~ "keywords to search for in the "
#~ "text."
#~ msgstr ""

#~ msgid "Returns: - list: A list of sentences containing any of the keywords."
#~ msgstr ""

#~ msgid "The processed output"
#~ msgstr ""

#~ msgid "The summarized output, or original output if summarization fails"
#~ msgstr ""

#~ msgid "Extracted query context or fallback description"
#~ msgstr ""

#~ msgid "The processed output after applying all applicable hooks"
#~ msgstr ""

#~ msgid ""
#~ "True if the tool is a hook "
#~ "tool and should be excluded from "
#~ "hook processing"
#~ msgstr ""

#~ msgid "Created hook instance or None if type not supported"
#~ msgstr ""

#~ msgid ""
#~ "Dictionary containing file information:     -"
#~ " file_path: Path to the saved file"
#~ "     - data_format: Format of the "
#~ "data (json, text, binary, etc.)     -"
#~ " data_structure: Structure information about "
#~ "the data     - file_size: Size of "
#~ "the file in bytes     - created_at: "
#~ "Timestamp when file was created     -"
#~ " metadata: Additional metadata (if "
#~ "include_metadata is True)"
#~ msgstr ""

#~ msgid "(data_format, data_structure)"
#~ msgstr ""

#~ msgid "Error message indicating the tool is not available locally"
#~ msgstr ""

#~ msgid ""
#~ "Remote server information including server "
#~ "type, URL, and original tool type"
#~ msgstr ""

#~ msgid "Always False for RemoteTool instances"
#~ msgstr ""

#~ msgid "Get official alias mapping for a toolspace name."
#~ msgstr ""

#~ msgid "List all available official aliases."
#~ msgstr "可用工具名称列表"

#~ msgid "Dictionary representation of the YAML file content."
#~ msgstr ""

#~ msgid "Parameters: file_path (str): The path to the JSON file."
#~ msgstr ""

#~ msgid "Returns: list: A list of dictionaries containing the JSON objects."
#~ msgstr ""

#~ msgid "Standardized error response"
#~ msgstr ""

#~ msgid "Normalized gene symbol"
#~ msgstr ""

#~ msgid "Formatted response"
#~ msgstr "格式化响应内容"

#~ msgid "--------====="
#~ msgstr ""

#~ msgid "str"
#~ msgstr "请提供需要翻译的具体英文文本内容。"

#~ msgid "dict"
#~ msgstr ""

#~ msgid "Process and store all ToolSpace metadata and configurations."
#~ msgstr "所有已加载工具配置列表"

#~ msgid "Store ToolSpace metadata for reference and future use."
#~ msgstr ""

#~ msgid "name"
#~ msgstr "名称"

#~ msgid "function"
#~ msgstr "功能"

#~ msgid "Callable"
#~ msgstr "可调用"

#~ msgid "description"
#~ msgstr "描述"

#~ msgid "str, optional"
#~ msgstr "字符串，可选"

#~ msgid "**kwargs**"
#~ msgstr "**kwargs（关键字参数）"

#~ msgid ""
#~ "Simple synchronous function: ```python def "
#~ "analyze_text(text: str, max_length: int = "
#~ "100) -> str:"
#~ msgstr ""
#~ "简单的同步函数：  \n"
#~ "```python  \n"
#~ "def analyze_text(text: str, max_length: int = 100) -> str:  \n"
#~ "```"

#~ msgid "server.add_custom_tool("
#~ msgstr ""

#~ msgid ") -> Dict[str, Any]:"
#~ msgstr ""

#~ msgid ""
#~ "Function with custom schema: ```python "
#~ "def calculate_score(values: List[float]) -> "
#~ "float:"
#~ msgstr ""
#~ "使用自定义模式的函数：  \n"
#~ "```python  \n"
#~ "def calculate_score(values: List[float]) -> float:  \n"
#~ "```"

#~ msgid ""
#~ "Custom tools work seamlessly alongside "
#~ "ToolUniverse tools: - Appear in tool "
#~ "discovery searches - Follow same calling"
#~ " conventions - Include in server "
#~ "diagnostics and listings - Support all"
#~ " MCP client interaction patterns"
#~ msgstr ""
#~ "自定义工具可与 ToolUniverse 工具无缝协作：  \n"
#~ "- 在工具发现搜索中显示  \n"
#~ "- 遵循相同的调用约定  \n"
#~ "- 包含在服务器诊断和列表中  \n"
#~ "- 支持所有 MCP 客户端交互模式"

#~ msgid ""
#~ "* :py:class:`SMCP` -- Fully configured "
#~ "SMCP server instance ready to run. "
#~ "* :py:class:`Usage     Examples` * "
#~ ":py:class:`--------=====` * :py:class:`Quick Start"
#~ " (all tools)` * ```python * "
#~ ":py:class:`server = create_smcp_server(```\"Research "
#~ "Server\"``:py:class:`)` * :py:class:`server.run_simple()`"
#~ " * ``` * :py:class:`Focused Server "
#~ "(specific domains)` * ```python * "
#~ ":py:class:`server = create_smcp_server(` -- "
#~ "name=\"Drug Discovery API\",   "
#~ "tool_categories=[\"ChEMBL\", \"fda_drug_label\", "
#~ "\"clinical_trials\"],   max_workers=10 * "
#~ ":py:class:`)` * :py:class:`server.run_simple(port=8000)`"
#~ " * ``` * :py:class:`Custom Configuration`"
#~ " * ```python * :py:class:`server = "
#~ "create_smcp_server(` -- name=\"High-Performance "
#~ "Server\",   search_enabled=True,   max_workers=20,   "
#~ "debug=True * :py:class:`)` * "
#~ ":py:class:`server.run_simple(transport=```\"http\"``, "
#~ ":py:class:`host=```\"0.0.0.0\"``, :py:class:`port=7000)` *"
#~ " ``` * :py:class:`Pre-configured "
#~ "ToolUniverse` * ```python * :py:class:`tu "
#~ "= ToolUniverse()` * "
#~ ":py:class:`tu.load_tools(tool_type=[```\"uniprot\"``, "
#~ "``\"ChEMBL\"``:py:class:`])` * :py:class:`server ="
#~ " create_smcp_server(` -- name=\"Protein-Drug "
#~ "Server\",   tooluniverse_config=tu,   search_enabled=True"
#~ " * :py:class:`)` * ``` * "
#~ ":py:class:`Benefits` of :py:class:`Using This "
#~ "Function` * :py:class:`===============================`"
#~ " * **- **Simplified Setup**** "
#~ "(:py:class:`Reduces boilerplate code for "
#~ "common configurations`) * **- **Best "
#~ "Practices**** (:py:class:`Applies recommended "
#~ "settings automatically`) * **- **Consistent"
#~ " Naming**** (:py:class:`Encourages good server"
#~ " naming conventions`) * **- **Future-"
#~ "Proof**** (:py:class:`Will include new "
#~ "recommended defaults in future versions`) "
#~ "* **- **Documentation**** (:py:class:`Provides "
#~ "clear examples` and :py:class:`guidance`) *"
#~ " :py:class:`Equivalent Manual Configuration` *"
#~ " :py:class:`===============================` * "
#~ ":py:class:`This function is equivalent to` "
#~ "* ```python * :py:class:`server = SMCP(`"
#~ " -- name=name,   tool_categories=tool_categories,   "
#~ "search_enabled=search_enabled,   auto_expose_tools=True,   "
#~ "max_workers=5,   **kwargs * :py:class:`)` *"
#~ " ``` * :py:class:`When` to :py:class:`Use"
#~ " Manual Configuration` * "
#~ ":py:class:`================================` * "
#~ ":py:class:`- Need precise control over "
#~ "all initialization parameters` * :py:class:`-"
#~ " Using custom ToolUniverse configurations` "
#~ "* :py:class:`- Implementing custom MCP "
#~ "methods` or :py:class:`tools` * :py:class:`-"
#~ " Advanced deployment scenarios with "
#~ "specific requirements`"
#~ msgstr ""

#~ msgid ""
#~ "```python # High-performance server with"
#~ " custom configuration server = SMCP("
#~ msgstr ""

#~ msgid ""
#~ "name=\"Production Scientific API\", "
#~ "tool_categories=[\"uniprot\", \"ChEMBL\", \"opentarget\","
#~ " \"hpa\"], max_workers=20, search_enabled=True"
#~ msgstr ""
#~ "name=\"生产 SMCP\", tool_categories=[\"ChEMBL\", "
#~ "\"uniprot\", \"opentarget\"], max_workers=20"

#~ msgid ") server.run_simple("
#~ msgstr ""

#~ msgid "transport=\"http\", host=\"0.0.0.0\", port=7000"
#~ msgstr "transport=\"http\"，host=\"0.0.0.0\"，port=7000，workers=4"

#~ msgid ""
#~ "Client Integration: ```python # Using "
#~ "MCP client to discover and use "
#~ "tools import json"
#~ msgstr ""

#~ msgid "Apply additional ToolSpace configurations (LLM, hooks, etc.)."
#~ msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#~ msgid "Set environment variables for LLM configuration."
#~ msgstr "所有已加载工具配置列表"

#~ msgid ""
#~ "This is a high-level method that"
#~ " loads a ToolSpace configuration from "
#~ "various sources (HuggingFace, GitHub, local"
#~ " files, etc.) and applies the tool"
#~ " settings to the current instance."
#~ msgstr ""

#~ msgid ""
#~ "ToolSpace URI (e.g., \"drug-discovery\", "
#~ "\"hf:user/repo\", \"./config.yaml\")"
#~ msgstr ""

#~ msgid "# Load official preset config = tu.load_toolspace(\"drug-discovery\")"
#~ msgstr ""

#~ msgid ""
#~ "# Load from GitHub config = "
#~ "tu.load_toolspace(\"gh:team/configs/research-env.yaml\")"
#~ msgstr ""

#~ msgid "param name"
#~ msgstr "参数"

#~ msgid "param tooluniverse_config"
#~ msgstr "tooluniverse 软件包"

#~ msgid "param tool_categories"
#~ msgstr "工具类别"

#~ msgid ":py:class:`list` of :py:class:`str`, *optional*"
#~ msgstr "字符串列表，可选项"

#~ msgid "param exclude_tools"
#~ msgstr ""
#~ "exclude_tool_types  \n"
#~ "排除工具类型"

#~ msgid "param exclude_categories"
#~ msgstr ""
#~ "exclude_categories  \n"
#~ "排除类别"

#~ msgid "param include_tools"
#~ msgstr ""

#~ msgid "param tools_file"
#~ msgstr "工具_文件"

#~ msgid "param tool_config_files"
#~ msgstr "工具配置文件"

#~ msgid "param include_tool_types"
#~ msgstr ""
#~ "exclude_tool_types  \n"
#~ "排除工具类型"

#~ msgid "param exclude_tool_types"
#~ msgstr ""
#~ "exclude_tool_types  \n"
#~ "排除工具类型"

#~ msgid "param auto_expose_tools"
#~ msgstr "自动曝光工具"

#~ msgid "param search_enabled"
#~ msgstr ""
#~ "search_enabled  \n"
#~ "搜索_启用"

#~ msgid "param max_workers"
#~ msgstr "最大工作线程数"

#~ msgid "param hooks_enabled"
#~ msgstr ""
#~ "hooks_enabled  \n"
#~ "挂钩启用"

#~ msgid "param hook_config"
#~ msgstr ""
#~ "hook_config\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "param hook_type"
#~ msgstr "钩子类型"

#~ msgid "param Raises"
#~ msgstr "提升"

#~ msgid "param ======="
#~ msgstr ""

#~ msgid "param Notes"
#~ msgstr "参数"

#~ msgid "param ======"
#~ msgstr ""

#~ msgid "param gracefully falls back to simpler methods"
#~ msgstr ""

#~ msgid ""
#~ "Parameters - query (str): Natural "
#~ "language description of desired functionality"
#~ " - categories (list, optional): Tool "
#~ "categories to filter by - limit "
#~ "(int, default=10): Maximum number of "
#~ "results - use_advanced_search (bool, "
#~ "default=True): Use AI vs keyword search"
#~ msgstr ""

#~ msgid ""
#~ "Parameters - function_name (str): Name "
#~ "of the ToolUniverse tool to execute "
#~ "- arguments (str): JSON string "
#~ "containing tool parameters"
#~ msgstr ""

#~ msgid ""
#~ "Returns - Complete tool catalog with "
#~ "names, descriptions, types - Parameter "
#~ "schemas and requirements for each tool"
#~ " - Tool statistics and categorization"
#~ msgstr ""

#~ msgid ""
#~ "* :py:class:`dict` -- JSON-RPC 2.0 "
#~ "response containing either:   - Success: "
#~ "Result with discovered tools and "
#~ "metadata   - Error: Error object with"
#~ " appropriate code and message * "
#~ ":py:class:`Response Formats` * "
#~ ":py:class:`================` * :py:class:`Detailed "
#~ "Format (default)` -- Returns comprehensive "
#~ "tool information including:   - Tool "
#~ "names, descriptions, types   - Parameter "
#~ "schemas with detailed property information"
#~ "   - Search metadata (query, method "
#~ "used, match count) * :py:class:`MCP "
#~ "Standard Format` -- Returns tools in "
#~ "standard MCP tools/list format:   - "
#~ "Simplified tool schema compatible with "
#~ "MCP clients   - inputSchema formatted "
#~ "for direct MCP consumption   - Metadata"
#~ " included in separate _meta field *"
#~ " :py:class:`Search Methods` * "
#~ ":py:class:`==============` * :py:class:`AI-Powered"
#~ " Search (ToolFinderLLM)` --    - Uses "
#~ "Large Language Model to understand query"
#~ " semantics   - Analyzes tool descriptions"
#~ " for intelligent matching   - Provides "
#~ "relevance scoring and reasoning   - "
#~ "Automatically used when available and "
#~ "use_advanced_search=True * :py:class:`Simple Keyword"
#~ " Search` --    - Basic text matching"
#~ " against tool names and descriptions   "
#~ "- Case-insensitive substring matching   "
#~ "- Used as fallback or when "
#~ "use_advanced_search=False * :py:class:`Error "
#~ "Handling` * :py:class:`==============` * "
#~ ":py:class:`- Validates required parameters "
#~ "(query must be provided)` * :py:class:`-"
#~ " Handles search failures gracefully with"
#~ " informative messages` * :py:class:`- "
#~ "Provides detailed error context for "
#~ "debugging`"
#~ msgstr ""

#~ msgid ""
#~ ":py:class:`dict` -- JSON-RPC 2.0 "
#~ "response containing either: - Success: "
#~ "Result with discovered tools and "
#~ "metadata - Error: Error object with "
#~ "appropriate code and message"
#~ msgstr ""

#~ msgid ":py:class:`================`"
#~ msgstr ":py:class:`列表`"

#~ msgid ""
#~ ":py:class:`Detailed Format (default)` -- "
#~ "Returns comprehensive tool information "
#~ "including: - Tool names, descriptions, "
#~ "types - Parameter schemas with detailed"
#~ " property information - Search metadata "
#~ "(query, method used, match count)"
#~ msgstr ""

#~ msgid ""
#~ ":py:class:`MCP Standard Format` -- Returns "
#~ "tools in standard MCP tools/list format:"
#~ " - Simplified tool schema compatible "
#~ "with MCP clients - inputSchema formatted"
#~ " for direct MCP consumption - "
#~ "Metadata included in separate _meta "
#~ "field"
#~ msgstr ""

#~ msgid ":py:class:`Search Methods`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`==============`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`AI-Powered Search (ToolFinderLLM)` --"
#~ msgstr ""

#~ msgid ":py:class:`Simple Keyword Search` --"
#~ msgstr ""

#~ msgid ":py:class:`Error Handling`"
#~ msgstr ""
#~ "错误处理：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid ":py:class:`- Validates required parameters (query must be provided)`"
#~ msgstr ""

#~ msgid ":py:class:`- Provides detailed error context for debugging`"
#~ msgstr ""

#~ msgid "Load ToolSpace configurations using ToolUniverse's method."
#~ msgstr "将MCP工具从远程服务器加载到此ToolUniverse实例中。"

#~ msgid ""
#~ "* :py:class:`Callable` -- The decorated "
#~ "function registered with FastMCP framework."
#~ " * :py:class:`Usage Examples` * "
#~ ":py:class:`---------------` * :py:class:`Simple "
#~ "synchronous function` * ```python * "
#~ "**def analyze_text(text** (:py:class:`str`, "
#~ ":py:class:`max_length`: :py:class:`int = 100) "
#~ "-> str:`) -- '''Analyze text and "
#~ "return summary.'''   return text[:max_length] "
#~ "+ \"...\" if len(text) > max_length "
#~ "else text * :py:class:`server.add_custom_tool(` "
#~ "-- name=\"text_analyzer\",   function=analyze_text,   "
#~ "description=\"Analyze and summarize text "
#~ "content\" * :py:class:`)` * ``` * "
#~ ":py:class:`Asynchronous function with complex "
#~ "parameters` * ```python * :py:class:`async "
#~ "def process_data(` -- data: List[Dict[str, "
#~ "Any]],   processing_type: str = \"standard\""
#~ " * :py:class:`) -> Dict[str`, "
#~ ":py:class:`Any]` -- '''Process scientific data"
#~ " with specified method.'''   # Custom "
#~ "processing logic here   return "
#~ "{\"processed_items\": len(data), \"type\": "
#~ "processing_type} * :py:class:`server.add_custom_tool(` "
#~ "-- name=\"data_processor\",   function=process_data "
#~ "* :py:class:`)` * ``` * "
#~ ":py:class:`Function with custom schema` * "
#~ "```python * **def calculate_score(values** "
#~ "(:py:class:`List[float]) -> float:`) -- "
#~ "'''Calculate composite score from values.'''"
#~ "   return sum(values) / len(values) if "
#~ "values else 0.0 * "
#~ ":py:class:`server.add_custom_tool(` -- "
#~ "name=\"score_calculator\",   function=calculate_score,   "
#~ "parameter_schema={       \"type\": \"object\",       "
#~ "\"properties\": {           \"values\": {"
#~ "               \"type\": \"array\",               "
#~ "\"items\": {\"type\": \"number\"},               "
#~ "\"description\": \"List of numeric values "
#~ "to process\"           }       },       "
#~ "\"required\": [\"values\"]   } * :py:class:`)`"
#~ " * ``` * :py:class:`Integration with "
#~ "ToolUniverse` * :py:class:`=============================`"
#~ " * :py:class:`Custom tools work seamlessly"
#~ " alongside ToolUniverse tools` * "
#~ ":py:class:`- Appear in tool discovery "
#~ "searches` * :py:class:`- Follow same "
#~ "calling conventions` * :py:class:`- Include"
#~ " in server diagnostics` and "
#~ ":py:class:`listings` * :py:class:`- Support "
#~ "all MCP client interaction patterns` *"
#~ " :py:class:`Best Practices` * "
#~ ":py:class:`===============` * :py:class:`- Use "
#~ "descriptive`, :py:class:`unique tool names` *"
#~ " :py:class:`- Include comprehensive docstrings`"
#~ " * :py:class:`- Add proper type "
#~ "annotations for parameters` * :py:class:`- "
#~ "Handle errors gracefully within the "
#~ "function` * :py:class:`- Consider async "
#~ "functions for I/O-bound operations` * "
#~ ":py:class:`- Test tools thoroughly before "
#~ "deployment` * :py:class:`Notes` * "
#~ ":py:class:`======` * :py:class:`- Custom tools"
#~ " are registered immediately upon addition`"
#~ " * :py:class:`- Tools can be added"
#~ " before` or :py:class:`after server "
#~ "startup` * :py:class:`- Function signature "
#~ "determines parameter schema automatically` *"
#~ " :py:class:`- Custom tools support all "
#~ "FastMCP features` and :py:class:`conventions`"
#~ msgstr ""

#~ msgid ":py:class:`Usage Examples`"
#~ msgstr ""
#~ "用法示例：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid ":py:class:`---------------`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`Simple synchronous function`"
#~ msgstr ":py:class:`列表`"

#~ msgid "```python"
#~ msgstr ""

#~ msgid ":py:class:`)`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`Function with custom schema`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`=============================`"
#~ msgstr ""

#~ msgid ":py:class:`Custom tools work seamlessly alongside ToolUniverse tools`"
#~ msgstr ""

#~ msgid ":py:class:`- Appear in tool discovery searches`"
#~ msgstr ""
#~ "```python\n"
#~ "tu = ToolUniverse()\n"
#~ "```"

#~ msgid ":py:class:`- Follow same calling conventions`"
#~ msgstr "使用自定义的 ToolUniverse 配置"

#~ msgid ":py:class:`- Include in server diagnostics` and :py:class:`listings`"
#~ msgstr "使用此功能的优势："

#~ msgid ":py:class:`- Support all MCP client interaction patterns`"
#~ msgstr ""

#~ msgid ":py:class:`===============`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`Notes`"
#~ msgstr ":py:class:`列表`"

#~ msgid ":py:class:`======`"
#~ msgstr ":py:class:`列表`"

#~ msgid "Get the current LLM configuration from ToolSpace."
#~ msgstr "获取此工具类型的默认配置文件路径。"

#~ msgid ""
#~ "Communication transport protocol:  - "
#~ "\"stdio\": Standard input/output communication   "
#~ "* Best for: Command-line tools, "
#~ "subprocess integration   * Pros: Low "
#~ "overhead, simple integration   * Cons: "
#~ "Single client, no network access  - "
#~ "\"http\": HTTP-based communication "
#~ "(streamable-http)   * Best for: Web "
#~ "applications, REST API integration   * "
#~ "Pros: Wide compatibility, stateless, scalable"
#~ "   * Cons: Higher overhead than stdio"
#~ "  - \"sse\": Server-Sent Events over"
#~ " HTTP   * Best for: Real-time "
#~ "applications, streaming responses   * Pros:"
#~ " Real-time communication, web-compatible"
#~ "   * Cons: Browser limitations, more "
#~ "complex"
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:51: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:51: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:54: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:54: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:56: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:56: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:61: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:61: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:63: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:63: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:73: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:73: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:75: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:75: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:79: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:79: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:93: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:93: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:100: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/__init__.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:100: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "Specific ToolUniverse categories to load. "
#~ "If None, loads all available tools "
#~ "(350+ tools). Common category combinations:"
#~ "  Scientific Research: [\"ChEMBL\", \"uniprot\","
#~ " \"opentarget\", \"pubchem\", \"hpa\"]  Drug "
#~ "Discovery: [\"ChEMBL\", \"fda_drug_label\", "
#~ "\"clinical_trials\", \"pubchem\"]  Literature "
#~ "Analysis: [\"EuropePMC\", \"semantic_scholar\", "
#~ "\"pubtator\", \"agents\"]  Minimal Setup: "
#~ "[\"tool_finder_llm\", \"special_tools\"]"
#~ msgstr ""
#~ "指定要加载的 ToolUniverse 分类。如果设置为 None 且 "
#~ "auto_expose_tools=True，则会加载所有可用工具。常见组合如下：  \n"
#~ "- 科学类: [\"ChEMBL\", \"uniprot\", "
#~ "\"opentarget\", \"pubchem\", \"hpa\"]  \n"
#~ "- 文献类: [\"EuropePMC\", \"semantic_scholar\", "
#~ "\"pubtator\", \"agents\"]  \n"
#~ "- 临床类: [\"fda_drug_label\", \"clinical_trials\", \"adverse_events\"]"

#~ msgid ""
#~ "Additional SMCP configuration options:  - "
#~ "tooluniverse_config: Pre-configured ToolUniverse "
#~ "instance - auto_expose_tools (bool, default"
#~ " True): Auto-expose ToolUniverse tools "
#~ "- max_workers (int, default 5): Thread"
#~ " pool size for tool execution - "
#~ "Any FastMCP server options (debug, "
#~ "logging, etc.)"
#~ msgstr ""

#~ msgid ""
#~ "* :py:class:`SMCP` -- Fully configured "
#~ "SMCP server instance ready to run. "
#~ "* :py:class:`Usage Examples` * "
#~ ":py:class:`==============` * :py:class:`Quick Start"
#~ " (all tools)` * ```python * "
#~ ":py:class:`server = create_smcp_server(```\"Research "
#~ "Server\"``:py:class:`)` * :py:class:`server.run_simple()`"
#~ " * ``` * :py:class:`Focused Server "
#~ "(specific domains)` * ```python * "
#~ ":py:class:`server = create_smcp_server(` -- "
#~ "name=\"Drug Discovery API\",   "
#~ "tool_categories=[\"ChEMBL\", \"fda_drug_label\", "
#~ "\"clinical_trials\"],   max_workers=10 * "
#~ ":py:class:`)` * :py:class:`server.run_simple(port=8000)`"
#~ " * ``` * :py:class:`Custom Configuration`"
#~ " * ```python * :py:class:`server = "
#~ "create_smcp_server(` -- name=\"High-Performance "
#~ "Server\",   search_enabled=True,   max_workers=20,   "
#~ "debug=True * :py:class:`)` * "
#~ ":py:class:`server.run_simple(transport=```\"http\"``, "
#~ ":py:class:`host=```\"0.0.0.0\"``, :py:class:`port=7000)` *"
#~ " ``` * :py:class:`Pre-configured "
#~ "ToolUniverse` * ```python * :py:class:`tu "
#~ "= ToolUniverse()` * "
#~ ":py:class:`tu.load_tools(tool_type=[```\"uniprot\"``, "
#~ "``\"ChEMBL\"``:py:class:`])` * :py:class:`server ="
#~ " create_smcp_server(` -- name=\"Protein-Drug "
#~ "Server\",   tooluniverse_config=tu,   search_enabled=True"
#~ " * :py:class:`)` * ``` * "
#~ ":py:class:`Benefits` of :py:class:`Using This "
#~ "Function` * :py:class:`===============================`"
#~ " * **- **Simplified Setup**** "
#~ "(:py:class:`Reduces boilerplate code for "
#~ "common configurations`) * **- **Best "
#~ "Practices**** (:py:class:`Applies recommended "
#~ "settings automatically`) * **- **Consistent"
#~ " Naming**** (:py:class:`Encourages good server"
#~ " naming conventions`) * **- **Future-"
#~ "Proof**** (:py:class:`Will include new "
#~ "recommended defaults in future versions`) "
#~ "* **- **Documentation**** (:py:class:`Provides "
#~ "clear examples` and :py:class:`guidance`) *"
#~ " :py:class:`Equivalent Manual Configuration` *"
#~ " :py:class:`===============================` * "
#~ ":py:class:`This function is equivalent to` "
#~ "* ```python * :py:class:`server = SMCP(`"
#~ " -- name=name,   tool_categories=tool_categories,   "
#~ "search_enabled=search_enabled,   auto_expose_tools=True,   "
#~ "max_workers=5,   **kwargs * :py:class:`)` *"
#~ " ``` * :py:class:`When` to :py:class:`Use"
#~ " Manual Configuration` * "
#~ ":py:class:`================================` * "
#~ ":py:class:`- Need precise control over "
#~ "all initialization parameters` * :py:class:`-"
#~ " Using custom ToolUniverse configurations` "
#~ "* :py:class:`- Implementing custom MCP "
#~ "methods` or :py:class:`tools` * :py:class:`-"
#~ " Advanced deployment scenarios with "
#~ "specific requirements`"
#~ msgstr ""

#~ msgid ":py:class:`Quick Start (all tools)`"
#~ msgstr ":py:class:`列表`"

#~ msgid ""
#~ ":py:class:`server = create_smcp_server(```\"Research "
#~ "Server\"``:py:class:`)`"
#~ msgstr ""

#~ msgid ":py:class:`Focused Server (specific domains)`"
#~ msgstr ""

#~ msgid ":py:class:`Custom Configuration`"
#~ msgstr "工具配置"

#~ msgid ":py:class:`Pre-configured ToolUniverse`"
#~ msgstr "tooluniverse_config：预配置的 ToolUniverse 实例"

#~ msgid ":py:class:`tu = ToolUniverse()`"
#~ msgstr ""
#~ "```python\n"
#~ "tu = ToolUniverse()\n"
#~ "```"

#~ msgid ""
#~ ":py:class:`tu.load_tools(tool_type=[```\"uniprot\"``, "
#~ "``\"ChEMBL\"``:py:class:`])`"
#~ msgstr ""

#~ msgid ":py:class:`===============================`"
#~ msgstr ""

#~ msgid ":py:class:`================================`"
#~ msgstr ""

#~ msgid ""
#~ "Server Side (Tool Provider): ```python "
#~ "from tooluniverse.mcp_tool_registry import "
#~ "register_mcp_tool, start_mcp_server"
#~ msgstr ""

#~ msgid ""
#~ "\"server_name\": \"Custom Analysis Server\", "
#~ "\"host\": \"0.0.0.0\", \"port\": 8001"
#~ msgstr ""

#~ msgid "Client Integration:"
#~ msgstr ""
#~ "清理操作：  \n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "}) .. code-block:: python"
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:51: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:51: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:54: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:54: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:56: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:56: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:61: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:61: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:63: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:63: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:73: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:73: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:75: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:75: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:79: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:79: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:93: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:93: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "/Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:100: (WARNING/2)"
#~ " Inline literal start-string without "
#~ "end-"
#~ "string./Users/shgao/logs/25.05.28tooluniverse/ToolUniverse/src/tooluniverse/smcp.py:docstring"
#~ " of tooluniverse.smcp.SMCP.run_simple:100: (WARNING/2)"
#~ " Inline interpreted text or phrase "
#~ "reference start-string without end-"
#~ "string."
#~ msgstr ""

#~ msgid "Resolve official aliases to their full HuggingFace URI."
#~ msgstr ""

#~ msgid "Apply hooks configuration from ToolSpace."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Hooks configuration list"
#~ msgstr "工具配置"

#~ msgid "Apply LLM configuration from ToolSpace."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "LLM configuration dictionary"
#~ msgstr "工具配置字典"

#~ msgid "Create hook configuration from simple hook_type parameter."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Generated hook configuration"
#~ msgstr "工具配置"

#~ msgid "Ordered list of function call dictionaries."
#~ msgstr "工具配置字典列表"

#~ msgid "List of tool names loaded from the file"
#~ msgstr "工具名称筛选列表。"

#~ msgid ""
#~ "Process any MCPAutoLoaderTool instances to "
#~ "automatically discover and register MCP "
#~ "tools."
#~ msgstr "处理所有 MCPAutoLoaderTool 实例，以自动发现并注册 MCP 工具。"

#~ msgid "Path to the JSON file"
#~ msgstr "输出文件路径"

#~ msgid "List of tool configurations from the file"
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Store ToolSpace metadata for reference."
#~ msgstr "工具名称筛选列表。"

#~ msgid "ToolSpace configuration dictionary"
#~ msgstr "工具配置字典"

#~ msgid "Apply default configuration to the tool config"
#~ msgstr "将默认配置应用于工具配置"

#~ msgid "Name of the tool to call"
#~ msgstr "工具名称。"

#~ msgid "Arguments to pass to the tool"
#~ msgstr "传递给工具的参数"

#~ msgid "Any: Result from the tool execution"
#~ msgstr "组合执行结果"

#~ msgid "callable: Event emitter function"
#~ msgstr ""

#~ msgid "set: Set of tool names that this composition calls"
#~ msgstr "工具名称或工具配置列表"

#~ msgid "dict: Mapping of tool names to category names"
#~ msgstr "工具类型名称列表（类别键）。"

#~ msgid "str: The composition code as a string"
#~ msgstr ""

#~ msgid "tuple: (successfully_loaded, failed_to_load)"
#~ msgstr ""

#~ msgid "dict: Filtered results with matched records and applied filters"
#~ msgstr ""

#~ msgid "dict: Search results with matched records and metadata"
#~ msgstr ""

#~ msgid "Format response content"
#~ msgstr "格式化响应内容"

#~ msgid "Get package information from local configuration"
#~ msgstr "从本地配置获取软件包信息"

#~ msgid "execute_tooluniverse_function:"
#~ msgstr "ToolUniverse 或 dict，可选"

#~ msgid "Implementation Details:"
#~ msgstr ""
#~ "实现细节：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "JSON-formatted error responses for consistency"
#~ msgstr "为确保一致性，使用JSON格式的错误响应"

#~ msgid "Non-blocking I/O for network operations"
#~ msgstr "用于网络操作的非阻塞I/O"

#~ msgid "execute_tooluniverse_function provides direct tool access"
#~ msgstr ""

#~ msgid "# Tool execution logic"
#~ msgstr "# 工具执行逻辑"

#~ msgid "Efficient tool lookup and execution"
#~ msgstr "高效的工具查找与执行"

#~ msgid "Thread pool reuse for all tool executions"
#~ msgstr "用于并发工具执行的可配置线程池"

#~ msgid "Get valid tool categories from ToolUniverse."
#~ msgstr "从 ToolUniverse 获取有效的工具类别。"

#~ msgid "\"query\": \"protein structure analysis\", \"limit\": 3"
#~ msgstr "\"query\": \"蛋白质结构分析\", \"limit\": 3"

#~ msgid "Configuration Management:"
#~ msgstr ""
#~ "配置管理：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "Load ToolSpace configurations."
#~ msgstr "所有已加载工具配置列表"

#~ msgid ""
#~ "This method loads ToolSpace configuration(s)"
#~ " and retrieves the LLM config and "
#~ "metadata from ToolUniverse. It completely "
#~ "reuses ToolUniverse's load_toolspace functionality"
#~ " without reimplementing any logic."
#~ msgstr ""

#~ msgid ""
#~ "ToolSpace URI or list of URIs "
#~ "(e.g., \"./config.yaml\", \"hf:user/repo\", or "
#~ "[\"config1.yaml\", \"config2.yaml\"])"
#~ msgstr ""

#~ msgid "Implements proper error handling and JSON-RPC 2.0 compliance"
#~ msgstr "实现正确的错误处理并符合JSON-RPC 2.0规范"

#~ msgid "Tool Exposure Process:"
#~ msgstr ""
#~ "工具暴露流程：\n"
#~ "\n"
#~ "上下文：文档"

#~ msgid "Search Setup:"
#~ msgstr "搜索词"

#~ msgid "Get human-readable filter description."
#~ msgstr ""

#~ msgid "str: Stemmed word"
#~ msgstr ""

#~ msgid "Tool configuration"
#~ msgstr "工具配置"

#~ msgid "float: Exact match bonus score"
#~ msgstr ""

#~ msgid "Name of the tool to score"
#~ msgstr "要检索的工具名称。"

#~ msgid "float: TF-IDF relevance score"
#~ msgstr ""

#~ msgid "Tool parameter schema"
#~ msgstr "工具参数模式"

#~ msgid "List[str]: List of text elements from parameters"
#~ msgstr ""

#~ msgid "List[str]: List of phrases and individual tokens"
#~ msgstr ""

#~ msgid "str: JSON string containing search results with relevance scores"
#~ msgstr "包含搜索参数的字典"

#~ msgid "List[str]: List of processed tokens"
#~ msgstr "可用工具名称列表"

#~ msgid "str: JSON formatted search results"
#~ msgstr "包含搜索参数的字典"

#~ msgid "List of tool dictionaries"
#~ msgstr "纸质词典列表"

#~ msgid "str: Compact formatted tool descriptions for the prompt"
#~ msgstr ""

#~ msgid "list: List of tool dictionaries with names and descriptions"
#~ msgstr ""

#~ msgid "list: Filtered list of tools"
#~ msgstr "工具配置列表"

#~ msgid "Create new embedding database from documents"
#~ msgstr ""

#~ msgid "Check if database exists"
#~ msgstr "检查数据库是否存在"

#~ msgid "Get database information"
#~ msgstr "获取数据库信息"

#~ msgid "Initialize OpenAI client with configuration"
#~ msgstr "使用配置初始化 OpenAI 客户端"

#~ msgid "Search for papers using CORE API."
#~ msgstr "使用 CORE API 搜索论文。"

#~ msgid "Extract year from publication date."
#~ msgstr "从出版日期中提取年份。"

#~ msgid "Build URL for BioGRID API request."
#~ msgstr ""

#~ msgid "Build parameters for BioGRID API request."
#~ msgstr "与工具定义中的参数相对应的工具参数字典。"

#~ msgid "Constructs the YAML data structure for the Boltz input."
#~ msgstr ""

#~ msgid ""
#~ "Maps the parameter names in the "
#~ "arguments dictionary to the expected "
#~ "parameter names defined in the tool's"
#~ " JSON configuration."
#~ msgstr ""

#~ msgid "Runtime arguments provided to the tool's run method."
#~ msgstr "传递给工具的参数"

#~ msgid "dict: A new dictionary with mapped parameter names."
#~ msgstr ""

#~ msgid ""
#~ "Prepares the dictionary of parameters "
#~ "for the API query string based on"
#~ " tool config and runtime arguments."
#~ msgstr ""

#~ msgid "dict: A dictionary of parameters ready for the API requests."
#~ msgstr "与工具定义中的参数相对应的工具参数字典。"

#~ msgid ""
#~ "Formats the endpoint URL by substituting"
#~ " path parameters (like {nctId}) with "
#~ "values from the arguments dictionary."
#~ msgstr ""

#~ msgid "str: The formatted endpoint URL."
#~ msgstr "格式化响应内容"

#~ msgid "Load the execute_tool function from external Python file"
#~ msgstr ""

#~ msgid "Load the execute_tool function from embedded source code"
#~ msgstr ""

#~ msgid "_BatchCacheInfo(namespace: str, version: str, cache_key: str)"
#~ msgstr ""

#~ msgid ""
#~ "_BatchJob(signature: str, call: Dict[str, "
#~ "Any], function_name: str, arguments: Dict[str,"
#~ " Any], indices: List[int] = <factory>, "
#~ "tool_instance: Any = None, cache_info: "
#~ "Optional[tooluniverse.execute_function._BatchCacheInfo] = "
#~ "None, cache_key_composed: Optional[str] = "
#~ "None, skip_execution: bool = False)"
#~ msgstr ""

#~ msgid "Format JSON data with pretty printing."
#~ msgstr ""

#~ msgid "Format plain text with line wrapping."
#~ msgstr ""

#~ msgid "Format list data."
#~ msgstr ""

#~ msgid "Validate the output against configured rules."
#~ msgstr "验证函数调用是否符合工具配置。"

#~ msgid "Attempt to fix validation errors."
#~ msgstr ""

#~ msgid "Create a log entry for the tool execution."
#~ msgstr "组合执行结果"

#~ msgid "Write the log entry to the configured destination."
#~ msgstr "使用配置初始化 OpenAI 客户端"

#~ msgid "Builds the request URL from arguments."
#~ msgstr ""

#~ msgid "Extract specific data from the GO API response using custom paths."
#~ msgstr ""

#~ msgid "Create _shared_client.py if it doesn't exist."
#~ msgstr ""

#~ msgid "Yield chunks of the sequence with up to chunk_size elements."
#~ msgstr ""

#~ msgid "Format files using pre-commit if available, else ruff/autoflake/black."
#~ msgstr ""

#~ msgid "Honors TOOLUNIVERSE_SKIP_FORMAT=1 to skip formatting entirely."
#~ msgstr ""

#~ msgid "Build URL for GEO API request."
#~ msgstr ""

#~ msgid "Build parameters for GEO API request."
#~ msgstr "与工具定义中的参数相对应的工具参数字典。"

#~ msgid "Make a request to the GWAS Catalog API."
#~ msgstr ""

#~ msgid "Extract data from the _embedded structure and add metadata."
#~ msgstr ""

#~ msgid "Make HPA API request with improved error handling"
#~ msgstr ""

#~ msgid "Make HPA JSON API request for a specific gene"
#~ msgstr ""

#~ msgid "Make HPA XML API request for a specific gene"
#~ msgstr ""

#~ msgid "Generate a summary of subcellular locations"
#~ msgstr ""

#~ msgid "Generate expression level comparison summary"
#~ msgstr ""

#~ msgid "Compare expression difference between disease and healthy state"
#~ msgstr ""

#~ msgid "Categorize expression level"
#~ msgstr ""

#~ msgid "Validate context_name and provide intelligent recommendations"
#~ msgstr ""

#~ msgid "Parse gene XML data comprehensively based on actual HPA XML schema"
#~ msgstr ""

#~ msgid ""
#~ "Extract tissue immunohistochemistry (IHC) "
#~ "images based on actual HPA XML "
#~ "structure"
#~ msgstr ""

#~ msgid ""
#~ "Extract subcellular immunofluorescence (IF) "
#~ "images based on actual HPA XML "
#~ "structure"
#~ msgstr ""

#~ msgid "Extract antibody information from actual HPA XML structure"
#~ msgstr ""

#~ msgid "Extract expression summary information from actual HPA XML structure"
#~ msgstr ""

#~ msgid "Extract detailed tissue expression data from actual HPA XML structure"
#~ msgstr ""

#~ msgid "Extract cell line expression data from actual HPA XML structure"
#~ msgstr ""

#~ msgid ""
#~ "Convert NetworkX graph and biological "
#~ "processes to string representation."
#~ msgstr ""

#~ msgid ""
#~ "graph (networkx.Graph): The network graph. "
#~ "bp_collection (list): List of biological "
#~ "processes. original_genes (list): Original "
#~ "gene list provided by user. tissue "
#~ "(str): Tissue type used for analysis."
#~ msgstr ""

#~ msgid "str: Comprehensive string representation of the network data."
#~ msgstr "获取有关已加载 XML 数据集的全面信息。"

#~ msgid "Get current timestamp for the report."
#~ msgstr ""

#~ msgid "Resolve default max tokens for a model."
#~ msgstr ""

#~ msgid "Setup the main ToolUniverse logger"
#~ msgstr ""
#~ "```python\n"
#~ "tu = ToolUniverse()\n"
#~ "```"

#~ msgid "Convert a resource described by URI to Markdown using markitdown CLI."
#~ msgstr ""

#~ msgid "Download content from URL to temporary file."
#~ msgstr ""

#~ msgid "Handle data URI and save to temporary file."
#~ msgstr ""

#~ msgid "Ensure HTTP session is available for HTTP transport"
#~ msgstr ""

#~ msgid "Close HTTP session if exists"
#~ msgstr ""

#~ msgid "Get the full MCP endpoint URL"
#~ msgstr ""

#~ msgid ""
#~ "Initialize MCP session if needed (for"
#~ " compatibility with different MCP servers)"
#~ msgstr ""

#~ msgid "Make an MCP JSON-RPC request"
#~ msgstr ""

#~ msgid "Common async execution pattern with proper cleanup"
#~ msgstr ""

#~ msgid "Add MCP integration methods to ToolUniverse class."
#~ msgstr "与 ToolUniverse 的集成："

#~ msgid "Get SMCP class with delayed import to avoid circular import"
#~ msgstr ""

#~ msgid "Get ToolUniverse class with delayed import to avoid circular import"
#~ msgstr ""

#~ msgid "Start SMCP server for tools on a specific port."
#~ msgstr "获取特定研究的所有关联。"

#~ msgid ""
#~ "Add a registered tool to an SMCP"
#~ " server instance by reusing SMCP's "
#~ "proven method."
#~ msgstr ""

#~ msgid ""
#~ "Create an MCP tool from a "
#~ "ToolUniverse tool configuration using a "
#~ "tool instance."
#~ msgstr ""

#~ msgid ""
#~ "This method reuses the proven approach"
#~ " from SMCP's _create_mcp_tool_from_tooluniverse "
#~ "method, but adapts it to work with"
#~ " tool instances instead of ToolUniverse."
#~ " It creates functions with proper "
#~ "parameter signatures that match the "
#~ "ToolUniverse tool schema, enabling FastMCP's"
#~ " automatic parameter validation."
#~ msgstr ""

#~ msgid ""
#~ "Build a FastMCP-compatible function with"
#~ " proper docstring and type annotations."
#~ msgstr ""

#~ msgid ""
#~ "FastMCP generates parameter schema from "
#~ "the function signature and docstring, so"
#~ " we need to create a function "
#~ "that matches the expected format "
#~ "exactly."
#~ msgstr ""

#~ msgid "清理过期会话"
#~ msgstr ""

#~ msgid "Resolve molecule name to SMILES using PubChem."
#~ msgstr ""

#~ msgid "Calculate basic molecular properties."
#~ msgstr ""

#~ msgid "Create HTML content for molecule visualization."
#~ msgstr ""

#~ msgid "Create HTML content for molecule 3D visualization."
#~ msgstr ""

#~ msgid "Create floating control panel HTML for molecules."
#~ msgstr ""

#~ msgid "Create bottom toolbar HTML."
#~ msgstr "工具配置字典"

#~ msgid "Create molecule information cards."
#~ msgstr ""

#~ msgid ""
#~ "Tolerant accessor for the sections "
#~ "array. Data sometimes uses Sections.Section"
#~ " (capital S) and sometimes Sections.section"
#~ " (lowercase)."
#~ msgstr ""

#~ msgid ""
#~ "Extract relevant information from a work"
#~ " object returned by OpenAlex API."
#~ msgstr ""

#~ msgid "work (dict): Work object from OpenAlex API response."
#~ msgstr ""

#~ msgid "dict: Formatted paper information."
#~ msgstr "工具配置字典"

#~ msgid "Extract query context from execution context."
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to identify the "
#~ "original user query or intent from "
#~ "the context information to provide "
#~ "better summarization."
#~ msgstr ""

#~ msgid "Execution context containing arguments and metadata"
#~ msgstr "包含所选工具和元数据的字典"

#~ msgid "str: Extracted query context or fallback description"
#~ msgstr ""

#~ msgid "Validate that LLM API keys are available for hook tools."
#~ msgstr ""

#~ msgid "bool: True if API keys are available, False otherwise"
#~ msgstr "如果工具支持流式处理，则为 True，否则为 False"

#~ msgid "Load hook configuration from file."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid ""
#~ "This method attempts to load the "
#~ "hook configuration from the specified "
#~ "file path, handling both package "
#~ "resources and file system paths. If "
#~ "the config is already provided and "
#~ "not empty, it uses that instead."
#~ msgstr ""

#~ msgid "Get the path to the hook configuration file."
#~ msgstr "生成的钩子配置"

#~ msgid "Path: Path to the configuration file"
#~ msgstr "生成的钩子配置"

#~ msgid "Load hook configurations and create hook instances."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid ""
#~ "This method processes the configuration "
#~ "and creates appropriate hook instances "
#~ "for global, tool-specific, and "
#~ "category-specific hooks. It also "
#~ "automatically loads any tools required "
#~ "by the hooks."
#~ msgstr ""

#~ msgid "Automatically load tools required by hooks."
#~ msgstr ""

#~ msgid ""
#~ "This method analyzes hook configurations "
#~ "to determine which tools are needed "
#~ "and automatically loads them into the"
#~ " ToolUniverse."
#~ msgstr ""

#~ msgid "List of hook configurations"
#~ msgstr "匹配工具配置列表"

#~ msgid "Ensure that tools required by hooks are loaded."
#~ msgstr ""

#~ msgid ""
#~ "This method is called during HookManager"
#~ " initialization to make sure that the"
#~ " necessary tools (like output_summarization "
#~ "tools) are available."
#~ msgstr ""

#~ msgid "Load any pending tools that were queued during initialization."
#~ msgstr ""

#~ msgid ""
#~ "This method is called when hooks "
#~ "are applied to ensure that any "
#~ "tools that couldn't be loaded during "
#~ "HookManager initialization are loaded once "
#~ "the ToolUniverse is fully ready."
#~ msgstr ""

#~ msgid ""
#~ "Check if a tool is a hook-"
#~ "related tool that should not be "
#~ "processed by hooks."
#~ msgstr ""

#~ msgid ""
#~ "This prevents recursive hook processing "
#~ "where hook tools (like ToolOutputSummarizer)"
#~ " produce output that would trigger "
#~ "more hook processing."
#~ msgstr ""

#~ msgid "Name of the tool to check"
#~ msgstr "工具名称。"

#~ msgid ""
#~ "bool: True if the tool is a "
#~ "hook tool and should be excluded "
#~ "from hook processing"
#~ msgstr ""

#~ msgid "Create a hook instance based on configuration."
#~ msgstr "所有已加载工具配置列表"

#~ msgid ""
#~ "This method creates hook instances and"
#~ " applies hook type-specific defaults "
#~ "from the configuration before initializing "
#~ "the hook."
#~ msgstr ""

#~ msgid ""
#~ "Optional[OutputHook]: Created hook instance or"
#~ " None if type not supported"
#~ msgstr ""

#~ msgid "Apply hook type-specific default values to hook configuration."
#~ msgstr "生成的钩子配置"

#~ msgid ""
#~ "This method merges hook type defaults"
#~ " with individual hook configuration, "
#~ "ensuring that each hook type gets "
#~ "its appropriate default values."
#~ msgstr ""

#~ msgid "Original hook configuration"
#~ msgstr "工具配置"

#~ msgid "Check if a hook is applicable to the current tool."
#~ msgstr ""

#~ msgid "Hook instance to check"
#~ msgstr ""

#~ msgid "Name of the current tool"
#~ msgstr "工具名称。"

#~ msgid "bool: True if hook is applicable, False otherwise"
#~ msgstr "如果工具支持流式处理，则为 True，否则为 False"

#~ msgid "Analyze the data to determine its format and structure."
#~ msgstr ""

#~ msgid "The data to analyze"
#~ msgstr "包含的工具名称列表。"

#~ msgid "tuple[str, str]: (data_format, data_structure)"
#~ msgstr ""

#~ msgid "Write data to file in the appropriate format."
#~ msgstr ""

#~ msgid "The data to write"
#~ msgstr "要注册的工具类"

#~ msgid "Path to the file"
#~ msgstr "输出文件路径"

#~ msgid "Format of the data"
#~ msgstr ""

#~ msgid "Clean up old files based on the cleanup_age_hours setting."
#~ msgstr ""

#~ msgid "Fetch PDB content from RCSB PDB database."
#~ msgstr ""

#~ msgid "Create floating control panel HTML."
#~ msgstr ""

#~ msgid "Create protein information cards."
#~ msgstr "工具配置字典"

#~ msgid "Build URL for STRING API request."
#~ msgstr ""

#~ msgid "Build parameters for STRING API request."
#~ msgstr "与工具定义中的参数相对应的工具参数字典。"

#~ msgid "Parse TSV response from STRING API."
#~ msgstr ""

#~ msgid "Setup Flask routes."
#~ msgstr ""

#~ msgid "Load graph data from file."
#~ msgstr "从文件加载的工具名称列表"

#~ msgid "Convert graph data to D3.js compatible format."
#~ msgstr ""

#~ msgid "Map category to a numeric group for visualization."
#~ msgstr ""

#~ msgid "Get incoming and outgoing connections for a tool."
#~ msgstr ""

#~ msgid "Extract package name from ImportError."
#~ msgstr ""

#~ msgid ""
#~ "Fully dynamic config file discovery -"
#~ " no hardcoded mappings. Automatically "
#~ "discovers config-to-module mappings by:"
#~ " 1. Finding all JSON config files "
#~ "2. Finding all Python tool modules "
#~ "3. Smart matching between config names"
#~ " and module names"
#~ msgstr ""

#~ msgid "Get all available tool modules by scanning the tooluniverse package."
#~ msgstr ""

#~ msgid ""
#~ "Smart matching algorithm to find the "
#~ "best module for a config file. "
#~ "Uses multiple strategies in order of "
#~ "preference."
#~ msgstr ""

#~ msgid "Load configuration from HuggingFace Hub."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Load configuration from HTTP/HTTPS URL."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Load configuration from local file."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "ToolSpace Configuration Schema and Validation"
#~ msgstr "工具配置字典"

#~ msgid ""
#~ "This module defines the schema for "
#~ "ToolSpace configurations, including validation "
#~ "rules and data structures for both "
#~ "presets and workspaces."
#~ msgstr ""

#~ msgid "Configuration for tools within a ToolSpace."
#~ msgstr "工具的配置字典"

#~ msgid "LLM configuration for workspaces."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid ""
#~ "Configuration mode - \"default\": Use "
#~ "ToolSpace config as default (when tool"
#~ " has no config) - \"fallback\": Use"
#~ " ToolSpace config as fallback (when "
#~ "tool's API fails)"
#~ msgstr ""

#~ msgid "str | None"
#~ msgstr ""

#~ msgid "Default LLM provider"
#~ msgstr ""

#~ msgid "Task-specific model mappings"
#~ msgstr ""

#~ msgid "Dict[str, str] | None"
#~ msgstr ""

#~ msgid "Default temperature"
#~ msgstr "布尔值，默认值为 True"

#~ msgid "float | None"
#~ msgstr ""

#~ msgid "Default max tokens"
#~ msgstr ""

#~ msgid "int | None"
#~ msgstr ""

#~ msgid "Hook configuration for workspaces."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Main ToolSpace configuration structure."
#~ msgstr "工具配置字典"

#~ msgid "Convert to dictionary for serialization."
#~ msgstr "工具的配置字典"

#~ msgid "Create from dictionary."
#~ msgstr "工具配置字典"

#~ msgid "Save configuration to file."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Load configuration from file."
#~ msgstr "指定名称的工具配置列表。"

#~ msgid "Create a basic preset template."
#~ msgstr ""

#~ msgid "Create a workspace template with full configuration options."
#~ msgstr ""

#~ msgid ""
#~ "Simplified validation for ToolSpace "
#~ "configurations. Only checks essential fields"
#~ " and basic structure."
#~ msgstr ""

#~ msgid "Return significant query terms for relevance filtering."
#~ msgstr ""

#~ msgid "Fetch summary from a guideline detail page."
#~ msgstr ""

#~ msgid "Search NICE guidelines using real web scraping."
#~ msgstr "使用 CORE API 搜索论文。"

#~ msgid "Search PubMed for guideline publications."
#~ msgstr ""

#~ msgid "Search Europe PMC for guideline publications."
#~ msgstr ""

#~ msgid "Get abstract for a specific PMID using PubMed API."
#~ msgstr "获取特定SNP的所有关联。"

#~ msgid "Get more detailed content from Europe PMC."
#~ msgstr ""

#~ msgid "Search TRIP Database for clinical guidelines."
#~ msgstr ""

#~ msgid ""
#~ "Extract content from a guideline URL "
#~ "using targeted parsers when available."
#~ msgstr ""

#~ msgid "Clean generic text content to emphasise clinical lines."
#~ msgstr ""

#~ msgid "Fetch BMJ Rapid Recommendation content with key recommendations."
#~ msgstr ""

#~ msgid ""
#~ "Fetch Diabetes & Metabolism Journal "
#~ "guideline content and GRADE statements."
#~ msgstr ""

#~ msgid "Fetch description from a WHO guideline detail page."
#~ msgstr ""

#~ msgid "Search WHO guidelines by scraping their official website."
#~ msgstr ""

#~ msgid "Search for clinical guidelines using OpenAlex API."
#~ msgstr "使用 CORE API 搜索论文。"

#~ msgid "Reconstruct abstract from inverted index."
#~ msgstr ""

#~ msgid "Fetch complete guideline content from NICE page."
#~ msgstr ""

#~ msgid "Fetch WHO guideline content and PDF link."
#~ msgstr ""

#~ msgid "Search GIN guidelines using web scraping."
#~ msgstr ""

#~ msgid "Provide fallback guidelines when direct access fails."
#~ msgstr ""

#~ msgid "Extract actual content from a guideline URL."
#~ msgstr ""

#~ msgid "Search CMA Infobase guidelines using web scraping."
#~ msgstr ""

