# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Shanghua Gao
# This file is distributed under the same license as the ToolUniverse
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ToolUniverse \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 10:37-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../guide/tool_composition.rst:2 a9630f33a9c343acb5d1f22ce0628d79
msgid "Tool Composition Tutorial"
msgstr ""

#: ../../guide/tool_composition.rst:4 038cc327bdc64350a0d7324797118101
msgid "**Chain ToolUniverse's 600+ tools into powerful scientific workflows**"
msgstr ""

#: ../../guide/tool_composition.rst:7 1584e128fd394f49860550765972eab9
msgid "Overview"
msgstr ""

#: ../../guide/tool_composition.rst:9 2283662712494f38a8a5d364d03dc954
msgid ""
"Tool composition is the art of combining individual scientific tools into"
" sophisticated research workflows. ToolUniverse's Tool Composer enables "
"the integration of tools with heterogeneous backends to build end-to-end "
"workflows. By leveraging the Tool Caller for direct in-code execution, "
"Tool Composer generates a container function that exposes both the Tool "
"Caller and ToolUniverse as in-line, executable primitives."
msgstr ""

#: ../../guide/tool_composition.rst:24 0cde3e4769454b5e91749c7ad7d11bb4
msgid ""
"**Benefits of Tool Composition**: - **Complex Research**: Solve multi-"
"step problems that no single tool can address - **Workflow Reuse**: "
"Create reusable research pipelines for common tasks - **Automation**: "
"Reduce manual coordination between different tools - **Quality Control**:"
" Build in validation and expert review at critical steps - "
"**Heterogeneous Integration**: Combine tools with different backends "
"seamlessly - **Agentic Loops**: Enable adaptive, multi-step experimental "
"analysis"
msgstr ""

#: ../../guide/tool_composition.rst:33 84c98175d60b46c69b6a7449bf4dc078
msgid "Tool Composer Architecture"
msgstr ""

#: ../../guide/tool_composition.rst:35 b6d7dbded7354540aca2d30faceaa4ff
msgid ""
"The Tool Composer generates a container function that serves as the "
"execution backbone for complex workflows. This container function, "
"implemented as `compose(arguments, tooluniverse, call_tool)`, contains "
"the logic for coordinating different types of tools so they work together"
" in a single workflow."
msgstr ""

#: ../../guide/tool_composition.rst:37 a63ca151a8994b679585ba3abe059788
msgid "**Container Function Components**:"
msgstr ""

#: ../../guide/tool_composition.rst:39 1105eeea1ce946f9b8c546597cd25014
msgid ""
"**arguments**: Specifies the tool call arguments that follow the "
"interaction protocol schema of ToolUniverse"
msgstr ""

#: ../../guide/tool_composition.rst:40 4f39c67bdbe042c0bda5c7dc725da706
msgid ""
"**tooluniverse**: An instance of ToolUniverse that provides all available"
" functions that ToolUniverse can support"
msgstr ""

#: ../../guide/tool_composition.rst:41 d0f82bdbb9a04c0ea7a00d32d455e2e5
msgid ""
"**call_tool**: A callable interface of Tool Caller that abstracts the "
"invocation of individual tools in ToolUniverse"
msgstr ""

#: ../../guide/tool_composition.rst:43 82c9beb1f32445bf9c2397a5471b5b1f
msgid ""
"**Execution Patterns**: - **Chaining**: Chain the output of one tool into"
" the input of the next - **Broadcasting**: Call multiple tools with a "
"single query - **Agentic Loops**: Build agentic loops that use agentic "
"tools to generate function calls, execute tools, and incorporate tool "
"feedback for multi-step experimental analysis"
msgstr ""

#: ../../guide/tool_composition.rst:49 e50159d60e334e15a95f13f7d92c7972
msgid "How Tool Composition Works"
msgstr ""

#: ../../guide/tool_composition.rst:51 ba96fa01412c409fb1a00f28138a76ed
msgid ""
"ToolUniverse's ComposeTool system works through a configuration-driven "
"approach:"
msgstr ""

#: ../../guide/tool_composition.rst:53 4b354dcfdc3947e5bf8796fa8fdb3797
msgid ""
"**Configuration File**: Define compose tools in a JSON file like "
"`compose_tools.json`"
msgstr ""

#: ../../guide/tool_composition.rst:54 f001583ae8b542c79461baac9bba3568
msgid ""
"**Implementation Script**: Write Python scripts in the compose "
"environment: `def compose(arguments, tooluniverse, call_tool): ...`"
msgstr ""

#: ../../guide/tool_composition.rst:55 f0cdfa7ca862428d9772463fdcff6eb4
msgid ""
"**Automatic Loading**: ComposeTool automatically loads dependencies and "
"executes workflows"
msgstr ""

#: ../../guide/tool_composition.rst:58 0b713d710af049fa9919a3a99f37b26b
msgid "Creating Your First Compose Tool"
msgstr ""

#: ../../guide/tool_composition.rst:60 a85759fedf4b455c8febb8e7514bedd3
msgid "Let's create a literature search and summary tool as an example:"
msgstr ""

#: ../../guide/tool_composition.rst:63 793c56e8cf874420b236a0306bacbd9b
msgid "Step 1: Create the Implementation Script"
msgstr ""

#: ../../guide/tool_composition.rst:65 b863863af05d4a03ae085b9109ad52c6
msgid "Create a file `src/tooluniverse/compose_scripts/literature_tool.py`:"
msgstr ""

#: ../../guide/tool_composition.rst:92 5702913b39504395a133fd0fa882938a
msgid "Step 2: Add Configuration to compose_tools.json"
msgstr ""

#: ../../guide/tool_composition.rst:94 d10a69c1935545adabbca130d3363889
msgid "Add this configuration to `src/tooluniverse/data/compose_tools.json`:"
msgstr ""

#: ../../guide/tool_composition.rst:125 e5352b5b8d7e416fb806e9f897ad9324
msgid "Step 3: Use Your Compose Tool"
msgstr ""

#: ../../guide/tool_composition.rst:127 d09b740c1191476ca836ba9555eaf465
msgid ""
"Once configured, you can use your compose tool like any other "
"ToolUniverse tool:"
msgstr ""

#: ../../guide/tool_composition.rst:147 4bae3e4135554963ab8f8e684a621ebe
msgid "Compose Tool Configuration Reference"
msgstr ""

#: ../../guide/tool_composition.rst:150 104a744bbd9745bdae4b7f1569f301ea
msgid "Required Fields"
msgstr ""

#: ../../guide/tool_composition.rst:152 d3e733b511354b1481dfee2dd1b1b44a
msgid "**type**: Must be \"ComposeTool\""
msgstr ""

#: ../../guide/tool_composition.rst:153 e8a76a986e104882824ecfeefe969ce3
msgid "**name**: Unique name for your compose tool"
msgstr ""

#: ../../guide/tool_composition.rst:154 7966e82250304d43910298864f20d39a
msgid "**description**: Human-readable description of what the tool does"
msgstr ""

#: ../../guide/tool_composition.rst:155 1592d5fbc9654f18a1818fcb0ca3bf08
msgid "**parameter**: JSON schema defining input parameters"
msgstr ""

#: ../../guide/tool_composition.rst:156 e3b8b891a002425580217c7c5433802d
msgid "**composition_file**: Python file in `compose_scripts/` directory"
msgstr ""

#: ../../guide/tool_composition.rst:157 c84d501b5a0f40b5a83ea10e12c6d603
msgid "**composition_function**: Function name to call (usually \"compose\")"
msgstr ""

#: ../../guide/tool_composition.rst:160 2863cc064aa84b45b735eefaaef26fd0
msgid "Optional Fields"
msgstr ""

#: ../../guide/tool_composition.rst:162 e165d979da3741328cfc6456f0885502
msgid ""
"**auto_load_dependencies**: Whether to automatically load required tools "
"(default: true)"
msgstr ""

#: ../../guide/tool_composition.rst:163 43df3a7a2ac94783a571977b3507c061
msgid ""
"**fail_on_missing_tools**: Whether to fail if required tools are missing "
"(default: false)"
msgstr ""

#: ../../guide/tool_composition.rst:164 ab632b0334be4b25af82415d5f0979d8
msgid "**required_tools**: List of tool names that must be available"
msgstr ""

#: ../../guide/tool_composition.rst:167 8141069cecdd4a76a48d0be8f9c91680
msgid "Compose Function Signature"
msgstr ""

#: ../../guide/tool_composition.rst:169 bf63e7b5d2b64b0186c546c2f2bb74eb
msgid "Your compose function must follow this exact signature:"
msgstr ""

#: ../../guide/tool_composition.rst:189 a5b6dfd0cbda4efea337dc45a52835ca
msgid "Heterogeneous Workflow Construction"
msgstr ""

#: ../../guide/tool_composition.rst:191 a4b0803f5d1445f09b5682ee8f045116
msgid ""
"As illustrated in the ToolUniverse paper, a composed tool can run several"
" literature search tools concurrently and then invoke a summarization "
"agent to synthesize the findings, demonstrating heterogeneous workflow "
"construction in which each step is driven by tool execution. This "
"approach enables:"
msgstr ""

#: ../../guide/tool_composition.rst:193 3b7af2a476974828a81f3797936fd4b3
msgid ""
"**Multi-backend Integration**: Combine tools from different scientific "
"databases and APIs"
msgstr ""

#: ../../guide/tool_composition.rst:194 41f6bbcb597e408b9171b70fab5d85b6
msgid "**Concurrent Execution**: Run multiple tools simultaneously for efficiency"
msgstr ""

#: ../../guide/tool_composition.rst:195 f001fd62ffb64f25acd25da5ba8062f2
msgid ""
"**Intelligent Synthesis**: Use AI agents to synthesize results from "
"heterogeneous sources"
msgstr ""

#: ../../guide/tool_composition.rst:196 1931e5c9dcd04b25b3ba090708a85f0d
msgid ""
"**Adaptive Analysis**: Build workflows that can adapt based on "
"intermediate results"
msgstr ""

#: ../../guide/tool_composition.rst:199 84838e3b2c064349ba472369ee9311d4
msgid "Core Composition Patterns"
msgstr ""

#: ../../guide/tool_composition.rst:202 85b4dcf57b244b1f8867def6b5e45e92
msgid "1. Sequential Chaining"
msgstr ""

#: ../../guide/tool_composition.rst:204 62648ade088b45a5955659bd16c0c892
msgid "**Use Case**: Linear workflows where each step depends on the previous one"
msgstr ""

#: ../../guide/tool_composition.rst:206 6c31e743882448e28c92acc666684f84
msgid "**Pattern**: Chain the output of one tool into the input of the next"
msgstr ""

#: ../../guide/tool_composition.rst:276 38ca5ec2334244b9b44d15c19739ae37
msgid "2. Broadcasting (Parallel Execution)"
msgstr ""

#: ../../guide/tool_composition.rst:278 7b9c9d6c0c6e4501ac58775dab11c7a1
msgid "**Use Case**: Independent operations that can run simultaneously"
msgstr ""

#: ../../guide/tool_composition.rst:280 1d570703e1c74066b0460e3c1478d09c
msgid "**Pattern**: Call multiple tools with a single query (broadcasting)"
msgstr ""

#: ../../guide/tool_composition.rst:321 cddbeb3355ee4591870d13358b385987
msgid "3. Agentic Loops"
msgstr ""

#: ../../guide/tool_composition.rst:323 aecb11c11e034060acf8d1374d03586d
msgid "**Use Case**: Iterative optimization with AI guidance and tool feedback"
msgstr ""

#: ../../guide/tool_composition.rst:325 ef9bab09a74e47c997c05675204a70b6
msgid ""
"**Pattern**: Build agentic loops that use agentic tools to generate "
"function calls, execute tools, and incorporate tool feedback for multi-"
"step experimental analysis"
msgstr ""

#: ../../guide/tool_composition.rst:403 a5d6f7fb59494ee6a75281523802f82a
msgid "4. Error Handling and Fallbacks"
msgstr ""

#: ../../guide/tool_composition.rst:405 f213680409fb4547bbe4115df1e0dedb
msgid "**Use Case**: Robust workflows that handle failures gracefully"
msgstr ""

#: ../../guide/tool_composition.rst:407 c8abcb15fe90464782591dc83ce2f5c8
msgid "**Pattern**: Implement fallback mechanisms and graceful degradation"
msgstr ""

#: ../../guide/tool_composition.rst:456 25c3d725e8334adfb4da4fc360824b9e
msgid "Real-World Composition Examples"
msgstr ""

#: ../../guide/tool_composition.rst:458 b0e2149c0d0141e0b7b627a7a44bdd77
msgid ""
"For comprehensive examples of compose tools in action, see the "
":doc:`scientific_workflows` Tutorial, which includes:"
msgstr ""

#: ../../guide/tool_composition.rst:460 2df2828df0134fcfb273a4a64fb32b18
msgid ""
"**Comprehensive Drug Discovery Pipeline**: End-to-end workflow from "
"target identification to safety assessment"
msgstr ""

#: ../../guide/tool_composition.rst:461 1dc442287f8d4f9caca9cec689b0c0c3
msgid ""
"**Biomarker Discovery Workflow**: Multi-step biomarker validation using "
"literature, expression data, and pathway analysis"
msgstr ""

#: ../../guide/tool_composition.rst:462 9c2fd47966344ba7b25d3401258abdfa
msgid ""
"**Advanced Literature Review**: AI-powered systematic reviews with "
"citation analysis"
msgstr ""

#: ../../guide/tool_composition.rst:463 8edc287587a04eac8fac2ce93fc15b0d
msgid ""
"**Agentic Research Workflows**: Adaptive workflows that use AI feedback "
"for multi-step analysis"
msgstr ""

#: ../../guide/tool_composition.rst:465 80a2b17f522349b8babfc0e53bc389f3
msgid ""
"These examples demonstrate how compose tools can orchestrate complex "
"scientific workflows, combining tools from different backends to solve "
"real-world research problems."
msgstr ""

#: ../../guide/tool_composition.rst:468 cac39acde3914cd994c04d1c452e76b8
msgid "Tool Caller Interface"
msgstr ""

#: ../../guide/tool_composition.rst:470 8fb52ed1e2c247909348c748c8d7ce58
msgid ""
"The Tool Caller provides a callable interface that abstracts the "
"invocation of individual tools in ToolUniverse. This abstraction enables:"
msgstr ""

#: ../../guide/tool_composition.rst:472 fc8e368126bc45d8a3e73888df7d2532
msgid ""
"**Unified Tool Access**: All tools are accessed through the same "
"`call_tool` interface"
msgstr ""

#: ../../guide/tool_composition.rst:473 fe221e887f5a49d08e3c67835b2678ad
msgid ""
"**Protocol Compliance**: Tool calls follow the interaction protocol "
"schema of ToolUniverse"
msgstr ""

#: ../../guide/tool_composition.rst:474 8180fe227a0946fba11d5de45e010733
msgid "**Error Handling**: Consistent error handling across different tool types"
msgstr ""

#: ../../guide/tool_composition.rst:475 22149715001f463c99cf023187c2e0e4
msgid ""
"**Dependency Management**: Automatic loading and management of tool "
"dependencies"
msgstr ""

#: ../../guide/tool_composition.rst:477 50d022a6d448480ca580012f26cecff7
msgid "**Tool Caller Usage Pattern**:"
msgstr ""

#: ../../guide/tool_composition.rst:494 326b6a522f314fb88037a27f9330deeb
msgid "Troubleshooting"
msgstr ""

#: ../../guide/tool_composition.rst:497 5a0670f8b5214bfcae5ddbcd1ede95c5
msgid "Common Issues and Solutions"
msgstr ""

#: ../../guide/tool_composition.rst:499 b946ef9d6724490dbd232f219ff9ca42
msgid ""
"**Tool Not Found Error** - Check that the tool name is correct in your "
"compose script - Ensure the tool is loaded in ToolUniverse - Verify the "
"tool is in the `required_tools` list - Use `auto_load_dependencies: true`"
" to automatically load missing tools"
msgstr ""

#: ../../guide/tool_composition.rst:505 14e475566af7448dbcae335f83752abe
msgid ""
"**Import Errors** - Make sure your compose script is in the "
"`compose_scripts/` directory - Check that the function name matches "
"`composition_function` - Verify the function signature is correct: `def "
"compose(arguments, tooluniverse, call_tool):`"
msgstr ""

#: ../../guide/tool_composition.rst:510 75c06aaef12740ba8f1764ce8b383770
msgid ""
"**Parameter Errors** - Validate your parameter schema in the JSON "
"configuration - Check that required parameters are provided - Ensure "
"parameter types match the schema - Follow the interaction protocol schema"
" of ToolUniverse"
msgstr ""

#: ../../guide/tool_composition.rst:516 05d413d23da04b7aaaa0401efee45770
msgid ""
"**Performance Issues** - Limit the number of tools called in sequence - "
"Use `auto_load_dependencies: true` for automatic loading - Consider "
"caching results for repeated calls - Implement proper error handling to "
"avoid cascading failures"
msgstr ""

#: ../../guide/tool_composition.rst:522 66110aae29eb454b9f903adffc6edf79
msgid ""
"**Heterogeneous Backend Issues** - Ensure all required tools are "
"available across different backends - Use `fail_on_missing_tools: false` "
"for graceful degradation - Implement fallback mechanisms for critical "
"workflow steps"
msgstr ""

#: ../../guide/tool_composition.rst:528 8a0f5881121748c495076c1a0667ad36
msgid "Available Compose Tools"
msgstr ""

#: ../../guide/tool_composition.rst:530 17837e6d2c7042aab76681b4ed9090bb
msgid ""
"ToolUniverse currently provides several pre-built compose tools that "
"demonstrate different workflow patterns:"
msgstr ""

#: ../../guide/tool_composition.rst:532 6d792efddf894438bab09821c76ed970
msgid "**✅ Working Compose Tools**:"
msgstr ""

#: ../../guide/tool_composition.rst:534 62169bbd70484982a2b1577041d5789b
msgid ""
"**LiteratureSearchTool** - Literature research and synthesis - Searches "
"EuropePMC, OpenAlex, and PubTator databases - Uses AI agent for "
"literature summarization - Demonstrates broadcasting pattern"
msgstr ""

#: ../../guide/tool_composition.rst:539 5e0b4390009e4394ae4c652f6e53dc1e
msgid ""
"**ComprehensiveDrugDiscoveryPipeline** - End-to-end drug discovery - "
"Target identification using OpenTargets - Lead discovery from known drugs"
" - Safety assessment using ADMETAI tools - Literature validation - "
"Demonstrates sequential chaining with tool integration"
msgstr ""

#: ../../guide/tool_composition.rst:546 98f029230bbb4980932c404b5735468a
msgid ""
"**BiomarkerDiscoveryWorkflow** - Biomarker discovery and validation - "
"Literature-based biomarker discovery - Multi-strategy gene search using "
"HPA - Comprehensive pathway analysis using HPA tools - Clinical "
"validation using FDA data - Demonstrates multi-strategy fallbacks and "
"error handling"
msgstr ""

#: ../../guide/tool_composition.rst:553 cddc6066b786446990980c7e6e70bf23
msgid ""
"**DrugSafetyAnalyzer** - Drug safety assessment - PubChem compound "
"information retrieval - EuropePMC literature search - Demonstrates "
"safety-focused workflows"
msgstr ""

#: ../../guide/tool_composition.rst:558 62c5bc0100804c1eb26524c786ae4e5a
msgid ""
"**ToolDescriptionOptimizer** - Tool optimization - AI-powered tool "
"description improvement - Test case generation and quality evaluation - "
"Demonstrates agentic optimization loops"
msgstr ""

#: ../../guide/tool_composition.rst:563 b54a44082b1c4a27946b9bc5d454ae99
msgid ""
"**ToolDiscover** - Tool discovery and generation - AI-powered tool "
"creation from descriptions - Iterative code improvement - Demonstrates "
"advanced agentic workflows"
msgstr ""

#: ../../guide/tool_composition.rst:568 93aad734ff314fababf2152bbb8b6590
msgid ""
"**Key Features**: - **All tools tested and working** with real data "
"processing - **Comprehensive error handling** with graceful fallbacks - "
"**Tool chaining** for complex multi-step workflows - **Dynamic data "
"extraction** (e.g., SMILES from drug names) - **Multi-strategy "
"approaches** for robust data retrieval"
msgstr ""

#: ../../guide/tool_composition.rst:576 2ff7799489424153a5181efa349bbcdf
msgid "Summary"
msgstr ""

#: ../../guide/tool_composition.rst:578 8c9e2517ac484e27962d6d32ba09a7ff
msgid ""
"ToolUniverse's Tool Composer enables the creation of sophisticated "
"scientific workflows by combining individual tools with heterogeneous "
"backends. The container function `compose(arguments, tooluniverse, "
"call_tool)` serves as the execution backbone, providing:"
msgstr ""

#: ../../guide/tool_composition.rst:580 cb6e9c6972c4470081e7889666372de0
msgid ""
"**Flexible Multi-tool Execution**: Support for chaining, broadcasting, "
"and agentic loops"
msgstr ""

#: ../../guide/tool_composition.rst:581 1e660ebbde214af3b7dfe97861b0d598
msgid ""
"**Heterogeneous Integration**: Seamless combination of tools from "
"different scientific databases and APIs"
msgstr ""

#: ../../guide/tool_composition.rst:582 8020360aad25468a84fedc260bab5b9b
msgid ""
"**Adaptive Analysis**: Multi-step experimental analysis with tool "
"feedback incorporation"
msgstr ""

#: ../../guide/tool_composition.rst:583 90469d9c15b0444f976e154ac2c6b69a
msgid ""
"**Protocol Compliance**: Consistent interaction with tools through the "
"ToolUniverse schema"
msgstr ""

#: ../../guide/tool_composition.rst:585 475c787d68574277871e5da30a87d672
msgid ""
"The Tool Caller interface abstracts tool invocation, enabling developers "
"to focus on workflow logic rather than tool management details. This "
"architecture supports complex research patterns while maintaining "
"simplicity and reliability."
msgstr ""

#: ../../guide/tool_composition.rst:588 cd1ec4d0984844288d6362d5f2bc5cd2
msgid "Next Steps"
msgstr ""

#: ../../guide/tool_composition.rst:590 5d5b2dc0b52747869cfe749d9d3846ea
msgid ""
"**Learn Components**: :doc:`architecture` - Understand ToolUniverse "
"architecture"
msgstr ""

#: ../../guide/tool_composition.rst:591 ffe2ed07ed61454491a483ab8038d283
msgid ""
"**Build AI Scientists**: :doc:`building_ai_scientists/index` - Create "
"autonomous research workflows"
msgstr ""

#: ../../guide/tool_composition.rst:592 10c67e2e4803437c8e324653df5d8e31
msgid "**Case Studies**: :doc:`scientific_workflows` - Real composition examples"
msgstr ""

#: ../../guide/tool_composition.rst:593 1f400788395d4447829ea45a9c792e1f
msgid ""
"**Best Practices**: :doc:`best_practices` - Production workflow "
"optimization"
msgstr ""

#: ../../guide/tool_composition.rst:596 365357159d784583a48822684e25428c
msgid ""
"**Start simple**: Begin with sequential workflows like the "
"LiteratureSearchTool example, then progress to more complex patterns as "
"you become comfortable with tool composition."
msgstr ""

#: ../../guide/tool_composition.rst:599 0d4ea1535b6348e1829140f8135de901
msgid ""
"**Compose Tool Location**: All compose scripts must be placed in "
"`src/tooluniverse/compose_scripts/` directory and registered in "
"`src/tooluniverse/data/compose_tools.json`."
msgstr ""

#: ../../guide/tool_composition.rst:602 8a1956742a2047e8bae06b8cabd5cc53
msgid ""
"**Tool Composer Architecture**: The Tool Composer generates container "
"functions that expose ToolUniverse and Tool Caller as in-line, executable"
" primitives, enabling flexible multi-tool execution patterns for complex "
"scientific workflows."
msgstr ""

