# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Shanghua Gao
# This file is distributed under the same license as the ToolUniverse
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ToolUniverse\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 10:37-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../guide/tool_composition.rst:2 a9630f33a9c343acb5d1f22ce0628d79
msgid "Tool Composition Tutorial"
msgstr "工具组成教程"

#: ../../guide/tool_composition.rst:4 038cc327bdc64350a0d7324797118101
msgid "**Chain ToolUniverse's 600+ tools into powerful scientific workflows**"
msgstr "**将ToolUniverse的600多种工具整合为强大的科学工作流**"

#: ../../guide/tool_composition.rst:7 1584e128fd394f49860550765972eab9
msgid "Overview"
msgstr "概述"

#: ../../guide/tool_composition.rst:9 2283662712494f38a8a5d364d03dc954
msgid ""
"Tool composition is the art of combining individual scientific tools into "
"sophisticated research workflows. ToolUniverse's Tool Composer enables the "
"integration of tools with heterogeneous backends to build end-to-end "
"workflows. By leveraging the Tool Caller for direct in-code execution, Tool "
"Composer generates a container function that exposes both the Tool Caller "
"and ToolUniverse as in-line, executable primitives."
msgstr ""
"工具组合是一门将单个科学工具整合为复杂研究工作流的艺术。ToolUniverse 的工具组合器（Tool "
"Composer）支持集成具有异构后端的工具，以构建端到端的工作流。通过利用工具调用器（Tool "
"Caller）进行代码内的直接执行，工具组合器会生成一个容器函数，将工具调用器和 ToolUniverse 暴露为内联可执行的原语。"

#: ../../guide/tool_composition.rst:24 0cde3e4769454b5e91749c7ad7d11bb4
msgid ""
"**Benefits of Tool Composition**: - **Complex Research**: Solve multi-step "
"problems that no single tool can address - **Workflow Reuse**: Create "
"reusable research pipelines for common tasks - **Automation**: Reduce manual"
" coordination between different tools - **Quality Control**: Build in "
"validation and expert review at critical steps - **Heterogeneous "
"Integration**: Combine tools with different backends seamlessly - **Agentic "
"Loops**: Enable adaptive, multi-step experimental analysis"
msgstr ""
"**工具组合的优势**：  \n"
"- **复杂研究**：解决单一工具无法处理的多步骤问题  \n"
"- **工作流程复用**：为常见任务创建可重复使用的研究管道  \n"
"- **自动化**：减少不同工具之间的手动协调  \n"
"- **质量控制**：在关键步骤中嵌入验证和专家审查  \n"
"- **异构集成**：无缝组合具有不同后端的工具  \n"
"- **智能循环**：支持自适应的多步骤实验分析"

#: ../../guide/tool_composition.rst:33 84c98175d60b46c69b6a7449bf4dc078
msgid "Tool Composer Architecture"
msgstr "工具编写器架构"

#: ../../guide/tool_composition.rst:35 b6d7dbded7354540aca2d30faceaa4ff
msgid ""
"The Tool Composer generates a container function that serves as the "
"execution backbone for complex workflows. This container function, "
"implemented as `compose(arguments, tooluniverse, call_tool)`, contains the "
"logic for coordinating different types of tools so they work together in a "
"single workflow."
msgstr ""
"Tool Composer 会生成一个容器函数，作为复杂工作流的执行主干。该容器函数以 `compose(arguments, "
"tooluniverse, call_tool)` 的形式实现，包含用于协调不同类型工具的逻辑，从而使它们能够在单一工作流中协同工作。"

#: ../../guide/tool_composition.rst:37 a63ca151a8994b679585ba3abe059788
msgid "**Container Function Components**:"
msgstr "**容器功能组件**:"

#: ../../guide/tool_composition.rst:39 1105eeea1ce946f9b8c546597cd25014
msgid ""
"**arguments**: Specifies the tool call arguments that follow the interaction"
" protocol schema of ToolUniverse"
msgstr "**arguments**：指定遵循 ToolUniverse 交互协议架构的工具调用参数"

#: ../../guide/tool_composition.rst:40 4f39c67bdbe042c0bda5c7dc725da706
msgid ""
"**tooluniverse**: An instance of ToolUniverse that provides all available "
"functions that ToolUniverse can support"
msgstr "**tooluniverse**：ToolUniverse 的一个实例，提供 ToolUniverse 所支持的所有可用功能"

#: ../../guide/tool_composition.rst:41 d0f82bdbb9a04c0ea7a00d32d455e2e5
msgid ""
"**call_tool**: A callable interface of Tool Caller that abstracts the "
"invocation of individual tools in ToolUniverse"
msgstr "**call_tool**：Tool Caller 的可调用接口，用于抽象调用 ToolUniverse 中的各个工具"

#: ../../guide/tool_composition.rst:43 82c9beb1f32445bf9c2397a5471b5b1f
msgid ""
"**Execution Patterns**: - **Chaining**: Chain the output of one tool into "
"the input of the next - **Broadcasting**: Call multiple tools with a single "
"query - **Agentic Loops**: Build agentic loops that use agentic tools to "
"generate function calls, execute tools, and incorporate tool feedback for "
"multi-step experimental analysis"
msgstr ""
"**执行模式**：  \n"
"- **链式调用**：将一个工具的输出作为下一个工具的输入进行链式调用  \n"
"- **广播调用**：通过单个查询调用多个工具  \n"
"- **代理循环**：构建代理循环，利用代理工具生成函数调用、执行工具操作，并结合工具反馈进行多步骤实验分析"

#: ../../guide/tool_composition.rst:49 e50159d60e334e15a95f13f7d92c7972
msgid "How Tool Composition Works"
msgstr ""
"工具组成原理\n"
"\n"
"工具组成是指将多个工具模块组合在一起以实现特定功能的过程。这些模块可以是独立的组件，也可以是相互依赖的子系统。工具组成的核心在于模块之间的接口设计和数据流的有效管理。\n"
"\n"
"<h2>模块化设计</h2>\n"
"模块化设计允许开发者根据需求选择和组合不同的功能模块。这种设计方式不仅提高了系统的灵活性，还简化了维护和升级过程。\n"
"\n"
"<h2>接口和数据流</h2>\n"
"模块之间通过定义明确的接口进行通信。接口设计需要确保数据的完整性和兼容性，同时避免信息丢失或误传。数据流管理则负责协调模块之间的数据交换，确保系统的高效运行。\n"
"\n"
"<h2>工具组成的优势</h2>\n"
"工具组成的主要优势包括：\n"
"<ul>\n"
"  <li>提高开发效率</li>\n"
"  <li>增强系统扩展性</li>\n"
"  <li>简化故障排查</li>\n"
"</ul>\n"
"\n"
"通过合理的工具组成设计，开发者可以构建功能强大且易于维护的系统，从而满足复杂的业务需求。"

#: ../../guide/tool_composition.rst:51 ba96fa01412c409fb1a00f28138a76ed
msgid ""
"ToolUniverse's ComposeTool system works through a configuration-driven "
"approach:"
msgstr "ToolUniverse 的 ComposeTool 系统采用基于配置驱动的方法："

#: ../../guide/tool_composition.rst:53 4b354dcfdc3947e5bf8796fa8fdb3797
msgid ""
"**Configuration File**: Define compose tools in a JSON file like "
"`compose_tools.json`"
msgstr "**配置文件**：在类似于 `compose_tools.json` 的 JSON 文件中定义组合工具"

#: ../../guide/tool_composition.rst:54 f001583ae8b542c79461baac9bba3568
msgid ""
"**Implementation Script**: Write Python scripts in the compose environment: "
"`def compose(arguments, tooluniverse, call_tool): ...`"
msgstr ""
"**实现脚本**：在compose环境中编写Python脚本：`def compose(arguments, tooluniverse, "
"call_tool): ...`"

#: ../../guide/tool_composition.rst:55 f0cdfa7ca862428d9772463fdcff6eb4
msgid ""
"**Automatic Loading**: ComposeTool automatically loads dependencies and "
"executes workflows"
msgstr "**自动加载**：ComposeTool 自动加载依赖项并执行工作流"

#: ../../guide/tool_composition.rst:58 0b713d710af049fa9919a3a99f37b26b
msgid "Creating Your First Compose Tool"
msgstr "创建您的第一个 Compose 工具"

#: ../../guide/tool_composition.rst:60 a85759fedf4b455c8febb8e7514bedd3
msgid "Let's create a literature search and summary tool as an example:"
msgstr "让我们创建一个文献检索和摘要工具作为示例："

#: ../../guide/tool_composition.rst:63 793c56e8cf874420b236a0306bacbd9b
msgid "Step 1: Create the Implementation Script"
msgstr "步骤 1：创建实现脚本"

#: ../../guide/tool_composition.rst:65 b863863af05d4a03ae085b9109ad52c6
msgid "Create a file `src/tooluniverse/compose_scripts/literature_tool.py`:"
msgstr "创建文件 `src/tooluniverse/compose_scripts/literature_tool.py`："

#: ../../guide/tool_composition.rst:92 5702913b39504395a133fd0fa882938a
msgid "Step 2: Add Configuration to compose_tools.json"
msgstr "步骤 2：将配置添加到 compose_tools.json"

#: ../../guide/tool_composition.rst:94 d10a69c1935545adabbca130d3363889
msgid "Add this configuration to `src/tooluniverse/data/compose_tools.json`:"
msgstr "将以下配置添加到 `src/tooluniverse/data/compose_tools.json` 中："

#: ../../guide/tool_composition.rst:125 e5352b5b8d7e416fb806e9f897ad9324
msgid "Step 3: Use Your Compose Tool"
msgstr "步骤 3：使用撰写工具"

#: ../../guide/tool_composition.rst:127 d09b740c1191476ca836ba9555eaf465
msgid ""
"Once configured, you can use your compose tool like any other ToolUniverse "
"tool:"
msgstr "一旦配置完成，您即可像使用其他 ToolUniverse 工具一样使用您的 compose 工具："

#: ../../guide/tool_composition.rst:147 4bae3e4135554963ab8f8e684a621ebe
msgid "Compose Tool Configuration Reference"
msgstr "Compose 工具配置参考"

#: ../../guide/tool_composition.rst:150 104a744bbd9745bdae4b7f1569f301ea
msgid "Required Fields"
msgstr "必填字段"

#: ../../guide/tool_composition.rst:152 d3e733b511354b1481dfee2dd1b1b44a
msgid "**type**: Must be \"ComposeTool\""
msgstr "**类型**：必须为 \"ComposeTool\""

#: ../../guide/tool_composition.rst:153 e8a76a986e104882824ecfeefe969ce3
msgid "**name**: Unique name for your compose tool"
msgstr "**name**: 为您的编排工具设置唯一名称"

#: ../../guide/tool_composition.rst:154 7966e82250304d43910298864f20d39a
msgid "**description**: Human-readable description of what the tool does"
msgstr "**description**: 工具功能的人类可读描述"

#: ../../guide/tool_composition.rst:155 1592d5fbc9654f18a1818fcb0ca3bf08
msgid "**parameter**: JSON schema defining input parameters"
msgstr "**parameter**：定义输入参数的 JSON 模式"

#: ../../guide/tool_composition.rst:156 e3b8b891a002425580217c7c5433802d
msgid "**composition_file**: Python file in `compose_scripts/` directory"
msgstr "**composition_file**：`compose_scripts/` 目录中的 Python 文件"

#: ../../guide/tool_composition.rst:157 c84d501b5a0f40b5a83ea10e12c6d603
msgid "**composition_function**: Function name to call (usually \"compose\")"
msgstr "**composition_function**：调用的函数名称（通常为“compose”）"

#: ../../guide/tool_composition.rst:160 2863cc064aa84b45b735eefaaef26fd0
msgid "Optional Fields"
msgstr "可选字段"

#: ../../guide/tool_composition.rst:162 e165d979da3741328cfc6456f0885502
msgid ""
"**auto_load_dependencies**: Whether to automatically load required tools "
"(default: true)"
msgstr "**auto_load_dependencies**：是否自动加载所需工具（默认值：true）"

#: ../../guide/tool_composition.rst:163 43df3a7a2ac94783a571977b3507c061
msgid ""
"**fail_on_missing_tools**: Whether to fail if required tools are missing "
"(default: false)"
msgstr "**fail_on_missing_tools**：是否在缺少必要工具时失败（默认值：false）"

#: ../../guide/tool_composition.rst:164 ab632b0334be4b25af82415d5f0979d8
msgid "**required_tools**: List of tool names that must be available"
msgstr "**required_tools**：必须具备的工具名称列表"

#: ../../guide/tool_composition.rst:167 8141069cecdd4a76a48d0be8f9c91680
msgid "Compose Function Signature"
msgstr "函数签名组合"

#: ../../guide/tool_composition.rst:169 bf63e7b5d2b64b0186c546c2f2bb74eb
msgid "Your compose function must follow this exact signature:"
msgstr "您的 compose 函数必须遵循以下确切的签名："

#: ../../guide/tool_composition.rst:189 a5b6dfd0cbda4efea337dc45a52835ca
msgid "Heterogeneous Workflow Construction"
msgstr "异构工作流构建"

#: ../../guide/tool_composition.rst:191 a4b0803f5d1445f09b5682ee8f045116
msgid ""
"As illustrated in the ToolUniverse paper, a composed tool can run several "
"literature search tools concurrently and then invoke a summarization agent "
"to synthesize the findings, demonstrating heterogeneous workflow "
"construction in which each step is driven by tool execution. This approach "
"enables:"
msgstr ""
"如《ToolUniverse》论文所示，组合工具可以同时运行多个文献检索工具，随后调用摘要代理对结果进行综合，展示了异构工作流的构建方式，其中每个步骤均由工具执行驱动。该方法实现了："

#: ../../guide/tool_composition.rst:193 3b7af2a476974828a81f3797936fd4b3
msgid ""
"**Multi-backend Integration**: Combine tools from different scientific "
"databases and APIs"
msgstr "**多后端集成**：结合来自不同科学数据库和API的工具"

#: ../../guide/tool_composition.rst:194 41f6bbcb597e408b9171b70fab5d85b6
msgid ""
"**Concurrent Execution**: Run multiple tools simultaneously for efficiency"
msgstr "**并发执行**：同时运行多个工具以提高效率"

#: ../../guide/tool_composition.rst:195 f001fd62ffb64f25acd25da5ba8062f2
msgid ""
"**Intelligent Synthesis**: Use AI agents to synthesize results from "
"heterogeneous sources"
msgstr "**智能合成**：使用人工智能代理从异构来源合成结果"

#: ../../guide/tool_composition.rst:196 1931e5c9dcd04b25b3ba090708a85f0d
msgid ""
"**Adaptive Analysis**: Build workflows that can adapt based on intermediate "
"results"
msgstr "**自适应分析**：构建能够根据中间结果进行调整的工作流程"

#: ../../guide/tool_composition.rst:199 84838e3b2c064349ba472369ee9311d4
msgid "Core Composition Patterns"
msgstr "核心组成模式"

#: ../../guide/tool_composition.rst:202 85b4dcf57b244b1f8867def6b5e45e92
msgid "1. Sequential Chaining"
msgstr "1. 顺序链式调用"

#: ../../guide/tool_composition.rst:204 62648ade088b45a5955659bd16c0c892
msgid ""
"**Use Case**: Linear workflows where each step depends on the previous one"
msgstr "**用例**：每个步骤依赖于前一步的线性工作流程"

#: ../../guide/tool_composition.rst:206 6c31e743882448e28c92acc666684f84
msgid "**Pattern**: Chain the output of one tool into the input of the next"
msgstr "**模式**：将一个工具的输出链接为下一个工具的输入"

#: ../../guide/tool_composition.rst:276 38ca5ec2334244b9b44d15c19739ae37
msgid "2. Broadcasting (Parallel Execution)"
msgstr "2. 广播（并行执行）"

#: ../../guide/tool_composition.rst:278 7b9c9d6c0c6e4501ac58775dab11c7a1
msgid "**Use Case**: Independent operations that can run simultaneously"
msgstr "**用例**：可同时运行的独立操作"

#: ../../guide/tool_composition.rst:280 1d570703e1c74066b0460e3c1478d09c
msgid "**Pattern**: Call multiple tools with a single query (broadcasting)"
msgstr "**模式**：使用单个查询调用多个工具（广播）"

#: ../../guide/tool_composition.rst:321 cddbeb3355ee4591870d13358b385987
msgid "3. Agentic Loops"
msgstr "3. 代理循环"

#: ../../guide/tool_composition.rst:323 aecb11c11e034060acf8d1374d03586d
msgid ""
"**Use Case**: Iterative optimization with AI guidance and tool feedback"
msgstr "**用例**：在人工智能指导和工具反馈下的迭代优化"

#: ../../guide/tool_composition.rst:325 ef9bab09a74e47c997c05675204a70b6
msgid ""
"**Pattern**: Build agentic loops that use agentic tools to generate function"
" calls, execute tools, and incorporate tool feedback for multi-step "
"experimental analysis"
msgstr "**模式**：构建代理循环，利用代理工具生成函数调用、执行工具并结合工具反馈，以进行多步骤实验分析"

#: ../../guide/tool_composition.rst:403 a5d6f7fb59494ee6a75281523802f82a
msgid "4. Error Handling and Fallbacks"
msgstr "4. 错误处理与回退机制"

#: ../../guide/tool_composition.rst:405 f213680409fb4547bbe4115df1e0dedb
msgid "**Use Case**: Robust workflows that handle failures gracefully"
msgstr "**用例**：能够优雅处理故障的稳健工作流程"

#: ../../guide/tool_composition.rst:407 c8abcb15fe90464782591dc83ce2f5c8
msgid "**Pattern**: Implement fallback mechanisms and graceful degradation"
msgstr "**模式**：实现回退机制和优雅降级"

#: ../../guide/tool_composition.rst:456 25c3d725e8334adfb4da4fc360824b9e
msgid "Real-World Composition Examples"
msgstr "真实世界的组成示例"

#: ../../guide/tool_composition.rst:458 b0e2149c0d0141e0b7b627a7a44bdd77
msgid ""
"For comprehensive examples of compose tools in action, see the "
":doc:`scientific_workflows` Tutorial, which includes:"
msgstr "有关组合工具实际应用的完整示例，请参见 :doc:`scientific_workflows` 教程，其中包括："

#: ../../guide/tool_composition.rst:460 2df2828df0134fcfb273a4a64fb32b18
msgid ""
"**Comprehensive Drug Discovery Pipeline**: End-to-end workflow from target "
"identification to safety assessment"
msgstr "**全面的药物发现流程**：从靶点识别到安全性评估的端到端工作流程"

#: ../../guide/tool_composition.rst:461 1dc442287f8d4f9caca9cec689b0c0c3
msgid ""
"**Biomarker Discovery Workflow**: Multi-step biomarker validation using "
"literature, expression data, and pathway analysis"
msgstr "**生物标志物发现工作流程**：利用文献、表达数据和通路分析进行多步骤生物标志物验证"

#: ../../guide/tool_composition.rst:462 9c2fd47966344ba7b25d3401258abdfa
msgid ""
"**Advanced Literature Review**: AI-powered systematic reviews with citation "
"analysis"
msgstr "**高级文献综述**：基于人工智能的系统综述及引文分析"

#: ../../guide/tool_composition.rst:463 8edc287587a04eac8fac2ce93fc15b0d
msgid ""
"**Agentic Research Workflows**: Adaptive workflows that use AI feedback for "
"multi-step analysis"
msgstr "**自主研究工作流程**：利用人工智能反馈进行多步骤分析的自适应工作流程"

#: ../../guide/tool_composition.rst:465 80a2b17f522349b8babfc0e53bc389f3
msgid ""
"These examples demonstrate how compose tools can orchestrate complex "
"scientific workflows, combining tools from different backends to solve real-"
"world research problems."
msgstr "这些示例展示了组合工具如何协调复杂的科学工作流程，结合来自不同后端的工具以解决实际研究问题。"

#: ../../guide/tool_composition.rst:468 cac39acde3914cd994c04d1c452e76b8
msgid "Tool Caller Interface"
msgstr "工具调用接口"

#: ../../guide/tool_composition.rst:470 8fb52ed1e2c247909348c748c8d7ce58
msgid ""
"The Tool Caller provides a callable interface that abstracts the invocation "
"of individual tools in ToolUniverse. This abstraction enables:"
msgstr "Tool Caller 提供了一个可调用接口，用于抽象调用 ToolUniverse 中的各个工具。该抽象实现了："

#: ../../guide/tool_composition.rst:472 fc8e368126bc45d8a3e73888df7d2532
msgid ""
"**Unified Tool Access**: All tools are accessed through the same `call_tool`"
" interface"
msgstr "**统一工具访问**：所有工具均通过相同的 `call_tool` 接口访问"

#: ../../guide/tool_composition.rst:473 fe221e887f5a49d08e3c67835b2678ad
msgid ""
"**Protocol Compliance**: Tool calls follow the interaction protocol schema "
"of ToolUniverse"
msgstr "**协议合规性**：工具调用遵循 ToolUniverse 的交互协议规范。"

#: ../../guide/tool_composition.rst:474 8180fe227a0946fba11d5de45e010733
msgid ""
"**Error Handling**: Consistent error handling across different tool types"
msgstr "**错误处理**：在不同工具类型之间实现一致的错误处理"

#: ../../guide/tool_composition.rst:475 22149715001f463c99cf023187c2e0e4
msgid ""
"**Dependency Management**: Automatic loading and management of tool "
"dependencies"
msgstr "**依赖管理**：工具依赖的自动加载与管理"

#: ../../guide/tool_composition.rst:477 50d022a6d448480ca580012f26cecff7
msgid "**Tool Caller Usage Pattern**:"
msgstr "**工具调用者使用模式**："

#: ../../guide/tool_composition.rst:494 326b6a522f314fb88037a27f9330deeb
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../guide/tool_composition.rst:497 5a0670f8b5214bfcae5ddbcd1ede95c5
msgid "Common Issues and Solutions"
msgstr "常见问题及解决方案"

#: ../../guide/tool_composition.rst:499 b946ef9d6724490dbd232f219ff9ca42
msgid ""
"**Tool Not Found Error** - Check that the tool name is correct in your "
"compose script - Ensure the tool is loaded in ToolUniverse - Verify the tool"
" is in the `required_tools` list - Use `auto_load_dependencies: true` to "
"automatically load missing tools"
msgstr ""
"**工具未找到错误**  \n"
"- 检查您的编写脚本中工具名称是否正确  \n"
"- 确保该工具已加载到 ToolUniverse 中  \n"
"- 验证该工具是否在 `required_tools` 列表中  \n"
"- 使用 `auto_load_dependencies: true` 自动加载缺失的工具"

#: ../../guide/tool_composition.rst:505 14e475566af7448dbcae335f83752abe
msgid ""
"**Import Errors** - Make sure your compose script is in the "
"`compose_scripts/` directory - Check that the function name matches "
"`composition_function` - Verify the function signature is correct: `def "
"compose(arguments, tooluniverse, call_tool):`"
msgstr ""
"**导入错误**  \n"
"- 确保您的 compose 脚本位于 `compose_scripts/` 目录下  \n"
"- 检查函数名称是否为 `composition_function`  \n"
"- 验证函数签名是否正确：`def compose(arguments, tooluniverse, call_tool):`"

#: ../../guide/tool_composition.rst:510 75c06aaef12740ba8f1764ce8b383770
msgid ""
"**Parameter Errors** - Validate your parameter schema in the JSON "
"configuration - Check that required parameters are provided - Ensure "
"parameter types match the schema - Follow the interaction protocol schema of"
" ToolUniverse"
msgstr ""
"**参数错误**  \n"
"- 验证 JSON 配置中的参数架构  \n"
"- 检查是否提供了必需的参数  \n"
"- 确保参数类型与架构匹配  \n"
"- 遵循 ToolUniverse 的交互协议架构"

#: ../../guide/tool_composition.rst:516 05d413d23da04b7aaaa0401efee45770
msgid ""
"**Performance Issues** - Limit the number of tools called in sequence - Use "
"`auto_load_dependencies: true` for automatic loading - Consider caching "
"results for repeated calls - Implement proper error handling to avoid "
"cascading failures"
msgstr ""
"**性能问题**  \n"
"- 限制顺序调用的工具数量  \n"
"- 使用 `auto_load_dependencies: true` 实现自动加载  \n"
"- 考虑对重复调用的结果进行缓存  \n"
"- 实施适当的错误处理以避免级联故障"

#: ../../guide/tool_composition.rst:522 66110aae29eb454b9f903adffc6edf79
msgid ""
"**Heterogeneous Backend Issues** - Ensure all required tools are available "
"across different backends - Use `fail_on_missing_tools: false` for graceful "
"degradation - Implement fallback mechanisms for critical workflow steps"
msgstr ""
"**异构后端问题**  \n"
"- 确保所有必需工具在不同后端均可用  \n"
"- 对于缺失工具，使用 `fail_on_missing_tools: false` 实现优雅降级  \n"
"- 为关键工作流程步骤实现回退机制"

#: ../../guide/tool_composition.rst:528 8a0f5881121748c495076c1a0667ad36
msgid "Available Compose Tools"
msgstr "可用的编写工具"

#: ../../guide/tool_composition.rst:530 17837e6d2c7042aab76681b4ed9090bb
msgid ""
"ToolUniverse currently provides several pre-built compose tools that "
"demonstrate different workflow patterns:"
msgstr ""

#: ../../guide/tool_composition.rst:532 6d792efddf894438bab09821c76ed970
msgid "**✅ Working Compose Tools**:"
msgstr ""

#: ../../guide/tool_composition.rst:534 62169bbd70484982a2b1577041d5789b
msgid ""
"**LiteratureSearchTool** - Literature research and synthesis - Searches "
"EuropePMC, OpenAlex, and PubTator databases - Uses AI agent for literature "
"summarization - Demonstrates broadcasting pattern"
msgstr ""

#: ../../guide/tool_composition.rst:539 5e0b4390009e4394ae4c652f6e53dc1e
msgid ""
"**ComprehensiveDrugDiscoveryPipeline** - End-to-end drug discovery - Target "
"identification using OpenTargets - Lead discovery from known drugs - Safety "
"assessment using ADMETAI tools - Literature validation - Demonstrates "
"sequential chaining with tool integration"
msgstr ""

#: ../../guide/tool_composition.rst:546 98f029230bbb4980932c404b5735468a
msgid ""
"**BiomarkerDiscoveryWorkflow** - Biomarker discovery and validation - "
"Literature-based biomarker discovery - Multi-strategy gene search using HPA "
"- Comprehensive pathway analysis using HPA tools - Clinical validation using"
" FDA data - Demonstrates multi-strategy fallbacks and error handling"
msgstr ""

#: ../../guide/tool_composition.rst:553 cddc6066b786446990980c7e6e70bf23
msgid ""
"**DrugSafetyAnalyzer** - Drug safety assessment - PubChem compound "
"information retrieval - EuropePMC literature search - Demonstrates safety-"
"focused workflows"
msgstr ""

#: ../../guide/tool_composition.rst:558 62c5bc0100804c1eb26524c786ae4e5a
msgid ""
"**ToolDescriptionOptimizer** - Tool optimization - AI-powered tool "
"description improvement - Test case generation and quality evaluation - "
"Demonstrates agentic optimization loops"
msgstr ""

#: ../../guide/tool_composition.rst:563 b54a44082b1c4a27946b9bc5d454ae99
msgid ""
"**ToolDiscover** - Tool discovery and generation - AI-powered tool creation "
"from descriptions - Iterative code improvement - Demonstrates advanced "
"agentic workflows"
msgstr ""

#: ../../guide/tool_composition.rst:568 93aad734ff314fababf2152bbb8b6590
msgid ""
"**Key Features**: - **All tools tested and working** with real data "
"processing - **Comprehensive error handling** with graceful fallbacks - "
"**Tool chaining** for complex multi-step workflows - **Dynamic data "
"extraction** (e.g., SMILES from drug names) - **Multi-strategy approaches** "
"for robust data retrieval"
msgstr ""

#: ../../guide/tool_composition.rst:576 2ff7799489424153a5181efa349bbcdf
msgid "Summary"
msgstr ""

#: ../../guide/tool_composition.rst:578 8c9e2517ac484e27962d6d32ba09a7ff
msgid ""
"ToolUniverse's Tool Composer enables the creation of sophisticated "
"scientific workflows by combining individual tools with heterogeneous "
"backends. The container function `compose(arguments, tooluniverse, "
"call_tool)` serves as the execution backbone, providing:"
msgstr ""

#: ../../guide/tool_composition.rst:580 cb6e9c6972c4470081e7889666372de0
msgid ""
"**Flexible Multi-tool Execution**: Support for chaining, broadcasting, and "
"agentic loops"
msgstr ""

#: ../../guide/tool_composition.rst:581 1e660ebbde214af3b7dfe97861b0d598
msgid ""
"**Heterogeneous Integration**: Seamless combination of tools from different "
"scientific databases and APIs"
msgstr ""

#: ../../guide/tool_composition.rst:582 8020360aad25468a84fedc260bab5b9b
msgid ""
"**Adaptive Analysis**: Multi-step experimental analysis with tool feedback "
"incorporation"
msgstr ""

#: ../../guide/tool_composition.rst:583 90469d9c15b0444f976e154ac2c6b69a
msgid ""
"**Protocol Compliance**: Consistent interaction with tools through the "
"ToolUniverse schema"
msgstr ""

#: ../../guide/tool_composition.rst:585 475c787d68574277871e5da30a87d672
msgid ""
"The Tool Caller interface abstracts tool invocation, enabling developers to "
"focus on workflow logic rather than tool management details. This "
"architecture supports complex research patterns while maintaining simplicity"
" and reliability."
msgstr ""

#: ../../guide/tool_composition.rst:588 cd1ec4d0984844288d6362d5f2bc5cd2
msgid "Next Steps"
msgstr ""

#: ../../guide/tool_composition.rst:590 5d5b2dc0b52747869cfe749d9d3846ea
msgid ""
"**Learn Components**: :doc:`architecture` - Understand ToolUniverse "
"architecture"
msgstr ""

#: ../../guide/tool_composition.rst:591 ffe2ed07ed61454491a483ab8038d283
msgid ""
"**Build AI Scientists**: :doc:`building_ai_scientists/index` - Create "
"autonomous research workflows"
msgstr ""

#: ../../guide/tool_composition.rst:592 10c67e2e4803437c8e324653df5d8e31
msgid ""
"**Case Studies**: :doc:`scientific_workflows` - Real composition examples"
msgstr ""

#: ../../guide/tool_composition.rst:593 1f400788395d4447829ea45a9c792e1f
msgid ""
"**Best Practices**: :doc:`best_practices` - Production workflow optimization"
msgstr ""

#: ../../guide/tool_composition.rst:596 365357159d784583a48822684e25428c
msgid ""
"**Start simple**: Begin with sequential workflows like the "
"LiteratureSearchTool example, then progress to more complex patterns as you "
"become comfortable with tool composition."
msgstr ""

#: ../../guide/tool_composition.rst:599 0d4ea1535b6348e1829140f8135de901
msgid ""
"**Compose Tool Location**: All compose scripts must be placed in "
"`src/tooluniverse/compose_scripts/` directory and registered in "
"`src/tooluniverse/data/compose_tools.json`."
msgstr ""

#: ../../guide/tool_composition.rst:602 8a1956742a2047e8bae06b8cabd5cc53
msgid ""
"**Tool Composer Architecture**: The Tool Composer generates container "
"functions that expose ToolUniverse and Tool Caller as in-line, executable "
"primitives, enabling flexible multi-tool execution patterns for complex "
"scientific workflows."
msgstr ""
