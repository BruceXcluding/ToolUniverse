name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
      
      - name: Cache SDK generation
        uses: actions/cache@v3
        with:
          path: src/tooluniverse/tools
          key: ${{ runner.os }}-sdk-${{ hashFiles('scripts/build_tools.py', 'src/tooluniverse/data/*.json') }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Install project with dev extras
        run: |
          uv pip install -e .[dev] --system
          uv pip install pytest-xdist --system
      
      - name: Generate SDK
        run: python scripts/build_tools.py
      
      - name: Run fast tests (excluding tools, examples, and api)
        run: |
          pytest tests/ -v \
            --cov=tooluniverse \
            --cov-report=xml \
            --cov-report=term \
            -n auto \
            -m "not slow and not require_api_keys and not network" \
            --ignore=tests/tools \
            --ignore=tests/examples \
            --ignore=tests/api
      
      - name: Test doctor CLI tool
        run: |
          python -m src.tooluniverse.doctor
      
      - name: Run tools, examples, and api tests (optional, requires network)
        if: github.event.inputs.run_tools_tests == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          pytest tests/tools/ tests/examples/ tests/api/ -v \
            --tb=short \
            -m "not slow and not require_api_keys"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: coverage.xml


