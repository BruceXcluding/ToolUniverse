name: Publish to PyPI

on:
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check_version.outputs.changed }}
      new_version: ${{ steps.check_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check_version
        run: |
          # Get current version
          CURRENT_VERSION=$(grep -oP '(?<=version = ")[^"]+' pyproject.toml)
          echo "Current version: $CURRENT_VERSION"
          
          # Get previous commit version
          git checkout HEAD~1 -- pyproject.toml 2>/dev/null || true
          PREVIOUS_VERSION=$(grep -oP '(?<=version = ")[^"]+' pyproject.toml 2>/dev/null || echo "none")
          echo "Previous version: $PREVIOUS_VERSION"
          
          # Restore current version
          git checkout HEAD -- pyproject.toml
          
          # Check if version has changed
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  publish:
    needs: check-version-change
    if: needs.check-version-change.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Changed to write for branch creation
      id-token: write  # For PyPI trusted publishing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch creation

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      - name: Create version branch
        run: |
          VERSION="${{ needs.check-version-change.outputs.new_version }}"
          BRANCH_NAME="v$VERSION"
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if branch already exists
          if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists, skipping creation"
          else
            # Create and push the new branch
            git checkout -b $BRANCH_NAME
            git push origin $BRANCH_NAME
            echo "Created and pushed branch: $BRANCH_NAME"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version-change.outputs.new_version }}
          name: Release v${{ needs.check-version-change.outputs.new_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
